Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDBIT
    CONCAT
    LLAVDER
    LLAVIZQ
    MAYORBIT
    MENORBIT
    MIENTRAS
    NUMERO
    ORBIT
    XOR
    XORBIT

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instruccion instrucciones_p
Rule 3     instrucciones_p -> instruccion instrucciones_p
Rule 4     instrucciones_p -> <empty>
Rule 5     instruccion -> imprimir_instr
Rule 6     instruccion -> asignacion_temp
Rule 7     instruccion -> asignacion_param
Rule 8     instruccion -> asignacion_val
Rule 9     instruccion -> asignacion_dir
Rule 10    instruccion -> asignacion_pila
Rule 11    instruccion -> asignacion_puntero
Rule 12    instruccion -> borrar_temp
Rule 13    instruccion -> if_instr
Rule 14    instruccion -> metodo
Rule 15    instruccion -> goto
Rule 16    instruccion -> exit
Rule 17    exit -> EXIT PTCOMA
Rule 18    metodo -> ID DOSPUNTOS
Rule 19    imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA
Rule 20    borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA
Rule 21    asignacion_temp -> TEMP IGUAL expresiones PTCOMA
Rule 22    asignacion_param -> PARAM IGUAL expresiones PTCOMA
Rule 23    asignacion_val -> VAL IGUAL expresiones PTCOMA
Rule 24    asignacion_dir -> DIR IGUAL expresiones PTCOMA
Rule 25    asignacion_pila -> PILA IGUAL expresiones PTCOMA
Rule 26    asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA
Rule 27    asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA
Rule 28    asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA
Rule 29    h -> TEMP dimensiones
Rule 30    h -> PILA dimensiones
Rule 31    dimensiones -> dimension dimensiones_p
Rule 32    dimensiones_p -> dimension dimensiones_p
Rule 33    dimensiones_p -> <empty>
Rule 34    dimension -> CORIZQ h CORDER
Rule 35    if_instr -> IF PARIZQ expresiones PARDER h
Rule 36    expresiones -> expresion expresiones_p
Rule 37    expresiones_p -> expresion expresiones_p
Rule 38    expresiones_p -> <empty>
Rule 39    expresion -> a
Rule 40    a -> b a_p
Rule 41    a_p -> OR b a_p
Rule 42    a_p -> <empty>
Rule 43    b -> c b_p
Rule 44    b_p -> AND c b_p
Rule 45    b_p -> <empty>
Rule 46    c -> e c_p
Rule 47    c_p -> IGUALQUE e c_p
Rule 48    c_p -> NIGUALQUE e c_p
Rule 49    c_p -> <empty>
Rule 50    e -> f e_p
Rule 51    e_p -> MENQUE f e_p
Rule 52    e_p -> MAYQUE f e_p
Rule 53    e_p -> MENIGUAL f e_p
Rule 54    e_p -> MAYIGUAL f e_p
Rule 55    e_p -> <empty>
Rule 56    f -> g f_p
Rule 57    f_p -> MAS g f_p
Rule 58    f_p -> MENOS g f_p
Rule 59    f_p -> <empty>
Rule 60    g -> h g_p
Rule 61    g_p -> POR h g_p
Rule 62    g_p -> DIVIDIDO h g_p
Rule 63    g_p -> RESIDUO h g_p
Rule 64    g_p -> <empty>
Rule 65    h -> NOT expresiones
Rule 66    h -> NOTBIT expresiones
Rule 67    h -> PARIZQ INT PARDER expresiones
Rule 68    h -> PARIZQ FLOAT PARDER expresiones
Rule 69    h -> PARIZQ CHAR PARDER expresiones
Rule 70    h -> MENOS expresiones
Rule 71    h -> ABS PARIZQ expresiones PARDER
Rule 72    h -> PARIZQ expresiones PARDER
Rule 73    goto -> h
Rule 74    h -> GOTO expresiones PTCOMA
Rule 75    h -> ENTERO
Rule 76    h -> DECIMAL
Rule 77    h -> TEMP
Rule 78    h -> ID
Rule 79    h -> PARAM
Rule 80    h -> VAL
Rule 81    h -> DIR
Rule 82    h -> PILA
Rule 83    h -> PUNTERO
Rule 84    h -> CADENA
Rule 85    h -> CARACTER
Rule 86    h -> ARRAY PARIZQ PARDER

Terminals, with rules where they appear

ABS                  : 71
AND                  : 44
ANDBIT               : 
ARRAY                : 86
CADENA               : 84
CARACTER             : 85
CHAR                 : 69
CONCAT               : 
CORDER               : 34
CORIZQ               : 34
DECIMAL              : 76
DIR                  : 24 81
DIVIDIDO             : 62
DOSPUNTOS            : 18
ENTERO               : 75
EXIT                 : 17
FLOAT                : 68
GOTO                 : 74
ID                   : 18 78
IF                   : 35
IGUAL                : 21 22 23 24 25 26 27 28
IGUALQUE             : 47
IMPRIMIR             : 19
INT                  : 67
LLAVDER              : 
LLAVIZQ              : 
MAS                  : 57
MAYIGUAL             : 54
MAYORBIT             : 
MAYQUE               : 52
MENIGUAL             : 53
MENORBIT             : 
MENOS                : 58 70
MENQUE               : 51
MIENTRAS             : 
NIGUALQUE            : 48
NOT                  : 65
NOTBIT               : 66
NUMERO               : 
OR                   : 41
ORBIT                : 
PARAM                : 22 79
PARDER               : 19 20 35 67 68 69 71 72 86
PARIZQ               : 19 20 35 67 68 69 71 72 86
PILA                 : 25 28 30 82
POR                  : 61
PTCOMA               : 17 19 20 21 22 23 24 25 26 27 28 74
PUNTERO              : 26 83
RESIDUO              : 63
TEMP                 : 21 27 29 77
UNSET                : 20
VAL                  : 23 80
XOR                  : 
XORBIT               : 
error                : 

Nonterminals, with rules where they appear

a                    : 39
a_p                  : 40 41
asignacion_dir       : 9
asignacion_param     : 7
asignacion_pila      : 10
asignacion_puntero   : 11
asignacion_temp      : 6
asignacion_val       : 8
b                    : 40 41
b_p                  : 43 44
borrar_temp          : 12
c                    : 43 44
c_p                  : 46 47 48
dimension            : 31 32
dimensiones          : 27 28 29 30
dimensiones_p        : 31 32
e                    : 46 47 48
e_p                  : 50 51 52 53 54
exit                 : 16
expresion            : 36 37
expresiones          : 19 20 21 22 23 24 25 26 27 28 35 65 66 67 68 69 70 71 72 74
expresiones_p        : 36 37
f                    : 50 51 52 53 54
f_p                  : 56 57 58
g                    : 56 57 58
g_p                  : 60 61 62 63
goto                 : 15
h                    : 34 35 60 61 62 63 73
if_instr             : 13
imprimir_instr       : 5
init                 : 0
instruccion          : 2 3
instrucciones        : 1
instrucciones_p      : 2 3
metodo               : 14

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instruccion instrucciones_p
    (5) instruccion -> . imprimir_instr
    (6) instruccion -> . asignacion_temp
    (7) instruccion -> . asignacion_param
    (8) instruccion -> . asignacion_val
    (9) instruccion -> . asignacion_dir
    (10) instruccion -> . asignacion_pila
    (11) instruccion -> . asignacion_puntero
    (12) instruccion -> . borrar_temp
    (13) instruccion -> . if_instr
    (14) instruccion -> . metodo
    (15) instruccion -> . goto
    (16) instruccion -> . exit
    (19) imprimir_instr -> . IMPRIMIR PARIZQ expresiones PARDER PTCOMA
    (21) asignacion_temp -> . TEMP IGUAL expresiones PTCOMA
    (27) asignacion_temp -> . TEMP dimensiones IGUAL expresiones PTCOMA
    (28) asignacion_temp -> . PILA dimensiones IGUAL expresiones PTCOMA
    (22) asignacion_param -> . PARAM IGUAL expresiones PTCOMA
    (23) asignacion_val -> . VAL IGUAL expresiones PTCOMA
    (24) asignacion_dir -> . DIR IGUAL expresiones PTCOMA
    (25) asignacion_pila -> . PILA IGUAL expresiones PTCOMA
    (26) asignacion_puntero -> . PUNTERO IGUAL expresiones PTCOMA
    (20) borrar_temp -> . UNSET PARIZQ expresiones PARDER PTCOMA
    (35) if_instr -> . IF PARIZQ expresiones PARDER h
    (18) metodo -> . ID DOSPUNTOS
    (73) goto -> . h
    (17) exit -> . EXIT PTCOMA
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    IMPRIMIR        shift and go to state 16
    TEMP            shift and go to state 18
    PILA            shift and go to state 19
    PARAM           shift and go to state 20
    VAL             shift and go to state 21
    DIR             shift and go to state 22
    PUNTERO         shift and go to state 23
    UNSET           shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 27
    EXIT            shift and go to state 28
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir_instr                 shift and go to state 4
    asignacion_temp                shift and go to state 5
    asignacion_param               shift and go to state 6
    asignacion_val                 shift and go to state 7
    asignacion_dir                 shift and go to state 8
    asignacion_pila                shift and go to state 9
    asignacion_puntero             shift and go to state 10
    borrar_temp                    shift and go to state 11
    if_instr                       shift and go to state 12
    metodo                         shift and go to state 13
    goto                           shift and go to state 14
    exit                           shift and go to state 15
    h                              shift and go to state 26

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .

    $end            reduce using rule 1 (init -> instrucciones .)


state 3

    (2) instrucciones -> instruccion . instrucciones_p
    (3) instrucciones_p -> . instruccion instrucciones_p
    (4) instrucciones_p -> .
    (5) instruccion -> . imprimir_instr
    (6) instruccion -> . asignacion_temp
    (7) instruccion -> . asignacion_param
    (8) instruccion -> . asignacion_val
    (9) instruccion -> . asignacion_dir
    (10) instruccion -> . asignacion_pila
    (11) instruccion -> . asignacion_puntero
    (12) instruccion -> . borrar_temp
    (13) instruccion -> . if_instr
    (14) instruccion -> . metodo
    (15) instruccion -> . goto
    (16) instruccion -> . exit
    (19) imprimir_instr -> . IMPRIMIR PARIZQ expresiones PARDER PTCOMA
    (21) asignacion_temp -> . TEMP IGUAL expresiones PTCOMA
    (27) asignacion_temp -> . TEMP dimensiones IGUAL expresiones PTCOMA
    (28) asignacion_temp -> . PILA dimensiones IGUAL expresiones PTCOMA
    (22) asignacion_param -> . PARAM IGUAL expresiones PTCOMA
    (23) asignacion_val -> . VAL IGUAL expresiones PTCOMA
    (24) asignacion_dir -> . DIR IGUAL expresiones PTCOMA
    (25) asignacion_pila -> . PILA IGUAL expresiones PTCOMA
    (26) asignacion_puntero -> . PUNTERO IGUAL expresiones PTCOMA
    (20) borrar_temp -> . UNSET PARIZQ expresiones PARDER PTCOMA
    (35) if_instr -> . IF PARIZQ expresiones PARDER h
    (18) metodo -> . ID DOSPUNTOS
    (73) goto -> . h
    (17) exit -> . EXIT PTCOMA
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    $end            reduce using rule 4 (instrucciones_p -> .)
    IMPRIMIR        shift and go to state 16
    TEMP            shift and go to state 18
    PILA            shift and go to state 19
    PARAM           shift and go to state 20
    VAL             shift and go to state 21
    DIR             shift and go to state 22
    PUNTERO         shift and go to state 23
    UNSET           shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 27
    EXIT            shift and go to state 28
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    instruccion                    shift and go to state 39
    instrucciones_p                shift and go to state 40
    imprimir_instr                 shift and go to state 4
    asignacion_temp                shift and go to state 5
    asignacion_param               shift and go to state 6
    asignacion_val                 shift and go to state 7
    asignacion_dir                 shift and go to state 8
    asignacion_pila                shift and go to state 9
    asignacion_puntero             shift and go to state 10
    borrar_temp                    shift and go to state 11
    if_instr                       shift and go to state 12
    metodo                         shift and go to state 13
    goto                           shift and go to state 14
    exit                           shift and go to state 15
    h                              shift and go to state 26

state 4

    (5) instruccion -> imprimir_instr .

    IMPRIMIR        reduce using rule 5 (instruccion -> imprimir_instr .)
    TEMP            reduce using rule 5 (instruccion -> imprimir_instr .)
    PILA            reduce using rule 5 (instruccion -> imprimir_instr .)
    PARAM           reduce using rule 5 (instruccion -> imprimir_instr .)
    VAL             reduce using rule 5 (instruccion -> imprimir_instr .)
    DIR             reduce using rule 5 (instruccion -> imprimir_instr .)
    PUNTERO         reduce using rule 5 (instruccion -> imprimir_instr .)
    UNSET           reduce using rule 5 (instruccion -> imprimir_instr .)
    IF              reduce using rule 5 (instruccion -> imprimir_instr .)
    ID              reduce using rule 5 (instruccion -> imprimir_instr .)
    EXIT            reduce using rule 5 (instruccion -> imprimir_instr .)
    NOT             reduce using rule 5 (instruccion -> imprimir_instr .)
    NOTBIT          reduce using rule 5 (instruccion -> imprimir_instr .)
    PARIZQ          reduce using rule 5 (instruccion -> imprimir_instr .)
    MENOS           reduce using rule 5 (instruccion -> imprimir_instr .)
    ABS             reduce using rule 5 (instruccion -> imprimir_instr .)
    GOTO            reduce using rule 5 (instruccion -> imprimir_instr .)
    ENTERO          reduce using rule 5 (instruccion -> imprimir_instr .)
    DECIMAL         reduce using rule 5 (instruccion -> imprimir_instr .)
    CADENA          reduce using rule 5 (instruccion -> imprimir_instr .)
    CARACTER        reduce using rule 5 (instruccion -> imprimir_instr .)
    ARRAY           reduce using rule 5 (instruccion -> imprimir_instr .)
    $end            reduce using rule 5 (instruccion -> imprimir_instr .)


state 5

    (6) instruccion -> asignacion_temp .

    IMPRIMIR        reduce using rule 6 (instruccion -> asignacion_temp .)
    TEMP            reduce using rule 6 (instruccion -> asignacion_temp .)
    PILA            reduce using rule 6 (instruccion -> asignacion_temp .)
    PARAM           reduce using rule 6 (instruccion -> asignacion_temp .)
    VAL             reduce using rule 6 (instruccion -> asignacion_temp .)
    DIR             reduce using rule 6 (instruccion -> asignacion_temp .)
    PUNTERO         reduce using rule 6 (instruccion -> asignacion_temp .)
    UNSET           reduce using rule 6 (instruccion -> asignacion_temp .)
    IF              reduce using rule 6 (instruccion -> asignacion_temp .)
    ID              reduce using rule 6 (instruccion -> asignacion_temp .)
    EXIT            reduce using rule 6 (instruccion -> asignacion_temp .)
    NOT             reduce using rule 6 (instruccion -> asignacion_temp .)
    NOTBIT          reduce using rule 6 (instruccion -> asignacion_temp .)
    PARIZQ          reduce using rule 6 (instruccion -> asignacion_temp .)
    MENOS           reduce using rule 6 (instruccion -> asignacion_temp .)
    ABS             reduce using rule 6 (instruccion -> asignacion_temp .)
    GOTO            reduce using rule 6 (instruccion -> asignacion_temp .)
    ENTERO          reduce using rule 6 (instruccion -> asignacion_temp .)
    DECIMAL         reduce using rule 6 (instruccion -> asignacion_temp .)
    CADENA          reduce using rule 6 (instruccion -> asignacion_temp .)
    CARACTER        reduce using rule 6 (instruccion -> asignacion_temp .)
    ARRAY           reduce using rule 6 (instruccion -> asignacion_temp .)
    $end            reduce using rule 6 (instruccion -> asignacion_temp .)


state 6

    (7) instruccion -> asignacion_param .

    IMPRIMIR        reduce using rule 7 (instruccion -> asignacion_param .)
    TEMP            reduce using rule 7 (instruccion -> asignacion_param .)
    PILA            reduce using rule 7 (instruccion -> asignacion_param .)
    PARAM           reduce using rule 7 (instruccion -> asignacion_param .)
    VAL             reduce using rule 7 (instruccion -> asignacion_param .)
    DIR             reduce using rule 7 (instruccion -> asignacion_param .)
    PUNTERO         reduce using rule 7 (instruccion -> asignacion_param .)
    UNSET           reduce using rule 7 (instruccion -> asignacion_param .)
    IF              reduce using rule 7 (instruccion -> asignacion_param .)
    ID              reduce using rule 7 (instruccion -> asignacion_param .)
    EXIT            reduce using rule 7 (instruccion -> asignacion_param .)
    NOT             reduce using rule 7 (instruccion -> asignacion_param .)
    NOTBIT          reduce using rule 7 (instruccion -> asignacion_param .)
    PARIZQ          reduce using rule 7 (instruccion -> asignacion_param .)
    MENOS           reduce using rule 7 (instruccion -> asignacion_param .)
    ABS             reduce using rule 7 (instruccion -> asignacion_param .)
    GOTO            reduce using rule 7 (instruccion -> asignacion_param .)
    ENTERO          reduce using rule 7 (instruccion -> asignacion_param .)
    DECIMAL         reduce using rule 7 (instruccion -> asignacion_param .)
    CADENA          reduce using rule 7 (instruccion -> asignacion_param .)
    CARACTER        reduce using rule 7 (instruccion -> asignacion_param .)
    ARRAY           reduce using rule 7 (instruccion -> asignacion_param .)
    $end            reduce using rule 7 (instruccion -> asignacion_param .)


state 7

    (8) instruccion -> asignacion_val .

    IMPRIMIR        reduce using rule 8 (instruccion -> asignacion_val .)
    TEMP            reduce using rule 8 (instruccion -> asignacion_val .)
    PILA            reduce using rule 8 (instruccion -> asignacion_val .)
    PARAM           reduce using rule 8 (instruccion -> asignacion_val .)
    VAL             reduce using rule 8 (instruccion -> asignacion_val .)
    DIR             reduce using rule 8 (instruccion -> asignacion_val .)
    PUNTERO         reduce using rule 8 (instruccion -> asignacion_val .)
    UNSET           reduce using rule 8 (instruccion -> asignacion_val .)
    IF              reduce using rule 8 (instruccion -> asignacion_val .)
    ID              reduce using rule 8 (instruccion -> asignacion_val .)
    EXIT            reduce using rule 8 (instruccion -> asignacion_val .)
    NOT             reduce using rule 8 (instruccion -> asignacion_val .)
    NOTBIT          reduce using rule 8 (instruccion -> asignacion_val .)
    PARIZQ          reduce using rule 8 (instruccion -> asignacion_val .)
    MENOS           reduce using rule 8 (instruccion -> asignacion_val .)
    ABS             reduce using rule 8 (instruccion -> asignacion_val .)
    GOTO            reduce using rule 8 (instruccion -> asignacion_val .)
    ENTERO          reduce using rule 8 (instruccion -> asignacion_val .)
    DECIMAL         reduce using rule 8 (instruccion -> asignacion_val .)
    CADENA          reduce using rule 8 (instruccion -> asignacion_val .)
    CARACTER        reduce using rule 8 (instruccion -> asignacion_val .)
    ARRAY           reduce using rule 8 (instruccion -> asignacion_val .)
    $end            reduce using rule 8 (instruccion -> asignacion_val .)


state 8

    (9) instruccion -> asignacion_dir .

    IMPRIMIR        reduce using rule 9 (instruccion -> asignacion_dir .)
    TEMP            reduce using rule 9 (instruccion -> asignacion_dir .)
    PILA            reduce using rule 9 (instruccion -> asignacion_dir .)
    PARAM           reduce using rule 9 (instruccion -> asignacion_dir .)
    VAL             reduce using rule 9 (instruccion -> asignacion_dir .)
    DIR             reduce using rule 9 (instruccion -> asignacion_dir .)
    PUNTERO         reduce using rule 9 (instruccion -> asignacion_dir .)
    UNSET           reduce using rule 9 (instruccion -> asignacion_dir .)
    IF              reduce using rule 9 (instruccion -> asignacion_dir .)
    ID              reduce using rule 9 (instruccion -> asignacion_dir .)
    EXIT            reduce using rule 9 (instruccion -> asignacion_dir .)
    NOT             reduce using rule 9 (instruccion -> asignacion_dir .)
    NOTBIT          reduce using rule 9 (instruccion -> asignacion_dir .)
    PARIZQ          reduce using rule 9 (instruccion -> asignacion_dir .)
    MENOS           reduce using rule 9 (instruccion -> asignacion_dir .)
    ABS             reduce using rule 9 (instruccion -> asignacion_dir .)
    GOTO            reduce using rule 9 (instruccion -> asignacion_dir .)
    ENTERO          reduce using rule 9 (instruccion -> asignacion_dir .)
    DECIMAL         reduce using rule 9 (instruccion -> asignacion_dir .)
    CADENA          reduce using rule 9 (instruccion -> asignacion_dir .)
    CARACTER        reduce using rule 9 (instruccion -> asignacion_dir .)
    ARRAY           reduce using rule 9 (instruccion -> asignacion_dir .)
    $end            reduce using rule 9 (instruccion -> asignacion_dir .)


state 9

    (10) instruccion -> asignacion_pila .

    IMPRIMIR        reduce using rule 10 (instruccion -> asignacion_pila .)
    TEMP            reduce using rule 10 (instruccion -> asignacion_pila .)
    PILA            reduce using rule 10 (instruccion -> asignacion_pila .)
    PARAM           reduce using rule 10 (instruccion -> asignacion_pila .)
    VAL             reduce using rule 10 (instruccion -> asignacion_pila .)
    DIR             reduce using rule 10 (instruccion -> asignacion_pila .)
    PUNTERO         reduce using rule 10 (instruccion -> asignacion_pila .)
    UNSET           reduce using rule 10 (instruccion -> asignacion_pila .)
    IF              reduce using rule 10 (instruccion -> asignacion_pila .)
    ID              reduce using rule 10 (instruccion -> asignacion_pila .)
    EXIT            reduce using rule 10 (instruccion -> asignacion_pila .)
    NOT             reduce using rule 10 (instruccion -> asignacion_pila .)
    NOTBIT          reduce using rule 10 (instruccion -> asignacion_pila .)
    PARIZQ          reduce using rule 10 (instruccion -> asignacion_pila .)
    MENOS           reduce using rule 10 (instruccion -> asignacion_pila .)
    ABS             reduce using rule 10 (instruccion -> asignacion_pila .)
    GOTO            reduce using rule 10 (instruccion -> asignacion_pila .)
    ENTERO          reduce using rule 10 (instruccion -> asignacion_pila .)
    DECIMAL         reduce using rule 10 (instruccion -> asignacion_pila .)
    CADENA          reduce using rule 10 (instruccion -> asignacion_pila .)
    CARACTER        reduce using rule 10 (instruccion -> asignacion_pila .)
    ARRAY           reduce using rule 10 (instruccion -> asignacion_pila .)
    $end            reduce using rule 10 (instruccion -> asignacion_pila .)


state 10

    (11) instruccion -> asignacion_puntero .

    IMPRIMIR        reduce using rule 11 (instruccion -> asignacion_puntero .)
    TEMP            reduce using rule 11 (instruccion -> asignacion_puntero .)
    PILA            reduce using rule 11 (instruccion -> asignacion_puntero .)
    PARAM           reduce using rule 11 (instruccion -> asignacion_puntero .)
    VAL             reduce using rule 11 (instruccion -> asignacion_puntero .)
    DIR             reduce using rule 11 (instruccion -> asignacion_puntero .)
    PUNTERO         reduce using rule 11 (instruccion -> asignacion_puntero .)
    UNSET           reduce using rule 11 (instruccion -> asignacion_puntero .)
    IF              reduce using rule 11 (instruccion -> asignacion_puntero .)
    ID              reduce using rule 11 (instruccion -> asignacion_puntero .)
    EXIT            reduce using rule 11 (instruccion -> asignacion_puntero .)
    NOT             reduce using rule 11 (instruccion -> asignacion_puntero .)
    NOTBIT          reduce using rule 11 (instruccion -> asignacion_puntero .)
    PARIZQ          reduce using rule 11 (instruccion -> asignacion_puntero .)
    MENOS           reduce using rule 11 (instruccion -> asignacion_puntero .)
    ABS             reduce using rule 11 (instruccion -> asignacion_puntero .)
    GOTO            reduce using rule 11 (instruccion -> asignacion_puntero .)
    ENTERO          reduce using rule 11 (instruccion -> asignacion_puntero .)
    DECIMAL         reduce using rule 11 (instruccion -> asignacion_puntero .)
    CADENA          reduce using rule 11 (instruccion -> asignacion_puntero .)
    CARACTER        reduce using rule 11 (instruccion -> asignacion_puntero .)
    ARRAY           reduce using rule 11 (instruccion -> asignacion_puntero .)
    $end            reduce using rule 11 (instruccion -> asignacion_puntero .)


state 11

    (12) instruccion -> borrar_temp .

    IMPRIMIR        reduce using rule 12 (instruccion -> borrar_temp .)
    TEMP            reduce using rule 12 (instruccion -> borrar_temp .)
    PILA            reduce using rule 12 (instruccion -> borrar_temp .)
    PARAM           reduce using rule 12 (instruccion -> borrar_temp .)
    VAL             reduce using rule 12 (instruccion -> borrar_temp .)
    DIR             reduce using rule 12 (instruccion -> borrar_temp .)
    PUNTERO         reduce using rule 12 (instruccion -> borrar_temp .)
    UNSET           reduce using rule 12 (instruccion -> borrar_temp .)
    IF              reduce using rule 12 (instruccion -> borrar_temp .)
    ID              reduce using rule 12 (instruccion -> borrar_temp .)
    EXIT            reduce using rule 12 (instruccion -> borrar_temp .)
    NOT             reduce using rule 12 (instruccion -> borrar_temp .)
    NOTBIT          reduce using rule 12 (instruccion -> borrar_temp .)
    PARIZQ          reduce using rule 12 (instruccion -> borrar_temp .)
    MENOS           reduce using rule 12 (instruccion -> borrar_temp .)
    ABS             reduce using rule 12 (instruccion -> borrar_temp .)
    GOTO            reduce using rule 12 (instruccion -> borrar_temp .)
    ENTERO          reduce using rule 12 (instruccion -> borrar_temp .)
    DECIMAL         reduce using rule 12 (instruccion -> borrar_temp .)
    CADENA          reduce using rule 12 (instruccion -> borrar_temp .)
    CARACTER        reduce using rule 12 (instruccion -> borrar_temp .)
    ARRAY           reduce using rule 12 (instruccion -> borrar_temp .)
    $end            reduce using rule 12 (instruccion -> borrar_temp .)


state 12

    (13) instruccion -> if_instr .

    IMPRIMIR        reduce using rule 13 (instruccion -> if_instr .)
    TEMP            reduce using rule 13 (instruccion -> if_instr .)
    PILA            reduce using rule 13 (instruccion -> if_instr .)
    PARAM           reduce using rule 13 (instruccion -> if_instr .)
    VAL             reduce using rule 13 (instruccion -> if_instr .)
    DIR             reduce using rule 13 (instruccion -> if_instr .)
    PUNTERO         reduce using rule 13 (instruccion -> if_instr .)
    UNSET           reduce using rule 13 (instruccion -> if_instr .)
    IF              reduce using rule 13 (instruccion -> if_instr .)
    ID              reduce using rule 13 (instruccion -> if_instr .)
    EXIT            reduce using rule 13 (instruccion -> if_instr .)
    NOT             reduce using rule 13 (instruccion -> if_instr .)
    NOTBIT          reduce using rule 13 (instruccion -> if_instr .)
    PARIZQ          reduce using rule 13 (instruccion -> if_instr .)
    MENOS           reduce using rule 13 (instruccion -> if_instr .)
    ABS             reduce using rule 13 (instruccion -> if_instr .)
    GOTO            reduce using rule 13 (instruccion -> if_instr .)
    ENTERO          reduce using rule 13 (instruccion -> if_instr .)
    DECIMAL         reduce using rule 13 (instruccion -> if_instr .)
    CADENA          reduce using rule 13 (instruccion -> if_instr .)
    CARACTER        reduce using rule 13 (instruccion -> if_instr .)
    ARRAY           reduce using rule 13 (instruccion -> if_instr .)
    $end            reduce using rule 13 (instruccion -> if_instr .)


state 13

    (14) instruccion -> metodo .

    IMPRIMIR        reduce using rule 14 (instruccion -> metodo .)
    TEMP            reduce using rule 14 (instruccion -> metodo .)
    PILA            reduce using rule 14 (instruccion -> metodo .)
    PARAM           reduce using rule 14 (instruccion -> metodo .)
    VAL             reduce using rule 14 (instruccion -> metodo .)
    DIR             reduce using rule 14 (instruccion -> metodo .)
    PUNTERO         reduce using rule 14 (instruccion -> metodo .)
    UNSET           reduce using rule 14 (instruccion -> metodo .)
    IF              reduce using rule 14 (instruccion -> metodo .)
    ID              reduce using rule 14 (instruccion -> metodo .)
    EXIT            reduce using rule 14 (instruccion -> metodo .)
    NOT             reduce using rule 14 (instruccion -> metodo .)
    NOTBIT          reduce using rule 14 (instruccion -> metodo .)
    PARIZQ          reduce using rule 14 (instruccion -> metodo .)
    MENOS           reduce using rule 14 (instruccion -> metodo .)
    ABS             reduce using rule 14 (instruccion -> metodo .)
    GOTO            reduce using rule 14 (instruccion -> metodo .)
    ENTERO          reduce using rule 14 (instruccion -> metodo .)
    DECIMAL         reduce using rule 14 (instruccion -> metodo .)
    CADENA          reduce using rule 14 (instruccion -> metodo .)
    CARACTER        reduce using rule 14 (instruccion -> metodo .)
    ARRAY           reduce using rule 14 (instruccion -> metodo .)
    $end            reduce using rule 14 (instruccion -> metodo .)


state 14

    (15) instruccion -> goto .

    IMPRIMIR        reduce using rule 15 (instruccion -> goto .)
    TEMP            reduce using rule 15 (instruccion -> goto .)
    PILA            reduce using rule 15 (instruccion -> goto .)
    PARAM           reduce using rule 15 (instruccion -> goto .)
    VAL             reduce using rule 15 (instruccion -> goto .)
    DIR             reduce using rule 15 (instruccion -> goto .)
    PUNTERO         reduce using rule 15 (instruccion -> goto .)
    UNSET           reduce using rule 15 (instruccion -> goto .)
    IF              reduce using rule 15 (instruccion -> goto .)
    ID              reduce using rule 15 (instruccion -> goto .)
    EXIT            reduce using rule 15 (instruccion -> goto .)
    NOT             reduce using rule 15 (instruccion -> goto .)
    NOTBIT          reduce using rule 15 (instruccion -> goto .)
    PARIZQ          reduce using rule 15 (instruccion -> goto .)
    MENOS           reduce using rule 15 (instruccion -> goto .)
    ABS             reduce using rule 15 (instruccion -> goto .)
    GOTO            reduce using rule 15 (instruccion -> goto .)
    ENTERO          reduce using rule 15 (instruccion -> goto .)
    DECIMAL         reduce using rule 15 (instruccion -> goto .)
    CADENA          reduce using rule 15 (instruccion -> goto .)
    CARACTER        reduce using rule 15 (instruccion -> goto .)
    ARRAY           reduce using rule 15 (instruccion -> goto .)
    $end            reduce using rule 15 (instruccion -> goto .)


state 15

    (16) instruccion -> exit .

    IMPRIMIR        reduce using rule 16 (instruccion -> exit .)
    TEMP            reduce using rule 16 (instruccion -> exit .)
    PILA            reduce using rule 16 (instruccion -> exit .)
    PARAM           reduce using rule 16 (instruccion -> exit .)
    VAL             reduce using rule 16 (instruccion -> exit .)
    DIR             reduce using rule 16 (instruccion -> exit .)
    PUNTERO         reduce using rule 16 (instruccion -> exit .)
    UNSET           reduce using rule 16 (instruccion -> exit .)
    IF              reduce using rule 16 (instruccion -> exit .)
    ID              reduce using rule 16 (instruccion -> exit .)
    EXIT            reduce using rule 16 (instruccion -> exit .)
    NOT             reduce using rule 16 (instruccion -> exit .)
    NOTBIT          reduce using rule 16 (instruccion -> exit .)
    PARIZQ          reduce using rule 16 (instruccion -> exit .)
    MENOS           reduce using rule 16 (instruccion -> exit .)
    ABS             reduce using rule 16 (instruccion -> exit .)
    GOTO            reduce using rule 16 (instruccion -> exit .)
    ENTERO          reduce using rule 16 (instruccion -> exit .)
    DECIMAL         reduce using rule 16 (instruccion -> exit .)
    CADENA          reduce using rule 16 (instruccion -> exit .)
    CARACTER        reduce using rule 16 (instruccion -> exit .)
    ARRAY           reduce using rule 16 (instruccion -> exit .)
    $end            reduce using rule 16 (instruccion -> exit .)


state 16

    (19) imprimir_instr -> IMPRIMIR . PARIZQ expresiones PARDER PTCOMA

    PARIZQ          shift and go to state 41


state 17

    (67) h -> PARIZQ . INT PARDER expresiones
    (68) h -> PARIZQ . FLOAT PARDER expresiones
    (69) h -> PARIZQ . CHAR PARDER expresiones
    (72) h -> PARIZQ . expresiones PARDER
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    INT             shift and go to state 42
    FLOAT           shift and go to state 44
    CHAR            shift and go to state 45
    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 43
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 18

    (21) asignacion_temp -> TEMP . IGUAL expresiones PTCOMA
    (27) asignacion_temp -> TEMP . dimensiones IGUAL expresiones PTCOMA
    (29) h -> TEMP . dimensiones
    (77) h -> TEMP .
    (31) dimensiones -> . dimension dimensiones_p
    (34) dimension -> . CORIZQ h CORDER

    IGUAL           shift and go to state 61
    IMPRIMIR        reduce using rule 77 (h -> TEMP .)
    TEMP            reduce using rule 77 (h -> TEMP .)
    PILA            reduce using rule 77 (h -> TEMP .)
    PARAM           reduce using rule 77 (h -> TEMP .)
    VAL             reduce using rule 77 (h -> TEMP .)
    DIR             reduce using rule 77 (h -> TEMP .)
    PUNTERO         reduce using rule 77 (h -> TEMP .)
    UNSET           reduce using rule 77 (h -> TEMP .)
    IF              reduce using rule 77 (h -> TEMP .)
    ID              reduce using rule 77 (h -> TEMP .)
    EXIT            reduce using rule 77 (h -> TEMP .)
    NOT             reduce using rule 77 (h -> TEMP .)
    NOTBIT          reduce using rule 77 (h -> TEMP .)
    PARIZQ          reduce using rule 77 (h -> TEMP .)
    MENOS           reduce using rule 77 (h -> TEMP .)
    ABS             reduce using rule 77 (h -> TEMP .)
    GOTO            reduce using rule 77 (h -> TEMP .)
    ENTERO          reduce using rule 77 (h -> TEMP .)
    DECIMAL         reduce using rule 77 (h -> TEMP .)
    CADENA          reduce using rule 77 (h -> TEMP .)
    CARACTER        reduce using rule 77 (h -> TEMP .)
    ARRAY           reduce using rule 77 (h -> TEMP .)
    $end            reduce using rule 77 (h -> TEMP .)
    CORIZQ          shift and go to state 64

    dimensiones                    shift and go to state 62
    dimension                      shift and go to state 63

state 19

    (28) asignacion_temp -> PILA . dimensiones IGUAL expresiones PTCOMA
    (25) asignacion_pila -> PILA . IGUAL expresiones PTCOMA
    (30) h -> PILA . dimensiones
    (82) h -> PILA .
    (31) dimensiones -> . dimension dimensiones_p
    (34) dimension -> . CORIZQ h CORDER

    IGUAL           shift and go to state 66
    IMPRIMIR        reduce using rule 82 (h -> PILA .)
    TEMP            reduce using rule 82 (h -> PILA .)
    PILA            reduce using rule 82 (h -> PILA .)
    PARAM           reduce using rule 82 (h -> PILA .)
    VAL             reduce using rule 82 (h -> PILA .)
    DIR             reduce using rule 82 (h -> PILA .)
    PUNTERO         reduce using rule 82 (h -> PILA .)
    UNSET           reduce using rule 82 (h -> PILA .)
    IF              reduce using rule 82 (h -> PILA .)
    ID              reduce using rule 82 (h -> PILA .)
    EXIT            reduce using rule 82 (h -> PILA .)
    NOT             reduce using rule 82 (h -> PILA .)
    NOTBIT          reduce using rule 82 (h -> PILA .)
    PARIZQ          reduce using rule 82 (h -> PILA .)
    MENOS           reduce using rule 82 (h -> PILA .)
    ABS             reduce using rule 82 (h -> PILA .)
    GOTO            reduce using rule 82 (h -> PILA .)
    ENTERO          reduce using rule 82 (h -> PILA .)
    DECIMAL         reduce using rule 82 (h -> PILA .)
    CADENA          reduce using rule 82 (h -> PILA .)
    CARACTER        reduce using rule 82 (h -> PILA .)
    ARRAY           reduce using rule 82 (h -> PILA .)
    $end            reduce using rule 82 (h -> PILA .)
    CORIZQ          shift and go to state 64

    dimensiones                    shift and go to state 65
    dimension                      shift and go to state 63

state 20

    (22) asignacion_param -> PARAM . IGUAL expresiones PTCOMA
    (79) h -> PARAM .

    IGUAL           shift and go to state 67
    IMPRIMIR        reduce using rule 79 (h -> PARAM .)
    TEMP            reduce using rule 79 (h -> PARAM .)
    PILA            reduce using rule 79 (h -> PARAM .)
    PARAM           reduce using rule 79 (h -> PARAM .)
    VAL             reduce using rule 79 (h -> PARAM .)
    DIR             reduce using rule 79 (h -> PARAM .)
    PUNTERO         reduce using rule 79 (h -> PARAM .)
    UNSET           reduce using rule 79 (h -> PARAM .)
    IF              reduce using rule 79 (h -> PARAM .)
    ID              reduce using rule 79 (h -> PARAM .)
    EXIT            reduce using rule 79 (h -> PARAM .)
    NOT             reduce using rule 79 (h -> PARAM .)
    NOTBIT          reduce using rule 79 (h -> PARAM .)
    PARIZQ          reduce using rule 79 (h -> PARAM .)
    MENOS           reduce using rule 79 (h -> PARAM .)
    ABS             reduce using rule 79 (h -> PARAM .)
    GOTO            reduce using rule 79 (h -> PARAM .)
    ENTERO          reduce using rule 79 (h -> PARAM .)
    DECIMAL         reduce using rule 79 (h -> PARAM .)
    CADENA          reduce using rule 79 (h -> PARAM .)
    CARACTER        reduce using rule 79 (h -> PARAM .)
    ARRAY           reduce using rule 79 (h -> PARAM .)
    $end            reduce using rule 79 (h -> PARAM .)


state 21

    (23) asignacion_val -> VAL . IGUAL expresiones PTCOMA
    (80) h -> VAL .

    IGUAL           shift and go to state 68
    IMPRIMIR        reduce using rule 80 (h -> VAL .)
    TEMP            reduce using rule 80 (h -> VAL .)
    PILA            reduce using rule 80 (h -> VAL .)
    PARAM           reduce using rule 80 (h -> VAL .)
    VAL             reduce using rule 80 (h -> VAL .)
    DIR             reduce using rule 80 (h -> VAL .)
    PUNTERO         reduce using rule 80 (h -> VAL .)
    UNSET           reduce using rule 80 (h -> VAL .)
    IF              reduce using rule 80 (h -> VAL .)
    ID              reduce using rule 80 (h -> VAL .)
    EXIT            reduce using rule 80 (h -> VAL .)
    NOT             reduce using rule 80 (h -> VAL .)
    NOTBIT          reduce using rule 80 (h -> VAL .)
    PARIZQ          reduce using rule 80 (h -> VAL .)
    MENOS           reduce using rule 80 (h -> VAL .)
    ABS             reduce using rule 80 (h -> VAL .)
    GOTO            reduce using rule 80 (h -> VAL .)
    ENTERO          reduce using rule 80 (h -> VAL .)
    DECIMAL         reduce using rule 80 (h -> VAL .)
    CADENA          reduce using rule 80 (h -> VAL .)
    CARACTER        reduce using rule 80 (h -> VAL .)
    ARRAY           reduce using rule 80 (h -> VAL .)
    $end            reduce using rule 80 (h -> VAL .)


state 22

    (24) asignacion_dir -> DIR . IGUAL expresiones PTCOMA
    (81) h -> DIR .

    IGUAL           shift and go to state 69
    IMPRIMIR        reduce using rule 81 (h -> DIR .)
    TEMP            reduce using rule 81 (h -> DIR .)
    PILA            reduce using rule 81 (h -> DIR .)
    PARAM           reduce using rule 81 (h -> DIR .)
    VAL             reduce using rule 81 (h -> DIR .)
    DIR             reduce using rule 81 (h -> DIR .)
    PUNTERO         reduce using rule 81 (h -> DIR .)
    UNSET           reduce using rule 81 (h -> DIR .)
    IF              reduce using rule 81 (h -> DIR .)
    ID              reduce using rule 81 (h -> DIR .)
    EXIT            reduce using rule 81 (h -> DIR .)
    NOT             reduce using rule 81 (h -> DIR .)
    NOTBIT          reduce using rule 81 (h -> DIR .)
    PARIZQ          reduce using rule 81 (h -> DIR .)
    MENOS           reduce using rule 81 (h -> DIR .)
    ABS             reduce using rule 81 (h -> DIR .)
    GOTO            reduce using rule 81 (h -> DIR .)
    ENTERO          reduce using rule 81 (h -> DIR .)
    DECIMAL         reduce using rule 81 (h -> DIR .)
    CADENA          reduce using rule 81 (h -> DIR .)
    CARACTER        reduce using rule 81 (h -> DIR .)
    ARRAY           reduce using rule 81 (h -> DIR .)
    $end            reduce using rule 81 (h -> DIR .)


state 23

    (26) asignacion_puntero -> PUNTERO . IGUAL expresiones PTCOMA
    (83) h -> PUNTERO .

    IGUAL           shift and go to state 70
    IMPRIMIR        reduce using rule 83 (h -> PUNTERO .)
    TEMP            reduce using rule 83 (h -> PUNTERO .)
    PILA            reduce using rule 83 (h -> PUNTERO .)
    PARAM           reduce using rule 83 (h -> PUNTERO .)
    VAL             reduce using rule 83 (h -> PUNTERO .)
    DIR             reduce using rule 83 (h -> PUNTERO .)
    PUNTERO         reduce using rule 83 (h -> PUNTERO .)
    UNSET           reduce using rule 83 (h -> PUNTERO .)
    IF              reduce using rule 83 (h -> PUNTERO .)
    ID              reduce using rule 83 (h -> PUNTERO .)
    EXIT            reduce using rule 83 (h -> PUNTERO .)
    NOT             reduce using rule 83 (h -> PUNTERO .)
    NOTBIT          reduce using rule 83 (h -> PUNTERO .)
    PARIZQ          reduce using rule 83 (h -> PUNTERO .)
    MENOS           reduce using rule 83 (h -> PUNTERO .)
    ABS             reduce using rule 83 (h -> PUNTERO .)
    GOTO            reduce using rule 83 (h -> PUNTERO .)
    ENTERO          reduce using rule 83 (h -> PUNTERO .)
    DECIMAL         reduce using rule 83 (h -> PUNTERO .)
    CADENA          reduce using rule 83 (h -> PUNTERO .)
    CARACTER        reduce using rule 83 (h -> PUNTERO .)
    ARRAY           reduce using rule 83 (h -> PUNTERO .)
    $end            reduce using rule 83 (h -> PUNTERO .)


state 24

    (20) borrar_temp -> UNSET . PARIZQ expresiones PARDER PTCOMA

    PARIZQ          shift and go to state 71


state 25

    (35) if_instr -> IF . PARIZQ expresiones PARDER h

    PARIZQ          shift and go to state 72


state 26

    (73) goto -> h .

    IMPRIMIR        reduce using rule 73 (goto -> h .)
    TEMP            reduce using rule 73 (goto -> h .)
    PILA            reduce using rule 73 (goto -> h .)
    PARAM           reduce using rule 73 (goto -> h .)
    VAL             reduce using rule 73 (goto -> h .)
    DIR             reduce using rule 73 (goto -> h .)
    PUNTERO         reduce using rule 73 (goto -> h .)
    UNSET           reduce using rule 73 (goto -> h .)
    IF              reduce using rule 73 (goto -> h .)
    ID              reduce using rule 73 (goto -> h .)
    EXIT            reduce using rule 73 (goto -> h .)
    NOT             reduce using rule 73 (goto -> h .)
    NOTBIT          reduce using rule 73 (goto -> h .)
    PARIZQ          reduce using rule 73 (goto -> h .)
    MENOS           reduce using rule 73 (goto -> h .)
    ABS             reduce using rule 73 (goto -> h .)
    GOTO            reduce using rule 73 (goto -> h .)
    ENTERO          reduce using rule 73 (goto -> h .)
    DECIMAL         reduce using rule 73 (goto -> h .)
    CADENA          reduce using rule 73 (goto -> h .)
    CARACTER        reduce using rule 73 (goto -> h .)
    ARRAY           reduce using rule 73 (goto -> h .)
    $end            reduce using rule 73 (goto -> h .)


state 27

    (18) metodo -> ID . DOSPUNTOS
    (78) h -> ID .

    DOSPUNTOS       shift and go to state 73
    IMPRIMIR        reduce using rule 78 (h -> ID .)
    TEMP            reduce using rule 78 (h -> ID .)
    PILA            reduce using rule 78 (h -> ID .)
    PARAM           reduce using rule 78 (h -> ID .)
    VAL             reduce using rule 78 (h -> ID .)
    DIR             reduce using rule 78 (h -> ID .)
    PUNTERO         reduce using rule 78 (h -> ID .)
    UNSET           reduce using rule 78 (h -> ID .)
    IF              reduce using rule 78 (h -> ID .)
    ID              reduce using rule 78 (h -> ID .)
    EXIT            reduce using rule 78 (h -> ID .)
    NOT             reduce using rule 78 (h -> ID .)
    NOTBIT          reduce using rule 78 (h -> ID .)
    PARIZQ          reduce using rule 78 (h -> ID .)
    MENOS           reduce using rule 78 (h -> ID .)
    ABS             reduce using rule 78 (h -> ID .)
    GOTO            reduce using rule 78 (h -> ID .)
    ENTERO          reduce using rule 78 (h -> ID .)
    DECIMAL         reduce using rule 78 (h -> ID .)
    CADENA          reduce using rule 78 (h -> ID .)
    CARACTER        reduce using rule 78 (h -> ID .)
    ARRAY           reduce using rule 78 (h -> ID .)
    $end            reduce using rule 78 (h -> ID .)


state 28

    (17) exit -> EXIT . PTCOMA

    PTCOMA          shift and go to state 74


state 29

    (65) h -> NOT . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 75
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 30

    (66) h -> NOTBIT . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 76
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 31

    (70) h -> MENOS . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 77
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 32

    (71) h -> ABS . PARIZQ expresiones PARDER

    PARIZQ          shift and go to state 78


state 33

    (74) h -> GOTO . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 79
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 34

    (75) h -> ENTERO .

    IMPRIMIR        reduce using rule 75 (h -> ENTERO .)
    TEMP            reduce using rule 75 (h -> ENTERO .)
    PILA            reduce using rule 75 (h -> ENTERO .)
    PARAM           reduce using rule 75 (h -> ENTERO .)
    VAL             reduce using rule 75 (h -> ENTERO .)
    DIR             reduce using rule 75 (h -> ENTERO .)
    PUNTERO         reduce using rule 75 (h -> ENTERO .)
    UNSET           reduce using rule 75 (h -> ENTERO .)
    IF              reduce using rule 75 (h -> ENTERO .)
    ID              reduce using rule 75 (h -> ENTERO .)
    EXIT            reduce using rule 75 (h -> ENTERO .)
    NOT             reduce using rule 75 (h -> ENTERO .)
    NOTBIT          reduce using rule 75 (h -> ENTERO .)
    PARIZQ          reduce using rule 75 (h -> ENTERO .)
    MENOS           reduce using rule 75 (h -> ENTERO .)
    ABS             reduce using rule 75 (h -> ENTERO .)
    GOTO            reduce using rule 75 (h -> ENTERO .)
    ENTERO          reduce using rule 75 (h -> ENTERO .)
    DECIMAL         reduce using rule 75 (h -> ENTERO .)
    CADENA          reduce using rule 75 (h -> ENTERO .)
    CARACTER        reduce using rule 75 (h -> ENTERO .)
    ARRAY           reduce using rule 75 (h -> ENTERO .)
    $end            reduce using rule 75 (h -> ENTERO .)
    POR             reduce using rule 75 (h -> ENTERO .)
    DIVIDIDO        reduce using rule 75 (h -> ENTERO .)
    RESIDUO         reduce using rule 75 (h -> ENTERO .)
    MAS             reduce using rule 75 (h -> ENTERO .)
    MENQUE          reduce using rule 75 (h -> ENTERO .)
    MAYQUE          reduce using rule 75 (h -> ENTERO .)
    MENIGUAL        reduce using rule 75 (h -> ENTERO .)
    MAYIGUAL        reduce using rule 75 (h -> ENTERO .)
    IGUALQUE        reduce using rule 75 (h -> ENTERO .)
    NIGUALQUE       reduce using rule 75 (h -> ENTERO .)
    AND             reduce using rule 75 (h -> ENTERO .)
    OR              reduce using rule 75 (h -> ENTERO .)
    PARDER          reduce using rule 75 (h -> ENTERO .)
    PTCOMA          reduce using rule 75 (h -> ENTERO .)
    CORDER          reduce using rule 75 (h -> ENTERO .)


state 35

    (76) h -> DECIMAL .

    IMPRIMIR        reduce using rule 76 (h -> DECIMAL .)
    TEMP            reduce using rule 76 (h -> DECIMAL .)
    PILA            reduce using rule 76 (h -> DECIMAL .)
    PARAM           reduce using rule 76 (h -> DECIMAL .)
    VAL             reduce using rule 76 (h -> DECIMAL .)
    DIR             reduce using rule 76 (h -> DECIMAL .)
    PUNTERO         reduce using rule 76 (h -> DECIMAL .)
    UNSET           reduce using rule 76 (h -> DECIMAL .)
    IF              reduce using rule 76 (h -> DECIMAL .)
    ID              reduce using rule 76 (h -> DECIMAL .)
    EXIT            reduce using rule 76 (h -> DECIMAL .)
    NOT             reduce using rule 76 (h -> DECIMAL .)
    NOTBIT          reduce using rule 76 (h -> DECIMAL .)
    PARIZQ          reduce using rule 76 (h -> DECIMAL .)
    MENOS           reduce using rule 76 (h -> DECIMAL .)
    ABS             reduce using rule 76 (h -> DECIMAL .)
    GOTO            reduce using rule 76 (h -> DECIMAL .)
    ENTERO          reduce using rule 76 (h -> DECIMAL .)
    DECIMAL         reduce using rule 76 (h -> DECIMAL .)
    CADENA          reduce using rule 76 (h -> DECIMAL .)
    CARACTER        reduce using rule 76 (h -> DECIMAL .)
    ARRAY           reduce using rule 76 (h -> DECIMAL .)
    $end            reduce using rule 76 (h -> DECIMAL .)
    POR             reduce using rule 76 (h -> DECIMAL .)
    DIVIDIDO        reduce using rule 76 (h -> DECIMAL .)
    RESIDUO         reduce using rule 76 (h -> DECIMAL .)
    MAS             reduce using rule 76 (h -> DECIMAL .)
    MENQUE          reduce using rule 76 (h -> DECIMAL .)
    MAYQUE          reduce using rule 76 (h -> DECIMAL .)
    MENIGUAL        reduce using rule 76 (h -> DECIMAL .)
    MAYIGUAL        reduce using rule 76 (h -> DECIMAL .)
    IGUALQUE        reduce using rule 76 (h -> DECIMAL .)
    NIGUALQUE       reduce using rule 76 (h -> DECIMAL .)
    AND             reduce using rule 76 (h -> DECIMAL .)
    OR              reduce using rule 76 (h -> DECIMAL .)
    PARDER          reduce using rule 76 (h -> DECIMAL .)
    PTCOMA          reduce using rule 76 (h -> DECIMAL .)
    CORDER          reduce using rule 76 (h -> DECIMAL .)


state 36

    (84) h -> CADENA .

    IMPRIMIR        reduce using rule 84 (h -> CADENA .)
    TEMP            reduce using rule 84 (h -> CADENA .)
    PILA            reduce using rule 84 (h -> CADENA .)
    PARAM           reduce using rule 84 (h -> CADENA .)
    VAL             reduce using rule 84 (h -> CADENA .)
    DIR             reduce using rule 84 (h -> CADENA .)
    PUNTERO         reduce using rule 84 (h -> CADENA .)
    UNSET           reduce using rule 84 (h -> CADENA .)
    IF              reduce using rule 84 (h -> CADENA .)
    ID              reduce using rule 84 (h -> CADENA .)
    EXIT            reduce using rule 84 (h -> CADENA .)
    NOT             reduce using rule 84 (h -> CADENA .)
    NOTBIT          reduce using rule 84 (h -> CADENA .)
    PARIZQ          reduce using rule 84 (h -> CADENA .)
    MENOS           reduce using rule 84 (h -> CADENA .)
    ABS             reduce using rule 84 (h -> CADENA .)
    GOTO            reduce using rule 84 (h -> CADENA .)
    ENTERO          reduce using rule 84 (h -> CADENA .)
    DECIMAL         reduce using rule 84 (h -> CADENA .)
    CADENA          reduce using rule 84 (h -> CADENA .)
    CARACTER        reduce using rule 84 (h -> CADENA .)
    ARRAY           reduce using rule 84 (h -> CADENA .)
    $end            reduce using rule 84 (h -> CADENA .)
    POR             reduce using rule 84 (h -> CADENA .)
    DIVIDIDO        reduce using rule 84 (h -> CADENA .)
    RESIDUO         reduce using rule 84 (h -> CADENA .)
    MAS             reduce using rule 84 (h -> CADENA .)
    MENQUE          reduce using rule 84 (h -> CADENA .)
    MAYQUE          reduce using rule 84 (h -> CADENA .)
    MENIGUAL        reduce using rule 84 (h -> CADENA .)
    MAYIGUAL        reduce using rule 84 (h -> CADENA .)
    IGUALQUE        reduce using rule 84 (h -> CADENA .)
    NIGUALQUE       reduce using rule 84 (h -> CADENA .)
    AND             reduce using rule 84 (h -> CADENA .)
    OR              reduce using rule 84 (h -> CADENA .)
    PARDER          reduce using rule 84 (h -> CADENA .)
    PTCOMA          reduce using rule 84 (h -> CADENA .)
    CORDER          reduce using rule 84 (h -> CADENA .)


state 37

    (85) h -> CARACTER .

    IMPRIMIR        reduce using rule 85 (h -> CARACTER .)
    TEMP            reduce using rule 85 (h -> CARACTER .)
    PILA            reduce using rule 85 (h -> CARACTER .)
    PARAM           reduce using rule 85 (h -> CARACTER .)
    VAL             reduce using rule 85 (h -> CARACTER .)
    DIR             reduce using rule 85 (h -> CARACTER .)
    PUNTERO         reduce using rule 85 (h -> CARACTER .)
    UNSET           reduce using rule 85 (h -> CARACTER .)
    IF              reduce using rule 85 (h -> CARACTER .)
    ID              reduce using rule 85 (h -> CARACTER .)
    EXIT            reduce using rule 85 (h -> CARACTER .)
    NOT             reduce using rule 85 (h -> CARACTER .)
    NOTBIT          reduce using rule 85 (h -> CARACTER .)
    PARIZQ          reduce using rule 85 (h -> CARACTER .)
    MENOS           reduce using rule 85 (h -> CARACTER .)
    ABS             reduce using rule 85 (h -> CARACTER .)
    GOTO            reduce using rule 85 (h -> CARACTER .)
    ENTERO          reduce using rule 85 (h -> CARACTER .)
    DECIMAL         reduce using rule 85 (h -> CARACTER .)
    CADENA          reduce using rule 85 (h -> CARACTER .)
    CARACTER        reduce using rule 85 (h -> CARACTER .)
    ARRAY           reduce using rule 85 (h -> CARACTER .)
    $end            reduce using rule 85 (h -> CARACTER .)
    POR             reduce using rule 85 (h -> CARACTER .)
    DIVIDIDO        reduce using rule 85 (h -> CARACTER .)
    RESIDUO         reduce using rule 85 (h -> CARACTER .)
    MAS             reduce using rule 85 (h -> CARACTER .)
    MENQUE          reduce using rule 85 (h -> CARACTER .)
    MAYQUE          reduce using rule 85 (h -> CARACTER .)
    MENIGUAL        reduce using rule 85 (h -> CARACTER .)
    MAYIGUAL        reduce using rule 85 (h -> CARACTER .)
    IGUALQUE        reduce using rule 85 (h -> CARACTER .)
    NIGUALQUE       reduce using rule 85 (h -> CARACTER .)
    AND             reduce using rule 85 (h -> CARACTER .)
    OR              reduce using rule 85 (h -> CARACTER .)
    PARDER          reduce using rule 85 (h -> CARACTER .)
    PTCOMA          reduce using rule 85 (h -> CARACTER .)
    CORDER          reduce using rule 85 (h -> CARACTER .)


state 38

    (86) h -> ARRAY . PARIZQ PARDER

    PARIZQ          shift and go to state 80


state 39

    (3) instrucciones_p -> instruccion . instrucciones_p
    (3) instrucciones_p -> . instruccion instrucciones_p
    (4) instrucciones_p -> .
    (5) instruccion -> . imprimir_instr
    (6) instruccion -> . asignacion_temp
    (7) instruccion -> . asignacion_param
    (8) instruccion -> . asignacion_val
    (9) instruccion -> . asignacion_dir
    (10) instruccion -> . asignacion_pila
    (11) instruccion -> . asignacion_puntero
    (12) instruccion -> . borrar_temp
    (13) instruccion -> . if_instr
    (14) instruccion -> . metodo
    (15) instruccion -> . goto
    (16) instruccion -> . exit
    (19) imprimir_instr -> . IMPRIMIR PARIZQ expresiones PARDER PTCOMA
    (21) asignacion_temp -> . TEMP IGUAL expresiones PTCOMA
    (27) asignacion_temp -> . TEMP dimensiones IGUAL expresiones PTCOMA
    (28) asignacion_temp -> . PILA dimensiones IGUAL expresiones PTCOMA
    (22) asignacion_param -> . PARAM IGUAL expresiones PTCOMA
    (23) asignacion_val -> . VAL IGUAL expresiones PTCOMA
    (24) asignacion_dir -> . DIR IGUAL expresiones PTCOMA
    (25) asignacion_pila -> . PILA IGUAL expresiones PTCOMA
    (26) asignacion_puntero -> . PUNTERO IGUAL expresiones PTCOMA
    (20) borrar_temp -> . UNSET PARIZQ expresiones PARDER PTCOMA
    (35) if_instr -> . IF PARIZQ expresiones PARDER h
    (18) metodo -> . ID DOSPUNTOS
    (73) goto -> . h
    (17) exit -> . EXIT PTCOMA
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    $end            reduce using rule 4 (instrucciones_p -> .)
    IMPRIMIR        shift and go to state 16
    TEMP            shift and go to state 18
    PILA            shift and go to state 19
    PARAM           shift and go to state 20
    VAL             shift and go to state 21
    DIR             shift and go to state 22
    PUNTERO         shift and go to state 23
    UNSET           shift and go to state 24
    IF              shift and go to state 25
    ID              shift and go to state 27
    EXIT            shift and go to state 28
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    instruccion                    shift and go to state 39
    instrucciones_p                shift and go to state 81
    imprimir_instr                 shift and go to state 4
    asignacion_temp                shift and go to state 5
    asignacion_param               shift and go to state 6
    asignacion_val                 shift and go to state 7
    asignacion_dir                 shift and go to state 8
    asignacion_pila                shift and go to state 9
    asignacion_puntero             shift and go to state 10
    borrar_temp                    shift and go to state 11
    if_instr                       shift and go to state 12
    metodo                         shift and go to state 13
    goto                           shift and go to state 14
    exit                           shift and go to state 15
    h                              shift and go to state 26

state 40

    (2) instrucciones -> instruccion instrucciones_p .

    $end            reduce using rule 2 (instrucciones -> instruccion instrucciones_p .)


state 41

    (19) imprimir_instr -> IMPRIMIR PARIZQ . expresiones PARDER PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 82
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 42

    (67) h -> PARIZQ INT . PARDER expresiones

    PARDER          shift and go to state 83


state 43

    (72) h -> PARIZQ expresiones . PARDER

    PARDER          shift and go to state 84


state 44

    (68) h -> PARIZQ FLOAT . PARDER expresiones

    PARDER          shift and go to state 85


state 45

    (69) h -> PARIZQ CHAR . PARDER expresiones

    PARDER          shift and go to state 86


state 46

    (36) expresiones -> expresion . expresiones_p
    (37) expresiones_p -> . expresion expresiones_p
    (38) expresiones_p -> .
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

  ! shift/reduce conflict for TEMP resolved as shift
  ! shift/reduce conflict for PILA resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NOTBIT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARAM resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for PUNTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
    IMPRIMIR        reduce using rule 38 (expresiones_p -> .)
    UNSET           reduce using rule 38 (expresiones_p -> .)
    IF              reduce using rule 38 (expresiones_p -> .)
    EXIT            reduce using rule 38 (expresiones_p -> .)
    $end            reduce using rule 38 (expresiones_p -> .)
    POR             reduce using rule 38 (expresiones_p -> .)
    DIVIDIDO        reduce using rule 38 (expresiones_p -> .)
    RESIDUO         reduce using rule 38 (expresiones_p -> .)
    MAS             reduce using rule 38 (expresiones_p -> .)
    MENQUE          reduce using rule 38 (expresiones_p -> .)
    MAYQUE          reduce using rule 38 (expresiones_p -> .)
    MENIGUAL        reduce using rule 38 (expresiones_p -> .)
    MAYIGUAL        reduce using rule 38 (expresiones_p -> .)
    IGUALQUE        reduce using rule 38 (expresiones_p -> .)
    NIGUALQUE       reduce using rule 38 (expresiones_p -> .)
    AND             reduce using rule 38 (expresiones_p -> .)
    OR              reduce using rule 38 (expresiones_p -> .)
    PARDER          reduce using rule 38 (expresiones_p -> .)
    PTCOMA          reduce using rule 38 (expresiones_p -> .)
    CORDER          reduce using rule 38 (expresiones_p -> .)
    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

  ! TEMP            [ reduce using rule 38 (expresiones_p -> .) ]
  ! PILA            [ reduce using rule 38 (expresiones_p -> .) ]
  ! PARAM           [ reduce using rule 38 (expresiones_p -> .) ]
  ! VAL             [ reduce using rule 38 (expresiones_p -> .) ]
  ! DIR             [ reduce using rule 38 (expresiones_p -> .) ]
  ! PUNTERO         [ reduce using rule 38 (expresiones_p -> .) ]
  ! ID              [ reduce using rule 38 (expresiones_p -> .) ]
  ! NOT             [ reduce using rule 38 (expresiones_p -> .) ]
  ! NOTBIT          [ reduce using rule 38 (expresiones_p -> .) ]
  ! PARIZQ          [ reduce using rule 38 (expresiones_p -> .) ]
  ! MENOS           [ reduce using rule 38 (expresiones_p -> .) ]
  ! ABS             [ reduce using rule 38 (expresiones_p -> .) ]
  ! GOTO            [ reduce using rule 38 (expresiones_p -> .) ]
  ! ENTERO          [ reduce using rule 38 (expresiones_p -> .) ]
  ! DECIMAL         [ reduce using rule 38 (expresiones_p -> .) ]
  ! CADENA          [ reduce using rule 38 (expresiones_p -> .) ]
  ! CARACTER        [ reduce using rule 38 (expresiones_p -> .) ]
  ! ARRAY           [ reduce using rule 38 (expresiones_p -> .) ]

    expresion                      shift and go to state 87
    expresiones_p                  shift and go to state 88
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 47

    (39) expresion -> a .

    TEMP            reduce using rule 39 (expresion -> a .)
    PILA            reduce using rule 39 (expresion -> a .)
    NOT             reduce using rule 39 (expresion -> a .)
    NOTBIT          reduce using rule 39 (expresion -> a .)
    PARIZQ          reduce using rule 39 (expresion -> a .)
    MENOS           reduce using rule 39 (expresion -> a .)
    ABS             reduce using rule 39 (expresion -> a .)
    GOTO            reduce using rule 39 (expresion -> a .)
    ENTERO          reduce using rule 39 (expresion -> a .)
    DECIMAL         reduce using rule 39 (expresion -> a .)
    ID              reduce using rule 39 (expresion -> a .)
    PARAM           reduce using rule 39 (expresion -> a .)
    VAL             reduce using rule 39 (expresion -> a .)
    DIR             reduce using rule 39 (expresion -> a .)
    PUNTERO         reduce using rule 39 (expresion -> a .)
    CADENA          reduce using rule 39 (expresion -> a .)
    CARACTER        reduce using rule 39 (expresion -> a .)
    ARRAY           reduce using rule 39 (expresion -> a .)
    PARDER          reduce using rule 39 (expresion -> a .)
    IMPRIMIR        reduce using rule 39 (expresion -> a .)
    UNSET           reduce using rule 39 (expresion -> a .)
    IF              reduce using rule 39 (expresion -> a .)
    EXIT            reduce using rule 39 (expresion -> a .)
    $end            reduce using rule 39 (expresion -> a .)
    POR             reduce using rule 39 (expresion -> a .)
    DIVIDIDO        reduce using rule 39 (expresion -> a .)
    RESIDUO         reduce using rule 39 (expresion -> a .)
    MAS             reduce using rule 39 (expresion -> a .)
    MENQUE          reduce using rule 39 (expresion -> a .)
    MAYQUE          reduce using rule 39 (expresion -> a .)
    MENIGUAL        reduce using rule 39 (expresion -> a .)
    MAYIGUAL        reduce using rule 39 (expresion -> a .)
    IGUALQUE        reduce using rule 39 (expresion -> a .)
    NIGUALQUE       reduce using rule 39 (expresion -> a .)
    AND             reduce using rule 39 (expresion -> a .)
    OR              reduce using rule 39 (expresion -> a .)
    PTCOMA          reduce using rule 39 (expresion -> a .)
    CORDER          reduce using rule 39 (expresion -> a .)


state 48

    (40) a -> b . a_p
    (41) a_p -> . OR b a_p
    (42) a_p -> .

  ! shift/reduce conflict for OR resolved as shift
    OR              shift and go to state 90
    IMPRIMIR        reduce using rule 42 (a_p -> .)
    TEMP            reduce using rule 42 (a_p -> .)
    PILA            reduce using rule 42 (a_p -> .)
    PARAM           reduce using rule 42 (a_p -> .)
    VAL             reduce using rule 42 (a_p -> .)
    DIR             reduce using rule 42 (a_p -> .)
    PUNTERO         reduce using rule 42 (a_p -> .)
    UNSET           reduce using rule 42 (a_p -> .)
    IF              reduce using rule 42 (a_p -> .)
    ID              reduce using rule 42 (a_p -> .)
    EXIT            reduce using rule 42 (a_p -> .)
    NOT             reduce using rule 42 (a_p -> .)
    NOTBIT          reduce using rule 42 (a_p -> .)
    PARIZQ          reduce using rule 42 (a_p -> .)
    MENOS           reduce using rule 42 (a_p -> .)
    ABS             reduce using rule 42 (a_p -> .)
    GOTO            reduce using rule 42 (a_p -> .)
    ENTERO          reduce using rule 42 (a_p -> .)
    DECIMAL         reduce using rule 42 (a_p -> .)
    CADENA          reduce using rule 42 (a_p -> .)
    CARACTER        reduce using rule 42 (a_p -> .)
    ARRAY           reduce using rule 42 (a_p -> .)
    $end            reduce using rule 42 (a_p -> .)
    POR             reduce using rule 42 (a_p -> .)
    DIVIDIDO        reduce using rule 42 (a_p -> .)
    RESIDUO         reduce using rule 42 (a_p -> .)
    MAS             reduce using rule 42 (a_p -> .)
    MENQUE          reduce using rule 42 (a_p -> .)
    MAYQUE          reduce using rule 42 (a_p -> .)
    MENIGUAL        reduce using rule 42 (a_p -> .)
    MAYIGUAL        reduce using rule 42 (a_p -> .)
    IGUALQUE        reduce using rule 42 (a_p -> .)
    NIGUALQUE       reduce using rule 42 (a_p -> .)
    AND             reduce using rule 42 (a_p -> .)
    PARDER          reduce using rule 42 (a_p -> .)
    PTCOMA          reduce using rule 42 (a_p -> .)
    CORDER          reduce using rule 42 (a_p -> .)

  ! OR              [ reduce using rule 42 (a_p -> .) ]

    a_p                            shift and go to state 89

state 49

    (43) b -> c . b_p
    (44) b_p -> . AND c b_p
    (45) b_p -> .

  ! shift/reduce conflict for AND resolved as shift
    AND             shift and go to state 92
    IMPRIMIR        reduce using rule 45 (b_p -> .)
    TEMP            reduce using rule 45 (b_p -> .)
    PILA            reduce using rule 45 (b_p -> .)
    PARAM           reduce using rule 45 (b_p -> .)
    VAL             reduce using rule 45 (b_p -> .)
    DIR             reduce using rule 45 (b_p -> .)
    PUNTERO         reduce using rule 45 (b_p -> .)
    UNSET           reduce using rule 45 (b_p -> .)
    IF              reduce using rule 45 (b_p -> .)
    ID              reduce using rule 45 (b_p -> .)
    EXIT            reduce using rule 45 (b_p -> .)
    NOT             reduce using rule 45 (b_p -> .)
    NOTBIT          reduce using rule 45 (b_p -> .)
    PARIZQ          reduce using rule 45 (b_p -> .)
    MENOS           reduce using rule 45 (b_p -> .)
    ABS             reduce using rule 45 (b_p -> .)
    GOTO            reduce using rule 45 (b_p -> .)
    ENTERO          reduce using rule 45 (b_p -> .)
    DECIMAL         reduce using rule 45 (b_p -> .)
    CADENA          reduce using rule 45 (b_p -> .)
    CARACTER        reduce using rule 45 (b_p -> .)
    ARRAY           reduce using rule 45 (b_p -> .)
    $end            reduce using rule 45 (b_p -> .)
    POR             reduce using rule 45 (b_p -> .)
    DIVIDIDO        reduce using rule 45 (b_p -> .)
    RESIDUO         reduce using rule 45 (b_p -> .)
    MAS             reduce using rule 45 (b_p -> .)
    MENQUE          reduce using rule 45 (b_p -> .)
    MAYQUE          reduce using rule 45 (b_p -> .)
    MENIGUAL        reduce using rule 45 (b_p -> .)
    MAYIGUAL        reduce using rule 45 (b_p -> .)
    IGUALQUE        reduce using rule 45 (b_p -> .)
    NIGUALQUE       reduce using rule 45 (b_p -> .)
    OR              reduce using rule 45 (b_p -> .)
    PARDER          reduce using rule 45 (b_p -> .)
    PTCOMA          reduce using rule 45 (b_p -> .)
    CORDER          reduce using rule 45 (b_p -> .)

  ! AND             [ reduce using rule 45 (b_p -> .) ]

    b_p                            shift and go to state 91

state 50

    (46) c -> e . c_p
    (47) c_p -> . IGUALQUE e c_p
    (48) c_p -> . NIGUALQUE e c_p
    (49) c_p -> .

  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    IMPRIMIR        reduce using rule 49 (c_p -> .)
    TEMP            reduce using rule 49 (c_p -> .)
    PILA            reduce using rule 49 (c_p -> .)
    PARAM           reduce using rule 49 (c_p -> .)
    VAL             reduce using rule 49 (c_p -> .)
    DIR             reduce using rule 49 (c_p -> .)
    PUNTERO         reduce using rule 49 (c_p -> .)
    UNSET           reduce using rule 49 (c_p -> .)
    IF              reduce using rule 49 (c_p -> .)
    ID              reduce using rule 49 (c_p -> .)
    EXIT            reduce using rule 49 (c_p -> .)
    NOT             reduce using rule 49 (c_p -> .)
    NOTBIT          reduce using rule 49 (c_p -> .)
    PARIZQ          reduce using rule 49 (c_p -> .)
    MENOS           reduce using rule 49 (c_p -> .)
    ABS             reduce using rule 49 (c_p -> .)
    GOTO            reduce using rule 49 (c_p -> .)
    ENTERO          reduce using rule 49 (c_p -> .)
    DECIMAL         reduce using rule 49 (c_p -> .)
    CADENA          reduce using rule 49 (c_p -> .)
    CARACTER        reduce using rule 49 (c_p -> .)
    ARRAY           reduce using rule 49 (c_p -> .)
    $end            reduce using rule 49 (c_p -> .)
    POR             reduce using rule 49 (c_p -> .)
    DIVIDIDO        reduce using rule 49 (c_p -> .)
    RESIDUO         reduce using rule 49 (c_p -> .)
    MAS             reduce using rule 49 (c_p -> .)
    MENQUE          reduce using rule 49 (c_p -> .)
    MAYQUE          reduce using rule 49 (c_p -> .)
    MENIGUAL        reduce using rule 49 (c_p -> .)
    MAYIGUAL        reduce using rule 49 (c_p -> .)
    AND             reduce using rule 49 (c_p -> .)
    OR              reduce using rule 49 (c_p -> .)
    PARDER          reduce using rule 49 (c_p -> .)
    PTCOMA          reduce using rule 49 (c_p -> .)
    CORDER          reduce using rule 49 (c_p -> .)

  ! IGUALQUE        [ reduce using rule 49 (c_p -> .) ]
  ! NIGUALQUE       [ reduce using rule 49 (c_p -> .) ]

    c_p                            shift and go to state 93

state 51

    (50) e -> f . e_p
    (51) e_p -> . MENQUE f e_p
    (52) e_p -> . MAYQUE f e_p
    (53) e_p -> . MENIGUAL f e_p
    (54) e_p -> . MAYIGUAL f e_p
    (55) e_p -> .

  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
    MENQUE          shift and go to state 97
    MAYQUE          shift and go to state 98
    MENIGUAL        shift and go to state 99
    MAYIGUAL        shift and go to state 100
    IMPRIMIR        reduce using rule 55 (e_p -> .)
    TEMP            reduce using rule 55 (e_p -> .)
    PILA            reduce using rule 55 (e_p -> .)
    PARAM           reduce using rule 55 (e_p -> .)
    VAL             reduce using rule 55 (e_p -> .)
    DIR             reduce using rule 55 (e_p -> .)
    PUNTERO         reduce using rule 55 (e_p -> .)
    UNSET           reduce using rule 55 (e_p -> .)
    IF              reduce using rule 55 (e_p -> .)
    ID              reduce using rule 55 (e_p -> .)
    EXIT            reduce using rule 55 (e_p -> .)
    NOT             reduce using rule 55 (e_p -> .)
    NOTBIT          reduce using rule 55 (e_p -> .)
    PARIZQ          reduce using rule 55 (e_p -> .)
    MENOS           reduce using rule 55 (e_p -> .)
    ABS             reduce using rule 55 (e_p -> .)
    GOTO            reduce using rule 55 (e_p -> .)
    ENTERO          reduce using rule 55 (e_p -> .)
    DECIMAL         reduce using rule 55 (e_p -> .)
    CADENA          reduce using rule 55 (e_p -> .)
    CARACTER        reduce using rule 55 (e_p -> .)
    ARRAY           reduce using rule 55 (e_p -> .)
    $end            reduce using rule 55 (e_p -> .)
    POR             reduce using rule 55 (e_p -> .)
    DIVIDIDO        reduce using rule 55 (e_p -> .)
    RESIDUO         reduce using rule 55 (e_p -> .)
    MAS             reduce using rule 55 (e_p -> .)
    IGUALQUE        reduce using rule 55 (e_p -> .)
    NIGUALQUE       reduce using rule 55 (e_p -> .)
    AND             reduce using rule 55 (e_p -> .)
    OR              reduce using rule 55 (e_p -> .)
    PARDER          reduce using rule 55 (e_p -> .)
    PTCOMA          reduce using rule 55 (e_p -> .)
    CORDER          reduce using rule 55 (e_p -> .)

  ! MENQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MAYQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MENIGUAL        [ reduce using rule 55 (e_p -> .) ]
  ! MAYIGUAL        [ reduce using rule 55 (e_p -> .) ]

    e_p                            shift and go to state 96

state 52

    (56) f -> g . f_p
    (57) f_p -> . MAS g f_p
    (58) f_p -> . MENOS g f_p
    (59) f_p -> .

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    IMPRIMIR        reduce using rule 59 (f_p -> .)
    TEMP            reduce using rule 59 (f_p -> .)
    PILA            reduce using rule 59 (f_p -> .)
    PARAM           reduce using rule 59 (f_p -> .)
    VAL             reduce using rule 59 (f_p -> .)
    DIR             reduce using rule 59 (f_p -> .)
    PUNTERO         reduce using rule 59 (f_p -> .)
    UNSET           reduce using rule 59 (f_p -> .)
    IF              reduce using rule 59 (f_p -> .)
    ID              reduce using rule 59 (f_p -> .)
    EXIT            reduce using rule 59 (f_p -> .)
    NOT             reduce using rule 59 (f_p -> .)
    NOTBIT          reduce using rule 59 (f_p -> .)
    PARIZQ          reduce using rule 59 (f_p -> .)
    ABS             reduce using rule 59 (f_p -> .)
    GOTO            reduce using rule 59 (f_p -> .)
    ENTERO          reduce using rule 59 (f_p -> .)
    DECIMAL         reduce using rule 59 (f_p -> .)
    CADENA          reduce using rule 59 (f_p -> .)
    CARACTER        reduce using rule 59 (f_p -> .)
    ARRAY           reduce using rule 59 (f_p -> .)
    $end            reduce using rule 59 (f_p -> .)
    POR             reduce using rule 59 (f_p -> .)
    DIVIDIDO        reduce using rule 59 (f_p -> .)
    RESIDUO         reduce using rule 59 (f_p -> .)
    MENQUE          reduce using rule 59 (f_p -> .)
    MAYQUE          reduce using rule 59 (f_p -> .)
    MENIGUAL        reduce using rule 59 (f_p -> .)
    MAYIGUAL        reduce using rule 59 (f_p -> .)
    IGUALQUE        reduce using rule 59 (f_p -> .)
    NIGUALQUE       reduce using rule 59 (f_p -> .)
    AND             reduce using rule 59 (f_p -> .)
    OR              reduce using rule 59 (f_p -> .)
    PARDER          reduce using rule 59 (f_p -> .)
    PTCOMA          reduce using rule 59 (f_p -> .)
    CORDER          reduce using rule 59 (f_p -> .)

  ! MENOS           [ reduce using rule 59 (f_p -> .) ]
  ! MAS             [ reduce using rule 59 (f_p -> .) ]

    f_p                            shift and go to state 101

state 53

    (60) g -> h . g_p
    (61) g_p -> . POR h g_p
    (62) g_p -> . DIVIDIDO h g_p
    (63) g_p -> . RESIDUO h g_p
    (64) g_p -> .

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESIDUO resolved as shift
    POR             shift and go to state 105
    DIVIDIDO        shift and go to state 106
    RESIDUO         shift and go to state 107
    IMPRIMIR        reduce using rule 64 (g_p -> .)
    TEMP            reduce using rule 64 (g_p -> .)
    PILA            reduce using rule 64 (g_p -> .)
    PARAM           reduce using rule 64 (g_p -> .)
    VAL             reduce using rule 64 (g_p -> .)
    DIR             reduce using rule 64 (g_p -> .)
    PUNTERO         reduce using rule 64 (g_p -> .)
    UNSET           reduce using rule 64 (g_p -> .)
    IF              reduce using rule 64 (g_p -> .)
    ID              reduce using rule 64 (g_p -> .)
    EXIT            reduce using rule 64 (g_p -> .)
    NOT             reduce using rule 64 (g_p -> .)
    NOTBIT          reduce using rule 64 (g_p -> .)
    PARIZQ          reduce using rule 64 (g_p -> .)
    MENOS           reduce using rule 64 (g_p -> .)
    ABS             reduce using rule 64 (g_p -> .)
    GOTO            reduce using rule 64 (g_p -> .)
    ENTERO          reduce using rule 64 (g_p -> .)
    DECIMAL         reduce using rule 64 (g_p -> .)
    CADENA          reduce using rule 64 (g_p -> .)
    CARACTER        reduce using rule 64 (g_p -> .)
    ARRAY           reduce using rule 64 (g_p -> .)
    $end            reduce using rule 64 (g_p -> .)
    MAS             reduce using rule 64 (g_p -> .)
    MENQUE          reduce using rule 64 (g_p -> .)
    MAYQUE          reduce using rule 64 (g_p -> .)
    MENIGUAL        reduce using rule 64 (g_p -> .)
    MAYIGUAL        reduce using rule 64 (g_p -> .)
    IGUALQUE        reduce using rule 64 (g_p -> .)
    NIGUALQUE       reduce using rule 64 (g_p -> .)
    AND             reduce using rule 64 (g_p -> .)
    OR              reduce using rule 64 (g_p -> .)
    PARDER          reduce using rule 64 (g_p -> .)
    PTCOMA          reduce using rule 64 (g_p -> .)
    CORDER          reduce using rule 64 (g_p -> .)

  ! POR             [ reduce using rule 64 (g_p -> .) ]
  ! DIVIDIDO        [ reduce using rule 64 (g_p -> .) ]
  ! RESIDUO         [ reduce using rule 64 (g_p -> .) ]

    g_p                            shift and go to state 104

state 54

    (29) h -> TEMP . dimensiones
    (77) h -> TEMP .
    (31) dimensiones -> . dimension dimensiones_p
    (34) dimension -> . CORIZQ h CORDER

    POR             reduce using rule 77 (h -> TEMP .)
    DIVIDIDO        reduce using rule 77 (h -> TEMP .)
    RESIDUO         reduce using rule 77 (h -> TEMP .)
    MAS             reduce using rule 77 (h -> TEMP .)
    MENOS           reduce using rule 77 (h -> TEMP .)
    MENQUE          reduce using rule 77 (h -> TEMP .)
    MAYQUE          reduce using rule 77 (h -> TEMP .)
    MENIGUAL        reduce using rule 77 (h -> TEMP .)
    MAYIGUAL        reduce using rule 77 (h -> TEMP .)
    IGUALQUE        reduce using rule 77 (h -> TEMP .)
    NIGUALQUE       reduce using rule 77 (h -> TEMP .)
    AND             reduce using rule 77 (h -> TEMP .)
    OR              reduce using rule 77 (h -> TEMP .)
    TEMP            reduce using rule 77 (h -> TEMP .)
    PILA            reduce using rule 77 (h -> TEMP .)
    NOT             reduce using rule 77 (h -> TEMP .)
    NOTBIT          reduce using rule 77 (h -> TEMP .)
    PARIZQ          reduce using rule 77 (h -> TEMP .)
    ABS             reduce using rule 77 (h -> TEMP .)
    GOTO            reduce using rule 77 (h -> TEMP .)
    ENTERO          reduce using rule 77 (h -> TEMP .)
    DECIMAL         reduce using rule 77 (h -> TEMP .)
    ID              reduce using rule 77 (h -> TEMP .)
    PARAM           reduce using rule 77 (h -> TEMP .)
    VAL             reduce using rule 77 (h -> TEMP .)
    DIR             reduce using rule 77 (h -> TEMP .)
    PUNTERO         reduce using rule 77 (h -> TEMP .)
    CADENA          reduce using rule 77 (h -> TEMP .)
    CARACTER        reduce using rule 77 (h -> TEMP .)
    ARRAY           reduce using rule 77 (h -> TEMP .)
    PARDER          reduce using rule 77 (h -> TEMP .)
    IMPRIMIR        reduce using rule 77 (h -> TEMP .)
    UNSET           reduce using rule 77 (h -> TEMP .)
    IF              reduce using rule 77 (h -> TEMP .)
    EXIT            reduce using rule 77 (h -> TEMP .)
    $end            reduce using rule 77 (h -> TEMP .)
    PTCOMA          reduce using rule 77 (h -> TEMP .)
    CORDER          reduce using rule 77 (h -> TEMP .)
    CORIZQ          shift and go to state 64

    dimensiones                    shift and go to state 108
    dimension                      shift and go to state 63

state 55

    (30) h -> PILA . dimensiones
    (82) h -> PILA .
    (31) dimensiones -> . dimension dimensiones_p
    (34) dimension -> . CORIZQ h CORDER

    POR             reduce using rule 82 (h -> PILA .)
    DIVIDIDO        reduce using rule 82 (h -> PILA .)
    RESIDUO         reduce using rule 82 (h -> PILA .)
    MAS             reduce using rule 82 (h -> PILA .)
    MENOS           reduce using rule 82 (h -> PILA .)
    MENQUE          reduce using rule 82 (h -> PILA .)
    MAYQUE          reduce using rule 82 (h -> PILA .)
    MENIGUAL        reduce using rule 82 (h -> PILA .)
    MAYIGUAL        reduce using rule 82 (h -> PILA .)
    IGUALQUE        reduce using rule 82 (h -> PILA .)
    NIGUALQUE       reduce using rule 82 (h -> PILA .)
    AND             reduce using rule 82 (h -> PILA .)
    OR              reduce using rule 82 (h -> PILA .)
    TEMP            reduce using rule 82 (h -> PILA .)
    PILA            reduce using rule 82 (h -> PILA .)
    NOT             reduce using rule 82 (h -> PILA .)
    NOTBIT          reduce using rule 82 (h -> PILA .)
    PARIZQ          reduce using rule 82 (h -> PILA .)
    ABS             reduce using rule 82 (h -> PILA .)
    GOTO            reduce using rule 82 (h -> PILA .)
    ENTERO          reduce using rule 82 (h -> PILA .)
    DECIMAL         reduce using rule 82 (h -> PILA .)
    ID              reduce using rule 82 (h -> PILA .)
    PARAM           reduce using rule 82 (h -> PILA .)
    VAL             reduce using rule 82 (h -> PILA .)
    DIR             reduce using rule 82 (h -> PILA .)
    PUNTERO         reduce using rule 82 (h -> PILA .)
    CADENA          reduce using rule 82 (h -> PILA .)
    CARACTER        reduce using rule 82 (h -> PILA .)
    ARRAY           reduce using rule 82 (h -> PILA .)
    PARDER          reduce using rule 82 (h -> PILA .)
    IMPRIMIR        reduce using rule 82 (h -> PILA .)
    UNSET           reduce using rule 82 (h -> PILA .)
    IF              reduce using rule 82 (h -> PILA .)
    EXIT            reduce using rule 82 (h -> PILA .)
    $end            reduce using rule 82 (h -> PILA .)
    PTCOMA          reduce using rule 82 (h -> PILA .)
    CORDER          reduce using rule 82 (h -> PILA .)
    CORIZQ          shift and go to state 64

    dimensiones                    shift and go to state 109
    dimension                      shift and go to state 63

state 56

    (78) h -> ID .

    POR             reduce using rule 78 (h -> ID .)
    DIVIDIDO        reduce using rule 78 (h -> ID .)
    RESIDUO         reduce using rule 78 (h -> ID .)
    MAS             reduce using rule 78 (h -> ID .)
    MENOS           reduce using rule 78 (h -> ID .)
    MENQUE          reduce using rule 78 (h -> ID .)
    MAYQUE          reduce using rule 78 (h -> ID .)
    MENIGUAL        reduce using rule 78 (h -> ID .)
    MAYIGUAL        reduce using rule 78 (h -> ID .)
    IGUALQUE        reduce using rule 78 (h -> ID .)
    NIGUALQUE       reduce using rule 78 (h -> ID .)
    AND             reduce using rule 78 (h -> ID .)
    OR              reduce using rule 78 (h -> ID .)
    TEMP            reduce using rule 78 (h -> ID .)
    PILA            reduce using rule 78 (h -> ID .)
    NOT             reduce using rule 78 (h -> ID .)
    NOTBIT          reduce using rule 78 (h -> ID .)
    PARIZQ          reduce using rule 78 (h -> ID .)
    ABS             reduce using rule 78 (h -> ID .)
    GOTO            reduce using rule 78 (h -> ID .)
    ENTERO          reduce using rule 78 (h -> ID .)
    DECIMAL         reduce using rule 78 (h -> ID .)
    ID              reduce using rule 78 (h -> ID .)
    PARAM           reduce using rule 78 (h -> ID .)
    VAL             reduce using rule 78 (h -> ID .)
    DIR             reduce using rule 78 (h -> ID .)
    PUNTERO         reduce using rule 78 (h -> ID .)
    CADENA          reduce using rule 78 (h -> ID .)
    CARACTER        reduce using rule 78 (h -> ID .)
    ARRAY           reduce using rule 78 (h -> ID .)
    PARDER          reduce using rule 78 (h -> ID .)
    IMPRIMIR        reduce using rule 78 (h -> ID .)
    UNSET           reduce using rule 78 (h -> ID .)
    IF              reduce using rule 78 (h -> ID .)
    EXIT            reduce using rule 78 (h -> ID .)
    $end            reduce using rule 78 (h -> ID .)
    PTCOMA          reduce using rule 78 (h -> ID .)
    CORDER          reduce using rule 78 (h -> ID .)


state 57

    (79) h -> PARAM .

    POR             reduce using rule 79 (h -> PARAM .)
    DIVIDIDO        reduce using rule 79 (h -> PARAM .)
    RESIDUO         reduce using rule 79 (h -> PARAM .)
    MAS             reduce using rule 79 (h -> PARAM .)
    MENOS           reduce using rule 79 (h -> PARAM .)
    MENQUE          reduce using rule 79 (h -> PARAM .)
    MAYQUE          reduce using rule 79 (h -> PARAM .)
    MENIGUAL        reduce using rule 79 (h -> PARAM .)
    MAYIGUAL        reduce using rule 79 (h -> PARAM .)
    IGUALQUE        reduce using rule 79 (h -> PARAM .)
    NIGUALQUE       reduce using rule 79 (h -> PARAM .)
    AND             reduce using rule 79 (h -> PARAM .)
    OR              reduce using rule 79 (h -> PARAM .)
    TEMP            reduce using rule 79 (h -> PARAM .)
    PILA            reduce using rule 79 (h -> PARAM .)
    NOT             reduce using rule 79 (h -> PARAM .)
    NOTBIT          reduce using rule 79 (h -> PARAM .)
    PARIZQ          reduce using rule 79 (h -> PARAM .)
    ABS             reduce using rule 79 (h -> PARAM .)
    GOTO            reduce using rule 79 (h -> PARAM .)
    ENTERO          reduce using rule 79 (h -> PARAM .)
    DECIMAL         reduce using rule 79 (h -> PARAM .)
    ID              reduce using rule 79 (h -> PARAM .)
    PARAM           reduce using rule 79 (h -> PARAM .)
    VAL             reduce using rule 79 (h -> PARAM .)
    DIR             reduce using rule 79 (h -> PARAM .)
    PUNTERO         reduce using rule 79 (h -> PARAM .)
    CADENA          reduce using rule 79 (h -> PARAM .)
    CARACTER        reduce using rule 79 (h -> PARAM .)
    ARRAY           reduce using rule 79 (h -> PARAM .)
    PARDER          reduce using rule 79 (h -> PARAM .)
    IMPRIMIR        reduce using rule 79 (h -> PARAM .)
    UNSET           reduce using rule 79 (h -> PARAM .)
    IF              reduce using rule 79 (h -> PARAM .)
    EXIT            reduce using rule 79 (h -> PARAM .)
    $end            reduce using rule 79 (h -> PARAM .)
    PTCOMA          reduce using rule 79 (h -> PARAM .)
    CORDER          reduce using rule 79 (h -> PARAM .)


state 58

    (80) h -> VAL .

    POR             reduce using rule 80 (h -> VAL .)
    DIVIDIDO        reduce using rule 80 (h -> VAL .)
    RESIDUO         reduce using rule 80 (h -> VAL .)
    MAS             reduce using rule 80 (h -> VAL .)
    MENOS           reduce using rule 80 (h -> VAL .)
    MENQUE          reduce using rule 80 (h -> VAL .)
    MAYQUE          reduce using rule 80 (h -> VAL .)
    MENIGUAL        reduce using rule 80 (h -> VAL .)
    MAYIGUAL        reduce using rule 80 (h -> VAL .)
    IGUALQUE        reduce using rule 80 (h -> VAL .)
    NIGUALQUE       reduce using rule 80 (h -> VAL .)
    AND             reduce using rule 80 (h -> VAL .)
    OR              reduce using rule 80 (h -> VAL .)
    TEMP            reduce using rule 80 (h -> VAL .)
    PILA            reduce using rule 80 (h -> VAL .)
    NOT             reduce using rule 80 (h -> VAL .)
    NOTBIT          reduce using rule 80 (h -> VAL .)
    PARIZQ          reduce using rule 80 (h -> VAL .)
    ABS             reduce using rule 80 (h -> VAL .)
    GOTO            reduce using rule 80 (h -> VAL .)
    ENTERO          reduce using rule 80 (h -> VAL .)
    DECIMAL         reduce using rule 80 (h -> VAL .)
    ID              reduce using rule 80 (h -> VAL .)
    PARAM           reduce using rule 80 (h -> VAL .)
    VAL             reduce using rule 80 (h -> VAL .)
    DIR             reduce using rule 80 (h -> VAL .)
    PUNTERO         reduce using rule 80 (h -> VAL .)
    CADENA          reduce using rule 80 (h -> VAL .)
    CARACTER        reduce using rule 80 (h -> VAL .)
    ARRAY           reduce using rule 80 (h -> VAL .)
    PARDER          reduce using rule 80 (h -> VAL .)
    IMPRIMIR        reduce using rule 80 (h -> VAL .)
    UNSET           reduce using rule 80 (h -> VAL .)
    IF              reduce using rule 80 (h -> VAL .)
    EXIT            reduce using rule 80 (h -> VAL .)
    $end            reduce using rule 80 (h -> VAL .)
    PTCOMA          reduce using rule 80 (h -> VAL .)
    CORDER          reduce using rule 80 (h -> VAL .)


state 59

    (81) h -> DIR .

    POR             reduce using rule 81 (h -> DIR .)
    DIVIDIDO        reduce using rule 81 (h -> DIR .)
    RESIDUO         reduce using rule 81 (h -> DIR .)
    MAS             reduce using rule 81 (h -> DIR .)
    MENOS           reduce using rule 81 (h -> DIR .)
    MENQUE          reduce using rule 81 (h -> DIR .)
    MAYQUE          reduce using rule 81 (h -> DIR .)
    MENIGUAL        reduce using rule 81 (h -> DIR .)
    MAYIGUAL        reduce using rule 81 (h -> DIR .)
    IGUALQUE        reduce using rule 81 (h -> DIR .)
    NIGUALQUE       reduce using rule 81 (h -> DIR .)
    AND             reduce using rule 81 (h -> DIR .)
    OR              reduce using rule 81 (h -> DIR .)
    TEMP            reduce using rule 81 (h -> DIR .)
    PILA            reduce using rule 81 (h -> DIR .)
    NOT             reduce using rule 81 (h -> DIR .)
    NOTBIT          reduce using rule 81 (h -> DIR .)
    PARIZQ          reduce using rule 81 (h -> DIR .)
    ABS             reduce using rule 81 (h -> DIR .)
    GOTO            reduce using rule 81 (h -> DIR .)
    ENTERO          reduce using rule 81 (h -> DIR .)
    DECIMAL         reduce using rule 81 (h -> DIR .)
    ID              reduce using rule 81 (h -> DIR .)
    PARAM           reduce using rule 81 (h -> DIR .)
    VAL             reduce using rule 81 (h -> DIR .)
    DIR             reduce using rule 81 (h -> DIR .)
    PUNTERO         reduce using rule 81 (h -> DIR .)
    CADENA          reduce using rule 81 (h -> DIR .)
    CARACTER        reduce using rule 81 (h -> DIR .)
    ARRAY           reduce using rule 81 (h -> DIR .)
    PARDER          reduce using rule 81 (h -> DIR .)
    IMPRIMIR        reduce using rule 81 (h -> DIR .)
    UNSET           reduce using rule 81 (h -> DIR .)
    IF              reduce using rule 81 (h -> DIR .)
    EXIT            reduce using rule 81 (h -> DIR .)
    $end            reduce using rule 81 (h -> DIR .)
    PTCOMA          reduce using rule 81 (h -> DIR .)
    CORDER          reduce using rule 81 (h -> DIR .)


state 60

    (83) h -> PUNTERO .

    POR             reduce using rule 83 (h -> PUNTERO .)
    DIVIDIDO        reduce using rule 83 (h -> PUNTERO .)
    RESIDUO         reduce using rule 83 (h -> PUNTERO .)
    MAS             reduce using rule 83 (h -> PUNTERO .)
    MENOS           reduce using rule 83 (h -> PUNTERO .)
    MENQUE          reduce using rule 83 (h -> PUNTERO .)
    MAYQUE          reduce using rule 83 (h -> PUNTERO .)
    MENIGUAL        reduce using rule 83 (h -> PUNTERO .)
    MAYIGUAL        reduce using rule 83 (h -> PUNTERO .)
    IGUALQUE        reduce using rule 83 (h -> PUNTERO .)
    NIGUALQUE       reduce using rule 83 (h -> PUNTERO .)
    AND             reduce using rule 83 (h -> PUNTERO .)
    OR              reduce using rule 83 (h -> PUNTERO .)
    TEMP            reduce using rule 83 (h -> PUNTERO .)
    PILA            reduce using rule 83 (h -> PUNTERO .)
    NOT             reduce using rule 83 (h -> PUNTERO .)
    NOTBIT          reduce using rule 83 (h -> PUNTERO .)
    PARIZQ          reduce using rule 83 (h -> PUNTERO .)
    ABS             reduce using rule 83 (h -> PUNTERO .)
    GOTO            reduce using rule 83 (h -> PUNTERO .)
    ENTERO          reduce using rule 83 (h -> PUNTERO .)
    DECIMAL         reduce using rule 83 (h -> PUNTERO .)
    ID              reduce using rule 83 (h -> PUNTERO .)
    PARAM           reduce using rule 83 (h -> PUNTERO .)
    VAL             reduce using rule 83 (h -> PUNTERO .)
    DIR             reduce using rule 83 (h -> PUNTERO .)
    PUNTERO         reduce using rule 83 (h -> PUNTERO .)
    CADENA          reduce using rule 83 (h -> PUNTERO .)
    CARACTER        reduce using rule 83 (h -> PUNTERO .)
    ARRAY           reduce using rule 83 (h -> PUNTERO .)
    PARDER          reduce using rule 83 (h -> PUNTERO .)
    IMPRIMIR        reduce using rule 83 (h -> PUNTERO .)
    UNSET           reduce using rule 83 (h -> PUNTERO .)
    IF              reduce using rule 83 (h -> PUNTERO .)
    EXIT            reduce using rule 83 (h -> PUNTERO .)
    $end            reduce using rule 83 (h -> PUNTERO .)
    PTCOMA          reduce using rule 83 (h -> PUNTERO .)
    CORDER          reduce using rule 83 (h -> PUNTERO .)


state 61

    (21) asignacion_temp -> TEMP IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 110
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 62

    (27) asignacion_temp -> TEMP dimensiones . IGUAL expresiones PTCOMA
    (29) h -> TEMP dimensiones .

    IGUAL           shift and go to state 111
    IMPRIMIR        reduce using rule 29 (h -> TEMP dimensiones .)
    TEMP            reduce using rule 29 (h -> TEMP dimensiones .)
    PILA            reduce using rule 29 (h -> TEMP dimensiones .)
    PARAM           reduce using rule 29 (h -> TEMP dimensiones .)
    VAL             reduce using rule 29 (h -> TEMP dimensiones .)
    DIR             reduce using rule 29 (h -> TEMP dimensiones .)
    PUNTERO         reduce using rule 29 (h -> TEMP dimensiones .)
    UNSET           reduce using rule 29 (h -> TEMP dimensiones .)
    IF              reduce using rule 29 (h -> TEMP dimensiones .)
    ID              reduce using rule 29 (h -> TEMP dimensiones .)
    EXIT            reduce using rule 29 (h -> TEMP dimensiones .)
    NOT             reduce using rule 29 (h -> TEMP dimensiones .)
    NOTBIT          reduce using rule 29 (h -> TEMP dimensiones .)
    PARIZQ          reduce using rule 29 (h -> TEMP dimensiones .)
    MENOS           reduce using rule 29 (h -> TEMP dimensiones .)
    ABS             reduce using rule 29 (h -> TEMP dimensiones .)
    GOTO            reduce using rule 29 (h -> TEMP dimensiones .)
    ENTERO          reduce using rule 29 (h -> TEMP dimensiones .)
    DECIMAL         reduce using rule 29 (h -> TEMP dimensiones .)
    CADENA          reduce using rule 29 (h -> TEMP dimensiones .)
    CARACTER        reduce using rule 29 (h -> TEMP dimensiones .)
    ARRAY           reduce using rule 29 (h -> TEMP dimensiones .)
    $end            reduce using rule 29 (h -> TEMP dimensiones .)


state 63

    (31) dimensiones -> dimension . dimensiones_p
    (32) dimensiones_p -> . dimension dimensiones_p
    (33) dimensiones_p -> .
    (34) dimension -> . CORIZQ h CORDER

    IGUAL           reduce using rule 33 (dimensiones_p -> .)
    IMPRIMIR        reduce using rule 33 (dimensiones_p -> .)
    TEMP            reduce using rule 33 (dimensiones_p -> .)
    PILA            reduce using rule 33 (dimensiones_p -> .)
    PARAM           reduce using rule 33 (dimensiones_p -> .)
    VAL             reduce using rule 33 (dimensiones_p -> .)
    DIR             reduce using rule 33 (dimensiones_p -> .)
    PUNTERO         reduce using rule 33 (dimensiones_p -> .)
    UNSET           reduce using rule 33 (dimensiones_p -> .)
    IF              reduce using rule 33 (dimensiones_p -> .)
    ID              reduce using rule 33 (dimensiones_p -> .)
    EXIT            reduce using rule 33 (dimensiones_p -> .)
    NOT             reduce using rule 33 (dimensiones_p -> .)
    NOTBIT          reduce using rule 33 (dimensiones_p -> .)
    PARIZQ          reduce using rule 33 (dimensiones_p -> .)
    MENOS           reduce using rule 33 (dimensiones_p -> .)
    ABS             reduce using rule 33 (dimensiones_p -> .)
    GOTO            reduce using rule 33 (dimensiones_p -> .)
    ENTERO          reduce using rule 33 (dimensiones_p -> .)
    DECIMAL         reduce using rule 33 (dimensiones_p -> .)
    CADENA          reduce using rule 33 (dimensiones_p -> .)
    CARACTER        reduce using rule 33 (dimensiones_p -> .)
    ARRAY           reduce using rule 33 (dimensiones_p -> .)
    $end            reduce using rule 33 (dimensiones_p -> .)
    POR             reduce using rule 33 (dimensiones_p -> .)
    DIVIDIDO        reduce using rule 33 (dimensiones_p -> .)
    RESIDUO         reduce using rule 33 (dimensiones_p -> .)
    MAS             reduce using rule 33 (dimensiones_p -> .)
    MENQUE          reduce using rule 33 (dimensiones_p -> .)
    MAYQUE          reduce using rule 33 (dimensiones_p -> .)
    MENIGUAL        reduce using rule 33 (dimensiones_p -> .)
    MAYIGUAL        reduce using rule 33 (dimensiones_p -> .)
    IGUALQUE        reduce using rule 33 (dimensiones_p -> .)
    NIGUALQUE       reduce using rule 33 (dimensiones_p -> .)
    AND             reduce using rule 33 (dimensiones_p -> .)
    OR              reduce using rule 33 (dimensiones_p -> .)
    PARDER          reduce using rule 33 (dimensiones_p -> .)
    PTCOMA          reduce using rule 33 (dimensiones_p -> .)
    CORDER          reduce using rule 33 (dimensiones_p -> .)
    CORIZQ          shift and go to state 64

    dimension                      shift and go to state 112
    dimensiones_p                  shift and go to state 113

state 64

    (34) dimension -> CORIZQ . h CORDER
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    h                              shift and go to state 114

state 65

    (28) asignacion_temp -> PILA dimensiones . IGUAL expresiones PTCOMA
    (30) h -> PILA dimensiones .

    IGUAL           shift and go to state 115
    IMPRIMIR        reduce using rule 30 (h -> PILA dimensiones .)
    TEMP            reduce using rule 30 (h -> PILA dimensiones .)
    PILA            reduce using rule 30 (h -> PILA dimensiones .)
    PARAM           reduce using rule 30 (h -> PILA dimensiones .)
    VAL             reduce using rule 30 (h -> PILA dimensiones .)
    DIR             reduce using rule 30 (h -> PILA dimensiones .)
    PUNTERO         reduce using rule 30 (h -> PILA dimensiones .)
    UNSET           reduce using rule 30 (h -> PILA dimensiones .)
    IF              reduce using rule 30 (h -> PILA dimensiones .)
    ID              reduce using rule 30 (h -> PILA dimensiones .)
    EXIT            reduce using rule 30 (h -> PILA dimensiones .)
    NOT             reduce using rule 30 (h -> PILA dimensiones .)
    NOTBIT          reduce using rule 30 (h -> PILA dimensiones .)
    PARIZQ          reduce using rule 30 (h -> PILA dimensiones .)
    MENOS           reduce using rule 30 (h -> PILA dimensiones .)
    ABS             reduce using rule 30 (h -> PILA dimensiones .)
    GOTO            reduce using rule 30 (h -> PILA dimensiones .)
    ENTERO          reduce using rule 30 (h -> PILA dimensiones .)
    DECIMAL         reduce using rule 30 (h -> PILA dimensiones .)
    CADENA          reduce using rule 30 (h -> PILA dimensiones .)
    CARACTER        reduce using rule 30 (h -> PILA dimensiones .)
    ARRAY           reduce using rule 30 (h -> PILA dimensiones .)
    $end            reduce using rule 30 (h -> PILA dimensiones .)


state 66

    (25) asignacion_pila -> PILA IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 116
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 67

    (22) asignacion_param -> PARAM IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 117
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 68

    (23) asignacion_val -> VAL IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 118
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 69

    (24) asignacion_dir -> DIR IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 119
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 70

    (26) asignacion_puntero -> PUNTERO IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 120
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 71

    (20) borrar_temp -> UNSET PARIZQ . expresiones PARDER PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 121
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 72

    (35) if_instr -> IF PARIZQ . expresiones PARDER h
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 122
    h                              shift and go to state 53
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52

state 73

    (18) metodo -> ID DOSPUNTOS .

    IMPRIMIR        reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    TEMP            reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    PILA            reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    PARAM           reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    VAL             reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    DIR             reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    PUNTERO         reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    UNSET           reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    IF              reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    ID              reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    EXIT            reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    NOT             reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    NOTBIT          reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    PARIZQ          reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    MENOS           reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    ABS             reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    GOTO            reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    ENTERO          reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    DECIMAL         reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    CADENA          reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    CARACTER        reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    ARRAY           reduce using rule 18 (metodo -> ID DOSPUNTOS .)
    $end            reduce using rule 18 (metodo -> ID DOSPUNTOS .)


state 74

    (17) exit -> EXIT PTCOMA .

    IMPRIMIR        reduce using rule 17 (exit -> EXIT PTCOMA .)
    TEMP            reduce using rule 17 (exit -> EXIT PTCOMA .)
    PILA            reduce using rule 17 (exit -> EXIT PTCOMA .)
    PARAM           reduce using rule 17 (exit -> EXIT PTCOMA .)
    VAL             reduce using rule 17 (exit -> EXIT PTCOMA .)
    DIR             reduce using rule 17 (exit -> EXIT PTCOMA .)
    PUNTERO         reduce using rule 17 (exit -> EXIT PTCOMA .)
    UNSET           reduce using rule 17 (exit -> EXIT PTCOMA .)
    IF              reduce using rule 17 (exit -> EXIT PTCOMA .)
    ID              reduce using rule 17 (exit -> EXIT PTCOMA .)
    EXIT            reduce using rule 17 (exit -> EXIT PTCOMA .)
    NOT             reduce using rule 17 (exit -> EXIT PTCOMA .)
    NOTBIT          reduce using rule 17 (exit -> EXIT PTCOMA .)
    PARIZQ          reduce using rule 17 (exit -> EXIT PTCOMA .)
    MENOS           reduce using rule 17 (exit -> EXIT PTCOMA .)
    ABS             reduce using rule 17 (exit -> EXIT PTCOMA .)
    GOTO            reduce using rule 17 (exit -> EXIT PTCOMA .)
    ENTERO          reduce using rule 17 (exit -> EXIT PTCOMA .)
    DECIMAL         reduce using rule 17 (exit -> EXIT PTCOMA .)
    CADENA          reduce using rule 17 (exit -> EXIT PTCOMA .)
    CARACTER        reduce using rule 17 (exit -> EXIT PTCOMA .)
    ARRAY           reduce using rule 17 (exit -> EXIT PTCOMA .)
    $end            reduce using rule 17 (exit -> EXIT PTCOMA .)


state 75

    (65) h -> NOT expresiones .

    IMPRIMIR        reduce using rule 65 (h -> NOT expresiones .)
    TEMP            reduce using rule 65 (h -> NOT expresiones .)
    PILA            reduce using rule 65 (h -> NOT expresiones .)
    PARAM           reduce using rule 65 (h -> NOT expresiones .)
    VAL             reduce using rule 65 (h -> NOT expresiones .)
    DIR             reduce using rule 65 (h -> NOT expresiones .)
    PUNTERO         reduce using rule 65 (h -> NOT expresiones .)
    UNSET           reduce using rule 65 (h -> NOT expresiones .)
    IF              reduce using rule 65 (h -> NOT expresiones .)
    ID              reduce using rule 65 (h -> NOT expresiones .)
    EXIT            reduce using rule 65 (h -> NOT expresiones .)
    NOT             reduce using rule 65 (h -> NOT expresiones .)
    NOTBIT          reduce using rule 65 (h -> NOT expresiones .)
    PARIZQ          reduce using rule 65 (h -> NOT expresiones .)
    MENOS           reduce using rule 65 (h -> NOT expresiones .)
    ABS             reduce using rule 65 (h -> NOT expresiones .)
    GOTO            reduce using rule 65 (h -> NOT expresiones .)
    ENTERO          reduce using rule 65 (h -> NOT expresiones .)
    DECIMAL         reduce using rule 65 (h -> NOT expresiones .)
    CADENA          reduce using rule 65 (h -> NOT expresiones .)
    CARACTER        reduce using rule 65 (h -> NOT expresiones .)
    ARRAY           reduce using rule 65 (h -> NOT expresiones .)
    $end            reduce using rule 65 (h -> NOT expresiones .)
    POR             reduce using rule 65 (h -> NOT expresiones .)
    DIVIDIDO        reduce using rule 65 (h -> NOT expresiones .)
    RESIDUO         reduce using rule 65 (h -> NOT expresiones .)
    MAS             reduce using rule 65 (h -> NOT expresiones .)
    MENQUE          reduce using rule 65 (h -> NOT expresiones .)
    MAYQUE          reduce using rule 65 (h -> NOT expresiones .)
    MENIGUAL        reduce using rule 65 (h -> NOT expresiones .)
    MAYIGUAL        reduce using rule 65 (h -> NOT expresiones .)
    IGUALQUE        reduce using rule 65 (h -> NOT expresiones .)
    NIGUALQUE       reduce using rule 65 (h -> NOT expresiones .)
    AND             reduce using rule 65 (h -> NOT expresiones .)
    OR              reduce using rule 65 (h -> NOT expresiones .)
    PARDER          reduce using rule 65 (h -> NOT expresiones .)
    PTCOMA          reduce using rule 65 (h -> NOT expresiones .)
    CORDER          reduce using rule 65 (h -> NOT expresiones .)


state 76

    (66) h -> NOTBIT expresiones .

    IMPRIMIR        reduce using rule 66 (h -> NOTBIT expresiones .)
    TEMP            reduce using rule 66 (h -> NOTBIT expresiones .)
    PILA            reduce using rule 66 (h -> NOTBIT expresiones .)
    PARAM           reduce using rule 66 (h -> NOTBIT expresiones .)
    VAL             reduce using rule 66 (h -> NOTBIT expresiones .)
    DIR             reduce using rule 66 (h -> NOTBIT expresiones .)
    PUNTERO         reduce using rule 66 (h -> NOTBIT expresiones .)
    UNSET           reduce using rule 66 (h -> NOTBIT expresiones .)
    IF              reduce using rule 66 (h -> NOTBIT expresiones .)
    ID              reduce using rule 66 (h -> NOTBIT expresiones .)
    EXIT            reduce using rule 66 (h -> NOTBIT expresiones .)
    NOT             reduce using rule 66 (h -> NOTBIT expresiones .)
    NOTBIT          reduce using rule 66 (h -> NOTBIT expresiones .)
    PARIZQ          reduce using rule 66 (h -> NOTBIT expresiones .)
    MENOS           reduce using rule 66 (h -> NOTBIT expresiones .)
    ABS             reduce using rule 66 (h -> NOTBIT expresiones .)
    GOTO            reduce using rule 66 (h -> NOTBIT expresiones .)
    ENTERO          reduce using rule 66 (h -> NOTBIT expresiones .)
    DECIMAL         reduce using rule 66 (h -> NOTBIT expresiones .)
    CADENA          reduce using rule 66 (h -> NOTBIT expresiones .)
    CARACTER        reduce using rule 66 (h -> NOTBIT expresiones .)
    ARRAY           reduce using rule 66 (h -> NOTBIT expresiones .)
    $end            reduce using rule 66 (h -> NOTBIT expresiones .)
    POR             reduce using rule 66 (h -> NOTBIT expresiones .)
    DIVIDIDO        reduce using rule 66 (h -> NOTBIT expresiones .)
    RESIDUO         reduce using rule 66 (h -> NOTBIT expresiones .)
    MAS             reduce using rule 66 (h -> NOTBIT expresiones .)
    MENQUE          reduce using rule 66 (h -> NOTBIT expresiones .)
    MAYQUE          reduce using rule 66 (h -> NOTBIT expresiones .)
    MENIGUAL        reduce using rule 66 (h -> NOTBIT expresiones .)
    MAYIGUAL        reduce using rule 66 (h -> NOTBIT expresiones .)
    IGUALQUE        reduce using rule 66 (h -> NOTBIT expresiones .)
    NIGUALQUE       reduce using rule 66 (h -> NOTBIT expresiones .)
    AND             reduce using rule 66 (h -> NOTBIT expresiones .)
    OR              reduce using rule 66 (h -> NOTBIT expresiones .)
    PARDER          reduce using rule 66 (h -> NOTBIT expresiones .)
    PTCOMA          reduce using rule 66 (h -> NOTBIT expresiones .)
    CORDER          reduce using rule 66 (h -> NOTBIT expresiones .)


state 77

    (70) h -> MENOS expresiones .

    IMPRIMIR        reduce using rule 70 (h -> MENOS expresiones .)
    TEMP            reduce using rule 70 (h -> MENOS expresiones .)
    PILA            reduce using rule 70 (h -> MENOS expresiones .)
    PARAM           reduce using rule 70 (h -> MENOS expresiones .)
    VAL             reduce using rule 70 (h -> MENOS expresiones .)
    DIR             reduce using rule 70 (h -> MENOS expresiones .)
    PUNTERO         reduce using rule 70 (h -> MENOS expresiones .)
    UNSET           reduce using rule 70 (h -> MENOS expresiones .)
    IF              reduce using rule 70 (h -> MENOS expresiones .)
    ID              reduce using rule 70 (h -> MENOS expresiones .)
    EXIT            reduce using rule 70 (h -> MENOS expresiones .)
    NOT             reduce using rule 70 (h -> MENOS expresiones .)
    NOTBIT          reduce using rule 70 (h -> MENOS expresiones .)
    PARIZQ          reduce using rule 70 (h -> MENOS expresiones .)
    MENOS           reduce using rule 70 (h -> MENOS expresiones .)
    ABS             reduce using rule 70 (h -> MENOS expresiones .)
    GOTO            reduce using rule 70 (h -> MENOS expresiones .)
    ENTERO          reduce using rule 70 (h -> MENOS expresiones .)
    DECIMAL         reduce using rule 70 (h -> MENOS expresiones .)
    CADENA          reduce using rule 70 (h -> MENOS expresiones .)
    CARACTER        reduce using rule 70 (h -> MENOS expresiones .)
    ARRAY           reduce using rule 70 (h -> MENOS expresiones .)
    $end            reduce using rule 70 (h -> MENOS expresiones .)
    POR             reduce using rule 70 (h -> MENOS expresiones .)
    DIVIDIDO        reduce using rule 70 (h -> MENOS expresiones .)
    RESIDUO         reduce using rule 70 (h -> MENOS expresiones .)
    MAS             reduce using rule 70 (h -> MENOS expresiones .)
    MENQUE          reduce using rule 70 (h -> MENOS expresiones .)
    MAYQUE          reduce using rule 70 (h -> MENOS expresiones .)
    MENIGUAL        reduce using rule 70 (h -> MENOS expresiones .)
    MAYIGUAL        reduce using rule 70 (h -> MENOS expresiones .)
    IGUALQUE        reduce using rule 70 (h -> MENOS expresiones .)
    NIGUALQUE       reduce using rule 70 (h -> MENOS expresiones .)
    AND             reduce using rule 70 (h -> MENOS expresiones .)
    OR              reduce using rule 70 (h -> MENOS expresiones .)
    PARDER          reduce using rule 70 (h -> MENOS expresiones .)
    PTCOMA          reduce using rule 70 (h -> MENOS expresiones .)
    CORDER          reduce using rule 70 (h -> MENOS expresiones .)


state 78

    (71) h -> ABS PARIZQ . expresiones PARDER
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 123
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 79

    (74) h -> GOTO expresiones . PTCOMA

    PTCOMA          shift and go to state 124


state 80

    (86) h -> ARRAY PARIZQ . PARDER

    PARDER          shift and go to state 125


state 81

    (3) instrucciones_p -> instruccion instrucciones_p .

    $end            reduce using rule 3 (instrucciones_p -> instruccion instrucciones_p .)


state 82

    (19) imprimir_instr -> IMPRIMIR PARIZQ expresiones . PARDER PTCOMA

    PARDER          shift and go to state 126


state 83

    (67) h -> PARIZQ INT PARDER . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 127
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 84

    (72) h -> PARIZQ expresiones PARDER .

    IMPRIMIR        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    TEMP            reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PILA            reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PARAM           reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    VAL             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    DIR             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PUNTERO         reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    UNSET           reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    IF              reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    ID              reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    EXIT            reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    NOT             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    NOTBIT          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PARIZQ          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    ABS             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    GOTO            reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    ENTERO          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    DECIMAL         reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    CADENA          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    CARACTER        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    ARRAY           reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    $end            reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    POR             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    DIVIDIDO        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    RESIDUO         reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MAS             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MENQUE          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MAYQUE          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MENIGUAL        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    MAYIGUAL        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    IGUALQUE        reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    NIGUALQUE       reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    AND             reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    OR              reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    PTCOMA          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)
    CORDER          reduce using rule 72 (h -> PARIZQ expresiones PARDER .)


state 85

    (68) h -> PARIZQ FLOAT PARDER . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 128
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 86

    (69) h -> PARIZQ CHAR PARDER . expresiones
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 129
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 87

    (37) expresiones_p -> expresion . expresiones_p
    (37) expresiones_p -> . expresion expresiones_p
    (38) expresiones_p -> .
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

  ! shift/reduce conflict for TEMP resolved as shift
  ! shift/reduce conflict for PILA resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NOTBIT resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for ABS resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARAM resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for DIR resolved as shift
  ! shift/reduce conflict for PUNTERO resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for ARRAY resolved as shift
    IMPRIMIR        reduce using rule 38 (expresiones_p -> .)
    UNSET           reduce using rule 38 (expresiones_p -> .)
    IF              reduce using rule 38 (expresiones_p -> .)
    EXIT            reduce using rule 38 (expresiones_p -> .)
    $end            reduce using rule 38 (expresiones_p -> .)
    POR             reduce using rule 38 (expresiones_p -> .)
    DIVIDIDO        reduce using rule 38 (expresiones_p -> .)
    RESIDUO         reduce using rule 38 (expresiones_p -> .)
    MAS             reduce using rule 38 (expresiones_p -> .)
    MENQUE          reduce using rule 38 (expresiones_p -> .)
    MAYQUE          reduce using rule 38 (expresiones_p -> .)
    MENIGUAL        reduce using rule 38 (expresiones_p -> .)
    MAYIGUAL        reduce using rule 38 (expresiones_p -> .)
    IGUALQUE        reduce using rule 38 (expresiones_p -> .)
    NIGUALQUE       reduce using rule 38 (expresiones_p -> .)
    AND             reduce using rule 38 (expresiones_p -> .)
    OR              reduce using rule 38 (expresiones_p -> .)
    PARDER          reduce using rule 38 (expresiones_p -> .)
    PTCOMA          reduce using rule 38 (expresiones_p -> .)
    CORDER          reduce using rule 38 (expresiones_p -> .)
    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

  ! TEMP            [ reduce using rule 38 (expresiones_p -> .) ]
  ! PILA            [ reduce using rule 38 (expresiones_p -> .) ]
  ! PARAM           [ reduce using rule 38 (expresiones_p -> .) ]
  ! VAL             [ reduce using rule 38 (expresiones_p -> .) ]
  ! DIR             [ reduce using rule 38 (expresiones_p -> .) ]
  ! PUNTERO         [ reduce using rule 38 (expresiones_p -> .) ]
  ! ID              [ reduce using rule 38 (expresiones_p -> .) ]
  ! NOT             [ reduce using rule 38 (expresiones_p -> .) ]
  ! NOTBIT          [ reduce using rule 38 (expresiones_p -> .) ]
  ! PARIZQ          [ reduce using rule 38 (expresiones_p -> .) ]
  ! MENOS           [ reduce using rule 38 (expresiones_p -> .) ]
  ! ABS             [ reduce using rule 38 (expresiones_p -> .) ]
  ! GOTO            [ reduce using rule 38 (expresiones_p -> .) ]
  ! ENTERO          [ reduce using rule 38 (expresiones_p -> .) ]
  ! DECIMAL         [ reduce using rule 38 (expresiones_p -> .) ]
  ! CADENA          [ reduce using rule 38 (expresiones_p -> .) ]
  ! CARACTER        [ reduce using rule 38 (expresiones_p -> .) ]
  ! ARRAY           [ reduce using rule 38 (expresiones_p -> .) ]

    expresion                      shift and go to state 87
    expresiones_p                  shift and go to state 130
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 88

    (36) expresiones -> expresion expresiones_p .

    PARDER          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    IMPRIMIR        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    TEMP            reduce using rule 36 (expresiones -> expresion expresiones_p .)
    PILA            reduce using rule 36 (expresiones -> expresion expresiones_p .)
    PARAM           reduce using rule 36 (expresiones -> expresion expresiones_p .)
    VAL             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    DIR             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    PUNTERO         reduce using rule 36 (expresiones -> expresion expresiones_p .)
    UNSET           reduce using rule 36 (expresiones -> expresion expresiones_p .)
    IF              reduce using rule 36 (expresiones -> expresion expresiones_p .)
    ID              reduce using rule 36 (expresiones -> expresion expresiones_p .)
    EXIT            reduce using rule 36 (expresiones -> expresion expresiones_p .)
    NOT             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    NOTBIT          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    PARIZQ          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MENOS           reduce using rule 36 (expresiones -> expresion expresiones_p .)
    ABS             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    GOTO            reduce using rule 36 (expresiones -> expresion expresiones_p .)
    ENTERO          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    DECIMAL         reduce using rule 36 (expresiones -> expresion expresiones_p .)
    CADENA          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    CARACTER        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    ARRAY           reduce using rule 36 (expresiones -> expresion expresiones_p .)
    $end            reduce using rule 36 (expresiones -> expresion expresiones_p .)
    POR             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    DIVIDIDO        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    RESIDUO         reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MAS             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MENQUE          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MAYQUE          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MENIGUAL        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    MAYIGUAL        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    IGUALQUE        reduce using rule 36 (expresiones -> expresion expresiones_p .)
    NIGUALQUE       reduce using rule 36 (expresiones -> expresion expresiones_p .)
    AND             reduce using rule 36 (expresiones -> expresion expresiones_p .)
    OR              reduce using rule 36 (expresiones -> expresion expresiones_p .)
    PTCOMA          reduce using rule 36 (expresiones -> expresion expresiones_p .)
    CORDER          reduce using rule 36 (expresiones -> expresion expresiones_p .)


state 89

    (40) a -> b a_p .

    TEMP            reduce using rule 40 (a -> b a_p .)
    PILA            reduce using rule 40 (a -> b a_p .)
    NOT             reduce using rule 40 (a -> b a_p .)
    NOTBIT          reduce using rule 40 (a -> b a_p .)
    PARIZQ          reduce using rule 40 (a -> b a_p .)
    MENOS           reduce using rule 40 (a -> b a_p .)
    ABS             reduce using rule 40 (a -> b a_p .)
    GOTO            reduce using rule 40 (a -> b a_p .)
    ENTERO          reduce using rule 40 (a -> b a_p .)
    DECIMAL         reduce using rule 40 (a -> b a_p .)
    ID              reduce using rule 40 (a -> b a_p .)
    PARAM           reduce using rule 40 (a -> b a_p .)
    VAL             reduce using rule 40 (a -> b a_p .)
    DIR             reduce using rule 40 (a -> b a_p .)
    PUNTERO         reduce using rule 40 (a -> b a_p .)
    CADENA          reduce using rule 40 (a -> b a_p .)
    CARACTER        reduce using rule 40 (a -> b a_p .)
    ARRAY           reduce using rule 40 (a -> b a_p .)
    PARDER          reduce using rule 40 (a -> b a_p .)
    IMPRIMIR        reduce using rule 40 (a -> b a_p .)
    UNSET           reduce using rule 40 (a -> b a_p .)
    IF              reduce using rule 40 (a -> b a_p .)
    EXIT            reduce using rule 40 (a -> b a_p .)
    $end            reduce using rule 40 (a -> b a_p .)
    POR             reduce using rule 40 (a -> b a_p .)
    DIVIDIDO        reduce using rule 40 (a -> b a_p .)
    RESIDUO         reduce using rule 40 (a -> b a_p .)
    MAS             reduce using rule 40 (a -> b a_p .)
    MENQUE          reduce using rule 40 (a -> b a_p .)
    MAYQUE          reduce using rule 40 (a -> b a_p .)
    MENIGUAL        reduce using rule 40 (a -> b a_p .)
    MAYIGUAL        reduce using rule 40 (a -> b a_p .)
    IGUALQUE        reduce using rule 40 (a -> b a_p .)
    NIGUALQUE       reduce using rule 40 (a -> b a_p .)
    AND             reduce using rule 40 (a -> b a_p .)
    OR              reduce using rule 40 (a -> b a_p .)
    PTCOMA          reduce using rule 40 (a -> b a_p .)
    CORDER          reduce using rule 40 (a -> b a_p .)


state 90

    (41) a_p -> OR . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    b                              shift and go to state 131
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 91

    (43) b -> c b_p .

    OR              reduce using rule 43 (b -> c b_p .)
    TEMP            reduce using rule 43 (b -> c b_p .)
    PILA            reduce using rule 43 (b -> c b_p .)
    NOT             reduce using rule 43 (b -> c b_p .)
    NOTBIT          reduce using rule 43 (b -> c b_p .)
    PARIZQ          reduce using rule 43 (b -> c b_p .)
    MENOS           reduce using rule 43 (b -> c b_p .)
    ABS             reduce using rule 43 (b -> c b_p .)
    GOTO            reduce using rule 43 (b -> c b_p .)
    ENTERO          reduce using rule 43 (b -> c b_p .)
    DECIMAL         reduce using rule 43 (b -> c b_p .)
    ID              reduce using rule 43 (b -> c b_p .)
    PARAM           reduce using rule 43 (b -> c b_p .)
    VAL             reduce using rule 43 (b -> c b_p .)
    DIR             reduce using rule 43 (b -> c b_p .)
    PUNTERO         reduce using rule 43 (b -> c b_p .)
    CADENA          reduce using rule 43 (b -> c b_p .)
    CARACTER        reduce using rule 43 (b -> c b_p .)
    ARRAY           reduce using rule 43 (b -> c b_p .)
    PARDER          reduce using rule 43 (b -> c b_p .)
    IMPRIMIR        reduce using rule 43 (b -> c b_p .)
    UNSET           reduce using rule 43 (b -> c b_p .)
    IF              reduce using rule 43 (b -> c b_p .)
    EXIT            reduce using rule 43 (b -> c b_p .)
    $end            reduce using rule 43 (b -> c b_p .)
    POR             reduce using rule 43 (b -> c b_p .)
    DIVIDIDO        reduce using rule 43 (b -> c b_p .)
    RESIDUO         reduce using rule 43 (b -> c b_p .)
    MAS             reduce using rule 43 (b -> c b_p .)
    MENQUE          reduce using rule 43 (b -> c b_p .)
    MAYQUE          reduce using rule 43 (b -> c b_p .)
    MENIGUAL        reduce using rule 43 (b -> c b_p .)
    MAYIGUAL        reduce using rule 43 (b -> c b_p .)
    IGUALQUE        reduce using rule 43 (b -> c b_p .)
    NIGUALQUE       reduce using rule 43 (b -> c b_p .)
    AND             reduce using rule 43 (b -> c b_p .)
    PTCOMA          reduce using rule 43 (b -> c b_p .)
    CORDER          reduce using rule 43 (b -> c b_p .)


state 92

    (44) b_p -> AND . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    c                              shift and go to state 132
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 93

    (46) c -> e c_p .

    AND             reduce using rule 46 (c -> e c_p .)
    OR              reduce using rule 46 (c -> e c_p .)
    TEMP            reduce using rule 46 (c -> e c_p .)
    PILA            reduce using rule 46 (c -> e c_p .)
    NOT             reduce using rule 46 (c -> e c_p .)
    NOTBIT          reduce using rule 46 (c -> e c_p .)
    PARIZQ          reduce using rule 46 (c -> e c_p .)
    MENOS           reduce using rule 46 (c -> e c_p .)
    ABS             reduce using rule 46 (c -> e c_p .)
    GOTO            reduce using rule 46 (c -> e c_p .)
    ENTERO          reduce using rule 46 (c -> e c_p .)
    DECIMAL         reduce using rule 46 (c -> e c_p .)
    ID              reduce using rule 46 (c -> e c_p .)
    PARAM           reduce using rule 46 (c -> e c_p .)
    VAL             reduce using rule 46 (c -> e c_p .)
    DIR             reduce using rule 46 (c -> e c_p .)
    PUNTERO         reduce using rule 46 (c -> e c_p .)
    CADENA          reduce using rule 46 (c -> e c_p .)
    CARACTER        reduce using rule 46 (c -> e c_p .)
    ARRAY           reduce using rule 46 (c -> e c_p .)
    PARDER          reduce using rule 46 (c -> e c_p .)
    IMPRIMIR        reduce using rule 46 (c -> e c_p .)
    UNSET           reduce using rule 46 (c -> e c_p .)
    IF              reduce using rule 46 (c -> e c_p .)
    EXIT            reduce using rule 46 (c -> e c_p .)
    $end            reduce using rule 46 (c -> e c_p .)
    POR             reduce using rule 46 (c -> e c_p .)
    DIVIDIDO        reduce using rule 46 (c -> e c_p .)
    RESIDUO         reduce using rule 46 (c -> e c_p .)
    MAS             reduce using rule 46 (c -> e c_p .)
    MENQUE          reduce using rule 46 (c -> e c_p .)
    MAYQUE          reduce using rule 46 (c -> e c_p .)
    MENIGUAL        reduce using rule 46 (c -> e c_p .)
    MAYIGUAL        reduce using rule 46 (c -> e c_p .)
    IGUALQUE        reduce using rule 46 (c -> e c_p .)
    NIGUALQUE       reduce using rule 46 (c -> e c_p .)
    PTCOMA          reduce using rule 46 (c -> e c_p .)
    CORDER          reduce using rule 46 (c -> e c_p .)


state 94

    (47) c_p -> IGUALQUE . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    e                              shift and go to state 133
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 95

    (48) c_p -> NIGUALQUE . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    e                              shift and go to state 134
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 96

    (50) e -> f e_p .

    IGUALQUE        reduce using rule 50 (e -> f e_p .)
    NIGUALQUE       reduce using rule 50 (e -> f e_p .)
    AND             reduce using rule 50 (e -> f e_p .)
    OR              reduce using rule 50 (e -> f e_p .)
    TEMP            reduce using rule 50 (e -> f e_p .)
    PILA            reduce using rule 50 (e -> f e_p .)
    NOT             reduce using rule 50 (e -> f e_p .)
    NOTBIT          reduce using rule 50 (e -> f e_p .)
    PARIZQ          reduce using rule 50 (e -> f e_p .)
    MENOS           reduce using rule 50 (e -> f e_p .)
    ABS             reduce using rule 50 (e -> f e_p .)
    GOTO            reduce using rule 50 (e -> f e_p .)
    ENTERO          reduce using rule 50 (e -> f e_p .)
    DECIMAL         reduce using rule 50 (e -> f e_p .)
    ID              reduce using rule 50 (e -> f e_p .)
    PARAM           reduce using rule 50 (e -> f e_p .)
    VAL             reduce using rule 50 (e -> f e_p .)
    DIR             reduce using rule 50 (e -> f e_p .)
    PUNTERO         reduce using rule 50 (e -> f e_p .)
    CADENA          reduce using rule 50 (e -> f e_p .)
    CARACTER        reduce using rule 50 (e -> f e_p .)
    ARRAY           reduce using rule 50 (e -> f e_p .)
    PARDER          reduce using rule 50 (e -> f e_p .)
    IMPRIMIR        reduce using rule 50 (e -> f e_p .)
    UNSET           reduce using rule 50 (e -> f e_p .)
    IF              reduce using rule 50 (e -> f e_p .)
    EXIT            reduce using rule 50 (e -> f e_p .)
    $end            reduce using rule 50 (e -> f e_p .)
    POR             reduce using rule 50 (e -> f e_p .)
    DIVIDIDO        reduce using rule 50 (e -> f e_p .)
    RESIDUO         reduce using rule 50 (e -> f e_p .)
    MAS             reduce using rule 50 (e -> f e_p .)
    MENQUE          reduce using rule 50 (e -> f e_p .)
    MAYQUE          reduce using rule 50 (e -> f e_p .)
    MENIGUAL        reduce using rule 50 (e -> f e_p .)
    MAYIGUAL        reduce using rule 50 (e -> f e_p .)
    PTCOMA          reduce using rule 50 (e -> f e_p .)
    CORDER          reduce using rule 50 (e -> f e_p .)


state 97

    (51) e_p -> MENQUE . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    f                              shift and go to state 135
    g                              shift and go to state 52
    h                              shift and go to state 53

state 98

    (52) e_p -> MAYQUE . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    f                              shift and go to state 136
    g                              shift and go to state 52
    h                              shift and go to state 53

state 99

    (53) e_p -> MENIGUAL . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    f                              shift and go to state 137
    g                              shift and go to state 52
    h                              shift and go to state 53

state 100

    (54) e_p -> MAYIGUAL . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    f                              shift and go to state 138
    g                              shift and go to state 52
    h                              shift and go to state 53

state 101

    (56) f -> g f_p .

    MENQUE          reduce using rule 56 (f -> g f_p .)
    MAYQUE          reduce using rule 56 (f -> g f_p .)
    MENIGUAL        reduce using rule 56 (f -> g f_p .)
    MAYIGUAL        reduce using rule 56 (f -> g f_p .)
    IGUALQUE        reduce using rule 56 (f -> g f_p .)
    NIGUALQUE       reduce using rule 56 (f -> g f_p .)
    AND             reduce using rule 56 (f -> g f_p .)
    OR              reduce using rule 56 (f -> g f_p .)
    TEMP            reduce using rule 56 (f -> g f_p .)
    PILA            reduce using rule 56 (f -> g f_p .)
    NOT             reduce using rule 56 (f -> g f_p .)
    NOTBIT          reduce using rule 56 (f -> g f_p .)
    PARIZQ          reduce using rule 56 (f -> g f_p .)
    MENOS           reduce using rule 56 (f -> g f_p .)
    ABS             reduce using rule 56 (f -> g f_p .)
    GOTO            reduce using rule 56 (f -> g f_p .)
    ENTERO          reduce using rule 56 (f -> g f_p .)
    DECIMAL         reduce using rule 56 (f -> g f_p .)
    ID              reduce using rule 56 (f -> g f_p .)
    PARAM           reduce using rule 56 (f -> g f_p .)
    VAL             reduce using rule 56 (f -> g f_p .)
    DIR             reduce using rule 56 (f -> g f_p .)
    PUNTERO         reduce using rule 56 (f -> g f_p .)
    CADENA          reduce using rule 56 (f -> g f_p .)
    CARACTER        reduce using rule 56 (f -> g f_p .)
    ARRAY           reduce using rule 56 (f -> g f_p .)
    PARDER          reduce using rule 56 (f -> g f_p .)
    IMPRIMIR        reduce using rule 56 (f -> g f_p .)
    UNSET           reduce using rule 56 (f -> g f_p .)
    IF              reduce using rule 56 (f -> g f_p .)
    EXIT            reduce using rule 56 (f -> g f_p .)
    $end            reduce using rule 56 (f -> g f_p .)
    POR             reduce using rule 56 (f -> g f_p .)
    DIVIDIDO        reduce using rule 56 (f -> g f_p .)
    RESIDUO         reduce using rule 56 (f -> g f_p .)
    MAS             reduce using rule 56 (f -> g f_p .)
    PTCOMA          reduce using rule 56 (f -> g f_p .)
    CORDER          reduce using rule 56 (f -> g f_p .)


state 102

    (57) f_p -> MAS . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    g                              shift and go to state 139
    h                              shift and go to state 53

state 103

    (58) f_p -> MENOS . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    g                              shift and go to state 140
    h                              shift and go to state 53

state 104

    (60) g -> h g_p .

    MAS             reduce using rule 60 (g -> h g_p .)
    MENOS           reduce using rule 60 (g -> h g_p .)
    MENQUE          reduce using rule 60 (g -> h g_p .)
    MAYQUE          reduce using rule 60 (g -> h g_p .)
    MENIGUAL        reduce using rule 60 (g -> h g_p .)
    MAYIGUAL        reduce using rule 60 (g -> h g_p .)
    IGUALQUE        reduce using rule 60 (g -> h g_p .)
    NIGUALQUE       reduce using rule 60 (g -> h g_p .)
    AND             reduce using rule 60 (g -> h g_p .)
    OR              reduce using rule 60 (g -> h g_p .)
    TEMP            reduce using rule 60 (g -> h g_p .)
    PILA            reduce using rule 60 (g -> h g_p .)
    NOT             reduce using rule 60 (g -> h g_p .)
    NOTBIT          reduce using rule 60 (g -> h g_p .)
    PARIZQ          reduce using rule 60 (g -> h g_p .)
    ABS             reduce using rule 60 (g -> h g_p .)
    GOTO            reduce using rule 60 (g -> h g_p .)
    ENTERO          reduce using rule 60 (g -> h g_p .)
    DECIMAL         reduce using rule 60 (g -> h g_p .)
    ID              reduce using rule 60 (g -> h g_p .)
    PARAM           reduce using rule 60 (g -> h g_p .)
    VAL             reduce using rule 60 (g -> h g_p .)
    DIR             reduce using rule 60 (g -> h g_p .)
    PUNTERO         reduce using rule 60 (g -> h g_p .)
    CADENA          reduce using rule 60 (g -> h g_p .)
    CARACTER        reduce using rule 60 (g -> h g_p .)
    ARRAY           reduce using rule 60 (g -> h g_p .)
    PARDER          reduce using rule 60 (g -> h g_p .)
    IMPRIMIR        reduce using rule 60 (g -> h g_p .)
    UNSET           reduce using rule 60 (g -> h g_p .)
    IF              reduce using rule 60 (g -> h g_p .)
    EXIT            reduce using rule 60 (g -> h g_p .)
    $end            reduce using rule 60 (g -> h g_p .)
    POR             reduce using rule 60 (g -> h g_p .)
    DIVIDIDO        reduce using rule 60 (g -> h g_p .)
    RESIDUO         reduce using rule 60 (g -> h g_p .)
    PTCOMA          reduce using rule 60 (g -> h g_p .)
    CORDER          reduce using rule 60 (g -> h g_p .)


state 105

    (61) g_p -> POR . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    h                              shift and go to state 141

state 106

    (62) g_p -> DIVIDIDO . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    h                              shift and go to state 142

state 107

    (63) g_p -> RESIDUO . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    h                              shift and go to state 143

state 108

    (29) h -> TEMP dimensiones .

    POR             reduce using rule 29 (h -> TEMP dimensiones .)
    DIVIDIDO        reduce using rule 29 (h -> TEMP dimensiones .)
    RESIDUO         reduce using rule 29 (h -> TEMP dimensiones .)
    MAS             reduce using rule 29 (h -> TEMP dimensiones .)
    MENOS           reduce using rule 29 (h -> TEMP dimensiones .)
    MENQUE          reduce using rule 29 (h -> TEMP dimensiones .)
    MAYQUE          reduce using rule 29 (h -> TEMP dimensiones .)
    MENIGUAL        reduce using rule 29 (h -> TEMP dimensiones .)
    MAYIGUAL        reduce using rule 29 (h -> TEMP dimensiones .)
    IGUALQUE        reduce using rule 29 (h -> TEMP dimensiones .)
    NIGUALQUE       reduce using rule 29 (h -> TEMP dimensiones .)
    AND             reduce using rule 29 (h -> TEMP dimensiones .)
    OR              reduce using rule 29 (h -> TEMP dimensiones .)
    TEMP            reduce using rule 29 (h -> TEMP dimensiones .)
    PILA            reduce using rule 29 (h -> TEMP dimensiones .)
    NOT             reduce using rule 29 (h -> TEMP dimensiones .)
    NOTBIT          reduce using rule 29 (h -> TEMP dimensiones .)
    PARIZQ          reduce using rule 29 (h -> TEMP dimensiones .)
    ABS             reduce using rule 29 (h -> TEMP dimensiones .)
    GOTO            reduce using rule 29 (h -> TEMP dimensiones .)
    ENTERO          reduce using rule 29 (h -> TEMP dimensiones .)
    DECIMAL         reduce using rule 29 (h -> TEMP dimensiones .)
    ID              reduce using rule 29 (h -> TEMP dimensiones .)
    PARAM           reduce using rule 29 (h -> TEMP dimensiones .)
    VAL             reduce using rule 29 (h -> TEMP dimensiones .)
    DIR             reduce using rule 29 (h -> TEMP dimensiones .)
    PUNTERO         reduce using rule 29 (h -> TEMP dimensiones .)
    CADENA          reduce using rule 29 (h -> TEMP dimensiones .)
    CARACTER        reduce using rule 29 (h -> TEMP dimensiones .)
    ARRAY           reduce using rule 29 (h -> TEMP dimensiones .)
    PARDER          reduce using rule 29 (h -> TEMP dimensiones .)
    IMPRIMIR        reduce using rule 29 (h -> TEMP dimensiones .)
    UNSET           reduce using rule 29 (h -> TEMP dimensiones .)
    IF              reduce using rule 29 (h -> TEMP dimensiones .)
    EXIT            reduce using rule 29 (h -> TEMP dimensiones .)
    $end            reduce using rule 29 (h -> TEMP dimensiones .)
    PTCOMA          reduce using rule 29 (h -> TEMP dimensiones .)
    CORDER          reduce using rule 29 (h -> TEMP dimensiones .)


state 109

    (30) h -> PILA dimensiones .

    POR             reduce using rule 30 (h -> PILA dimensiones .)
    DIVIDIDO        reduce using rule 30 (h -> PILA dimensiones .)
    RESIDUO         reduce using rule 30 (h -> PILA dimensiones .)
    MAS             reduce using rule 30 (h -> PILA dimensiones .)
    MENOS           reduce using rule 30 (h -> PILA dimensiones .)
    MENQUE          reduce using rule 30 (h -> PILA dimensiones .)
    MAYQUE          reduce using rule 30 (h -> PILA dimensiones .)
    MENIGUAL        reduce using rule 30 (h -> PILA dimensiones .)
    MAYIGUAL        reduce using rule 30 (h -> PILA dimensiones .)
    IGUALQUE        reduce using rule 30 (h -> PILA dimensiones .)
    NIGUALQUE       reduce using rule 30 (h -> PILA dimensiones .)
    AND             reduce using rule 30 (h -> PILA dimensiones .)
    OR              reduce using rule 30 (h -> PILA dimensiones .)
    TEMP            reduce using rule 30 (h -> PILA dimensiones .)
    PILA            reduce using rule 30 (h -> PILA dimensiones .)
    NOT             reduce using rule 30 (h -> PILA dimensiones .)
    NOTBIT          reduce using rule 30 (h -> PILA dimensiones .)
    PARIZQ          reduce using rule 30 (h -> PILA dimensiones .)
    ABS             reduce using rule 30 (h -> PILA dimensiones .)
    GOTO            reduce using rule 30 (h -> PILA dimensiones .)
    ENTERO          reduce using rule 30 (h -> PILA dimensiones .)
    DECIMAL         reduce using rule 30 (h -> PILA dimensiones .)
    ID              reduce using rule 30 (h -> PILA dimensiones .)
    PARAM           reduce using rule 30 (h -> PILA dimensiones .)
    VAL             reduce using rule 30 (h -> PILA dimensiones .)
    DIR             reduce using rule 30 (h -> PILA dimensiones .)
    PUNTERO         reduce using rule 30 (h -> PILA dimensiones .)
    CADENA          reduce using rule 30 (h -> PILA dimensiones .)
    CARACTER        reduce using rule 30 (h -> PILA dimensiones .)
    ARRAY           reduce using rule 30 (h -> PILA dimensiones .)
    PARDER          reduce using rule 30 (h -> PILA dimensiones .)
    IMPRIMIR        reduce using rule 30 (h -> PILA dimensiones .)
    UNSET           reduce using rule 30 (h -> PILA dimensiones .)
    IF              reduce using rule 30 (h -> PILA dimensiones .)
    EXIT            reduce using rule 30 (h -> PILA dimensiones .)
    $end            reduce using rule 30 (h -> PILA dimensiones .)
    PTCOMA          reduce using rule 30 (h -> PILA dimensiones .)
    CORDER          reduce using rule 30 (h -> PILA dimensiones .)


state 110

    (21) asignacion_temp -> TEMP IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 144


state 111

    (27) asignacion_temp -> TEMP dimensiones IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 145
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 112

    (32) dimensiones_p -> dimension . dimensiones_p
    (32) dimensiones_p -> . dimension dimensiones_p
    (33) dimensiones_p -> .
    (34) dimension -> . CORIZQ h CORDER

    IGUAL           reduce using rule 33 (dimensiones_p -> .)
    IMPRIMIR        reduce using rule 33 (dimensiones_p -> .)
    TEMP            reduce using rule 33 (dimensiones_p -> .)
    PILA            reduce using rule 33 (dimensiones_p -> .)
    PARAM           reduce using rule 33 (dimensiones_p -> .)
    VAL             reduce using rule 33 (dimensiones_p -> .)
    DIR             reduce using rule 33 (dimensiones_p -> .)
    PUNTERO         reduce using rule 33 (dimensiones_p -> .)
    UNSET           reduce using rule 33 (dimensiones_p -> .)
    IF              reduce using rule 33 (dimensiones_p -> .)
    ID              reduce using rule 33 (dimensiones_p -> .)
    EXIT            reduce using rule 33 (dimensiones_p -> .)
    NOT             reduce using rule 33 (dimensiones_p -> .)
    NOTBIT          reduce using rule 33 (dimensiones_p -> .)
    PARIZQ          reduce using rule 33 (dimensiones_p -> .)
    MENOS           reduce using rule 33 (dimensiones_p -> .)
    ABS             reduce using rule 33 (dimensiones_p -> .)
    GOTO            reduce using rule 33 (dimensiones_p -> .)
    ENTERO          reduce using rule 33 (dimensiones_p -> .)
    DECIMAL         reduce using rule 33 (dimensiones_p -> .)
    CADENA          reduce using rule 33 (dimensiones_p -> .)
    CARACTER        reduce using rule 33 (dimensiones_p -> .)
    ARRAY           reduce using rule 33 (dimensiones_p -> .)
    $end            reduce using rule 33 (dimensiones_p -> .)
    POR             reduce using rule 33 (dimensiones_p -> .)
    DIVIDIDO        reduce using rule 33 (dimensiones_p -> .)
    RESIDUO         reduce using rule 33 (dimensiones_p -> .)
    MAS             reduce using rule 33 (dimensiones_p -> .)
    MENQUE          reduce using rule 33 (dimensiones_p -> .)
    MAYQUE          reduce using rule 33 (dimensiones_p -> .)
    MENIGUAL        reduce using rule 33 (dimensiones_p -> .)
    MAYIGUAL        reduce using rule 33 (dimensiones_p -> .)
    IGUALQUE        reduce using rule 33 (dimensiones_p -> .)
    NIGUALQUE       reduce using rule 33 (dimensiones_p -> .)
    AND             reduce using rule 33 (dimensiones_p -> .)
    OR              reduce using rule 33 (dimensiones_p -> .)
    PARDER          reduce using rule 33 (dimensiones_p -> .)
    PTCOMA          reduce using rule 33 (dimensiones_p -> .)
    CORDER          reduce using rule 33 (dimensiones_p -> .)
    CORIZQ          shift and go to state 64

    dimension                      shift and go to state 112
    dimensiones_p                  shift and go to state 146

state 113

    (31) dimensiones -> dimension dimensiones_p .

    IGUAL           reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    IMPRIMIR        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    TEMP            reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PILA            reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PARAM           reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    VAL             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    DIR             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PUNTERO         reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    UNSET           reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    IF              reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    ID              reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    EXIT            reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    NOT             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    NOTBIT          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PARIZQ          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MENOS           reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    ABS             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    GOTO            reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    ENTERO          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    DECIMAL         reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    CADENA          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    CARACTER        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    ARRAY           reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    $end            reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    POR             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    DIVIDIDO        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    RESIDUO         reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MAS             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MENQUE          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MAYQUE          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MENIGUAL        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    MAYIGUAL        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    IGUALQUE        reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    NIGUALQUE       reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    AND             reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    OR              reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PARDER          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    PTCOMA          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)
    CORDER          reduce using rule 31 (dimensiones -> dimension dimensiones_p .)


state 114

    (34) dimension -> CORIZQ h . CORDER

    CORDER          shift and go to state 147


state 115

    (28) asignacion_temp -> PILA dimensiones IGUAL . expresiones PTCOMA
    (36) expresiones -> . expresion expresiones_p
    (39) expresion -> . a
    (40) a -> . b a_p
    (43) b -> . c b_p
    (46) c -> . e c_p
    (50) e -> . f e_p
    (56) f -> . g f_p
    (60) g -> . h g_p
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    expresiones                    shift and go to state 148
    expresion                      shift and go to state 46
    a                              shift and go to state 47
    b                              shift and go to state 48
    c                              shift and go to state 49
    e                              shift and go to state 50
    f                              shift and go to state 51
    g                              shift and go to state 52
    h                              shift and go to state 53

state 116

    (25) asignacion_pila -> PILA IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 149


state 117

    (22) asignacion_param -> PARAM IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 150


state 118

    (23) asignacion_val -> VAL IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 151


state 119

    (24) asignacion_dir -> DIR IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 152


state 120

    (26) asignacion_puntero -> PUNTERO IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 153


state 121

    (20) borrar_temp -> UNSET PARIZQ expresiones . PARDER PTCOMA

    PARDER          shift and go to state 154


state 122

    (35) if_instr -> IF PARIZQ expresiones . PARDER h

    PARDER          shift and go to state 155


state 123

    (71) h -> ABS PARIZQ expresiones . PARDER

    PARDER          shift and go to state 156


state 124

    (74) h -> GOTO expresiones PTCOMA .

    IMPRIMIR        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    TEMP            reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PILA            reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PARAM           reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    VAL             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    DIR             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PUNTERO         reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    UNSET           reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    IF              reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    ID              reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    EXIT            reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    NOT             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    NOTBIT          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PARIZQ          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MENOS           reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    ABS             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    GOTO            reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    ENTERO          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    DECIMAL         reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    CADENA          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    CARACTER        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    ARRAY           reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    $end            reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    POR             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    DIVIDIDO        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    RESIDUO         reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MAS             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MENQUE          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MAYQUE          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MENIGUAL        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    MAYIGUAL        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    IGUALQUE        reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    NIGUALQUE       reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    AND             reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    OR              reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PARDER          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    PTCOMA          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)
    CORDER          reduce using rule 74 (h -> GOTO expresiones PTCOMA .)


state 125

    (86) h -> ARRAY PARIZQ PARDER .

    IMPRIMIR        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    TEMP            reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PILA            reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PARAM           reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    VAL             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    DIR             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PUNTERO         reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    UNSET           reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    IF              reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    ID              reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    EXIT            reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    NOT             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    NOTBIT          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PARIZQ          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MENOS           reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    ABS             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    GOTO            reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    ENTERO          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    DECIMAL         reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    CADENA          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    CARACTER        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    ARRAY           reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    $end            reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    POR             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    RESIDUO         reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MAS             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MENQUE          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MAYQUE          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MENIGUAL        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    IGUALQUE        reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    AND             reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    OR              reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PARDER          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    PTCOMA          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)
    CORDER          reduce using rule 86 (h -> ARRAY PARIZQ PARDER .)


state 126

    (19) imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 157


state 127

    (67) h -> PARIZQ INT PARDER expresiones .

    IMPRIMIR        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    TEMP            reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PILA            reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PARAM           reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    VAL             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    DIR             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PUNTERO         reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    UNSET           reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    IF              reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    ID              reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    EXIT            reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    NOT             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    NOTBIT          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PARIZQ          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MENOS           reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    ABS             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    GOTO            reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    ENTERO          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    DECIMAL         reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    CADENA          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    CARACTER        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    ARRAY           reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    $end            reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    POR             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    DIVIDIDO        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    RESIDUO         reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MAS             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MENQUE          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MAYQUE          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MENIGUAL        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    MAYIGUAL        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    IGUALQUE        reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    NIGUALQUE       reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    AND             reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    OR              reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PARDER          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    PTCOMA          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)
    CORDER          reduce using rule 67 (h -> PARIZQ INT PARDER expresiones .)


state 128

    (68) h -> PARIZQ FLOAT PARDER expresiones .

    IMPRIMIR        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    TEMP            reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PILA            reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PARAM           reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    VAL             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    DIR             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PUNTERO         reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    UNSET           reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    IF              reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    ID              reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    EXIT            reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    NOT             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    NOTBIT          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PARIZQ          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MENOS           reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    ABS             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    GOTO            reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    ENTERO          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    DECIMAL         reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    CADENA          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    CARACTER        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    ARRAY           reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    $end            reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    POR             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    DIVIDIDO        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    RESIDUO         reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MAS             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MENQUE          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MAYQUE          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MENIGUAL        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    MAYIGUAL        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    IGUALQUE        reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    NIGUALQUE       reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    AND             reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    OR              reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PARDER          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    PTCOMA          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)
    CORDER          reduce using rule 68 (h -> PARIZQ FLOAT PARDER expresiones .)


state 129

    (69) h -> PARIZQ CHAR PARDER expresiones .

    IMPRIMIR        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    TEMP            reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PILA            reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PARAM           reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    VAL             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    DIR             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PUNTERO         reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    UNSET           reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    IF              reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    ID              reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    EXIT            reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    NOT             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    NOTBIT          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PARIZQ          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MENOS           reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    ABS             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    GOTO            reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    ENTERO          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    DECIMAL         reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    CADENA          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    CARACTER        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    ARRAY           reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    $end            reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    POR             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    DIVIDIDO        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    RESIDUO         reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MAS             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MENQUE          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MAYQUE          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MENIGUAL        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    MAYIGUAL        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    IGUALQUE        reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    NIGUALQUE       reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    AND             reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    OR              reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PARDER          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    PTCOMA          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)
    CORDER          reduce using rule 69 (h -> PARIZQ CHAR PARDER expresiones .)


state 130

    (37) expresiones_p -> expresion expresiones_p .

    IMPRIMIR        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    TEMP            reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PILA            reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PARAM           reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    VAL             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    DIR             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PUNTERO         reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    UNSET           reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    IF              reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    ID              reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    EXIT            reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    NOT             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    NOTBIT          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PARIZQ          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MENOS           reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    ABS             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    GOTO            reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    ENTERO          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    DECIMAL         reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    CADENA          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    CARACTER        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    ARRAY           reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    $end            reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    POR             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    DIVIDIDO        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    RESIDUO         reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MAS             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MENQUE          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MAYQUE          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MENIGUAL        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    MAYIGUAL        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    IGUALQUE        reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    NIGUALQUE       reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    AND             reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    OR              reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PARDER          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    PTCOMA          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)
    CORDER          reduce using rule 37 (expresiones_p -> expresion expresiones_p .)


state 131

    (41) a_p -> OR b . a_p
    (41) a_p -> . OR b a_p
    (42) a_p -> .

  ! shift/reduce conflict for OR resolved as shift
    OR              shift and go to state 90
    IMPRIMIR        reduce using rule 42 (a_p -> .)
    TEMP            reduce using rule 42 (a_p -> .)
    PILA            reduce using rule 42 (a_p -> .)
    PARAM           reduce using rule 42 (a_p -> .)
    VAL             reduce using rule 42 (a_p -> .)
    DIR             reduce using rule 42 (a_p -> .)
    PUNTERO         reduce using rule 42 (a_p -> .)
    UNSET           reduce using rule 42 (a_p -> .)
    IF              reduce using rule 42 (a_p -> .)
    ID              reduce using rule 42 (a_p -> .)
    EXIT            reduce using rule 42 (a_p -> .)
    NOT             reduce using rule 42 (a_p -> .)
    NOTBIT          reduce using rule 42 (a_p -> .)
    PARIZQ          reduce using rule 42 (a_p -> .)
    MENOS           reduce using rule 42 (a_p -> .)
    ABS             reduce using rule 42 (a_p -> .)
    GOTO            reduce using rule 42 (a_p -> .)
    ENTERO          reduce using rule 42 (a_p -> .)
    DECIMAL         reduce using rule 42 (a_p -> .)
    CADENA          reduce using rule 42 (a_p -> .)
    CARACTER        reduce using rule 42 (a_p -> .)
    ARRAY           reduce using rule 42 (a_p -> .)
    $end            reduce using rule 42 (a_p -> .)
    POR             reduce using rule 42 (a_p -> .)
    DIVIDIDO        reduce using rule 42 (a_p -> .)
    RESIDUO         reduce using rule 42 (a_p -> .)
    MAS             reduce using rule 42 (a_p -> .)
    MENQUE          reduce using rule 42 (a_p -> .)
    MAYQUE          reduce using rule 42 (a_p -> .)
    MENIGUAL        reduce using rule 42 (a_p -> .)
    MAYIGUAL        reduce using rule 42 (a_p -> .)
    IGUALQUE        reduce using rule 42 (a_p -> .)
    NIGUALQUE       reduce using rule 42 (a_p -> .)
    AND             reduce using rule 42 (a_p -> .)
    PARDER          reduce using rule 42 (a_p -> .)
    PTCOMA          reduce using rule 42 (a_p -> .)
    CORDER          reduce using rule 42 (a_p -> .)

  ! OR              [ reduce using rule 42 (a_p -> .) ]

    a_p                            shift and go to state 158

state 132

    (44) b_p -> AND c . b_p
    (44) b_p -> . AND c b_p
    (45) b_p -> .

  ! shift/reduce conflict for AND resolved as shift
    AND             shift and go to state 92
    IMPRIMIR        reduce using rule 45 (b_p -> .)
    TEMP            reduce using rule 45 (b_p -> .)
    PILA            reduce using rule 45 (b_p -> .)
    PARAM           reduce using rule 45 (b_p -> .)
    VAL             reduce using rule 45 (b_p -> .)
    DIR             reduce using rule 45 (b_p -> .)
    PUNTERO         reduce using rule 45 (b_p -> .)
    UNSET           reduce using rule 45 (b_p -> .)
    IF              reduce using rule 45 (b_p -> .)
    ID              reduce using rule 45 (b_p -> .)
    EXIT            reduce using rule 45 (b_p -> .)
    NOT             reduce using rule 45 (b_p -> .)
    NOTBIT          reduce using rule 45 (b_p -> .)
    PARIZQ          reduce using rule 45 (b_p -> .)
    MENOS           reduce using rule 45 (b_p -> .)
    ABS             reduce using rule 45 (b_p -> .)
    GOTO            reduce using rule 45 (b_p -> .)
    ENTERO          reduce using rule 45 (b_p -> .)
    DECIMAL         reduce using rule 45 (b_p -> .)
    CADENA          reduce using rule 45 (b_p -> .)
    CARACTER        reduce using rule 45 (b_p -> .)
    ARRAY           reduce using rule 45 (b_p -> .)
    $end            reduce using rule 45 (b_p -> .)
    POR             reduce using rule 45 (b_p -> .)
    DIVIDIDO        reduce using rule 45 (b_p -> .)
    RESIDUO         reduce using rule 45 (b_p -> .)
    MAS             reduce using rule 45 (b_p -> .)
    MENQUE          reduce using rule 45 (b_p -> .)
    MAYQUE          reduce using rule 45 (b_p -> .)
    MENIGUAL        reduce using rule 45 (b_p -> .)
    MAYIGUAL        reduce using rule 45 (b_p -> .)
    IGUALQUE        reduce using rule 45 (b_p -> .)
    NIGUALQUE       reduce using rule 45 (b_p -> .)
    OR              reduce using rule 45 (b_p -> .)
    PARDER          reduce using rule 45 (b_p -> .)
    PTCOMA          reduce using rule 45 (b_p -> .)
    CORDER          reduce using rule 45 (b_p -> .)

  ! AND             [ reduce using rule 45 (b_p -> .) ]

    b_p                            shift and go to state 159

state 133

    (47) c_p -> IGUALQUE e . c_p
    (47) c_p -> . IGUALQUE e c_p
    (48) c_p -> . NIGUALQUE e c_p
    (49) c_p -> .

  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    IMPRIMIR        reduce using rule 49 (c_p -> .)
    TEMP            reduce using rule 49 (c_p -> .)
    PILA            reduce using rule 49 (c_p -> .)
    PARAM           reduce using rule 49 (c_p -> .)
    VAL             reduce using rule 49 (c_p -> .)
    DIR             reduce using rule 49 (c_p -> .)
    PUNTERO         reduce using rule 49 (c_p -> .)
    UNSET           reduce using rule 49 (c_p -> .)
    IF              reduce using rule 49 (c_p -> .)
    ID              reduce using rule 49 (c_p -> .)
    EXIT            reduce using rule 49 (c_p -> .)
    NOT             reduce using rule 49 (c_p -> .)
    NOTBIT          reduce using rule 49 (c_p -> .)
    PARIZQ          reduce using rule 49 (c_p -> .)
    MENOS           reduce using rule 49 (c_p -> .)
    ABS             reduce using rule 49 (c_p -> .)
    GOTO            reduce using rule 49 (c_p -> .)
    ENTERO          reduce using rule 49 (c_p -> .)
    DECIMAL         reduce using rule 49 (c_p -> .)
    CADENA          reduce using rule 49 (c_p -> .)
    CARACTER        reduce using rule 49 (c_p -> .)
    ARRAY           reduce using rule 49 (c_p -> .)
    $end            reduce using rule 49 (c_p -> .)
    POR             reduce using rule 49 (c_p -> .)
    DIVIDIDO        reduce using rule 49 (c_p -> .)
    RESIDUO         reduce using rule 49 (c_p -> .)
    MAS             reduce using rule 49 (c_p -> .)
    MENQUE          reduce using rule 49 (c_p -> .)
    MAYQUE          reduce using rule 49 (c_p -> .)
    MENIGUAL        reduce using rule 49 (c_p -> .)
    MAYIGUAL        reduce using rule 49 (c_p -> .)
    AND             reduce using rule 49 (c_p -> .)
    OR              reduce using rule 49 (c_p -> .)
    PARDER          reduce using rule 49 (c_p -> .)
    PTCOMA          reduce using rule 49 (c_p -> .)
    CORDER          reduce using rule 49 (c_p -> .)

  ! IGUALQUE        [ reduce using rule 49 (c_p -> .) ]
  ! NIGUALQUE       [ reduce using rule 49 (c_p -> .) ]

    c_p                            shift and go to state 160

state 134

    (48) c_p -> NIGUALQUE e . c_p
    (47) c_p -> . IGUALQUE e c_p
    (48) c_p -> . NIGUALQUE e c_p
    (49) c_p -> .

  ! shift/reduce conflict for IGUALQUE resolved as shift
  ! shift/reduce conflict for NIGUALQUE resolved as shift
    IGUALQUE        shift and go to state 94
    NIGUALQUE       shift and go to state 95
    IMPRIMIR        reduce using rule 49 (c_p -> .)
    TEMP            reduce using rule 49 (c_p -> .)
    PILA            reduce using rule 49 (c_p -> .)
    PARAM           reduce using rule 49 (c_p -> .)
    VAL             reduce using rule 49 (c_p -> .)
    DIR             reduce using rule 49 (c_p -> .)
    PUNTERO         reduce using rule 49 (c_p -> .)
    UNSET           reduce using rule 49 (c_p -> .)
    IF              reduce using rule 49 (c_p -> .)
    ID              reduce using rule 49 (c_p -> .)
    EXIT            reduce using rule 49 (c_p -> .)
    NOT             reduce using rule 49 (c_p -> .)
    NOTBIT          reduce using rule 49 (c_p -> .)
    PARIZQ          reduce using rule 49 (c_p -> .)
    MENOS           reduce using rule 49 (c_p -> .)
    ABS             reduce using rule 49 (c_p -> .)
    GOTO            reduce using rule 49 (c_p -> .)
    ENTERO          reduce using rule 49 (c_p -> .)
    DECIMAL         reduce using rule 49 (c_p -> .)
    CADENA          reduce using rule 49 (c_p -> .)
    CARACTER        reduce using rule 49 (c_p -> .)
    ARRAY           reduce using rule 49 (c_p -> .)
    $end            reduce using rule 49 (c_p -> .)
    POR             reduce using rule 49 (c_p -> .)
    DIVIDIDO        reduce using rule 49 (c_p -> .)
    RESIDUO         reduce using rule 49 (c_p -> .)
    MAS             reduce using rule 49 (c_p -> .)
    MENQUE          reduce using rule 49 (c_p -> .)
    MAYQUE          reduce using rule 49 (c_p -> .)
    MENIGUAL        reduce using rule 49 (c_p -> .)
    MAYIGUAL        reduce using rule 49 (c_p -> .)
    AND             reduce using rule 49 (c_p -> .)
    OR              reduce using rule 49 (c_p -> .)
    PARDER          reduce using rule 49 (c_p -> .)
    PTCOMA          reduce using rule 49 (c_p -> .)
    CORDER          reduce using rule 49 (c_p -> .)

  ! IGUALQUE        [ reduce using rule 49 (c_p -> .) ]
  ! NIGUALQUE       [ reduce using rule 49 (c_p -> .) ]

    c_p                            shift and go to state 161

state 135

    (51) e_p -> MENQUE f . e_p
    (51) e_p -> . MENQUE f e_p
    (52) e_p -> . MAYQUE f e_p
    (53) e_p -> . MENIGUAL f e_p
    (54) e_p -> . MAYIGUAL f e_p
    (55) e_p -> .

  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
    MENQUE          shift and go to state 97
    MAYQUE          shift and go to state 98
    MENIGUAL        shift and go to state 99
    MAYIGUAL        shift and go to state 100
    IMPRIMIR        reduce using rule 55 (e_p -> .)
    TEMP            reduce using rule 55 (e_p -> .)
    PILA            reduce using rule 55 (e_p -> .)
    PARAM           reduce using rule 55 (e_p -> .)
    VAL             reduce using rule 55 (e_p -> .)
    DIR             reduce using rule 55 (e_p -> .)
    PUNTERO         reduce using rule 55 (e_p -> .)
    UNSET           reduce using rule 55 (e_p -> .)
    IF              reduce using rule 55 (e_p -> .)
    ID              reduce using rule 55 (e_p -> .)
    EXIT            reduce using rule 55 (e_p -> .)
    NOT             reduce using rule 55 (e_p -> .)
    NOTBIT          reduce using rule 55 (e_p -> .)
    PARIZQ          reduce using rule 55 (e_p -> .)
    MENOS           reduce using rule 55 (e_p -> .)
    ABS             reduce using rule 55 (e_p -> .)
    GOTO            reduce using rule 55 (e_p -> .)
    ENTERO          reduce using rule 55 (e_p -> .)
    DECIMAL         reduce using rule 55 (e_p -> .)
    CADENA          reduce using rule 55 (e_p -> .)
    CARACTER        reduce using rule 55 (e_p -> .)
    ARRAY           reduce using rule 55 (e_p -> .)
    $end            reduce using rule 55 (e_p -> .)
    POR             reduce using rule 55 (e_p -> .)
    DIVIDIDO        reduce using rule 55 (e_p -> .)
    RESIDUO         reduce using rule 55 (e_p -> .)
    MAS             reduce using rule 55 (e_p -> .)
    IGUALQUE        reduce using rule 55 (e_p -> .)
    NIGUALQUE       reduce using rule 55 (e_p -> .)
    AND             reduce using rule 55 (e_p -> .)
    OR              reduce using rule 55 (e_p -> .)
    PARDER          reduce using rule 55 (e_p -> .)
    PTCOMA          reduce using rule 55 (e_p -> .)
    CORDER          reduce using rule 55 (e_p -> .)

  ! MENQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MAYQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MENIGUAL        [ reduce using rule 55 (e_p -> .) ]
  ! MAYIGUAL        [ reduce using rule 55 (e_p -> .) ]

    e_p                            shift and go to state 162

state 136

    (52) e_p -> MAYQUE f . e_p
    (51) e_p -> . MENQUE f e_p
    (52) e_p -> . MAYQUE f e_p
    (53) e_p -> . MENIGUAL f e_p
    (54) e_p -> . MAYIGUAL f e_p
    (55) e_p -> .

  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
    MENQUE          shift and go to state 97
    MAYQUE          shift and go to state 98
    MENIGUAL        shift and go to state 99
    MAYIGUAL        shift and go to state 100
    IMPRIMIR        reduce using rule 55 (e_p -> .)
    TEMP            reduce using rule 55 (e_p -> .)
    PILA            reduce using rule 55 (e_p -> .)
    PARAM           reduce using rule 55 (e_p -> .)
    VAL             reduce using rule 55 (e_p -> .)
    DIR             reduce using rule 55 (e_p -> .)
    PUNTERO         reduce using rule 55 (e_p -> .)
    UNSET           reduce using rule 55 (e_p -> .)
    IF              reduce using rule 55 (e_p -> .)
    ID              reduce using rule 55 (e_p -> .)
    EXIT            reduce using rule 55 (e_p -> .)
    NOT             reduce using rule 55 (e_p -> .)
    NOTBIT          reduce using rule 55 (e_p -> .)
    PARIZQ          reduce using rule 55 (e_p -> .)
    MENOS           reduce using rule 55 (e_p -> .)
    ABS             reduce using rule 55 (e_p -> .)
    GOTO            reduce using rule 55 (e_p -> .)
    ENTERO          reduce using rule 55 (e_p -> .)
    DECIMAL         reduce using rule 55 (e_p -> .)
    CADENA          reduce using rule 55 (e_p -> .)
    CARACTER        reduce using rule 55 (e_p -> .)
    ARRAY           reduce using rule 55 (e_p -> .)
    $end            reduce using rule 55 (e_p -> .)
    POR             reduce using rule 55 (e_p -> .)
    DIVIDIDO        reduce using rule 55 (e_p -> .)
    RESIDUO         reduce using rule 55 (e_p -> .)
    MAS             reduce using rule 55 (e_p -> .)
    IGUALQUE        reduce using rule 55 (e_p -> .)
    NIGUALQUE       reduce using rule 55 (e_p -> .)
    AND             reduce using rule 55 (e_p -> .)
    OR              reduce using rule 55 (e_p -> .)
    PARDER          reduce using rule 55 (e_p -> .)
    PTCOMA          reduce using rule 55 (e_p -> .)
    CORDER          reduce using rule 55 (e_p -> .)

  ! MENQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MAYQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MENIGUAL        [ reduce using rule 55 (e_p -> .) ]
  ! MAYIGUAL        [ reduce using rule 55 (e_p -> .) ]

    e_p                            shift and go to state 163

state 137

    (53) e_p -> MENIGUAL f . e_p
    (51) e_p -> . MENQUE f e_p
    (52) e_p -> . MAYQUE f e_p
    (53) e_p -> . MENIGUAL f e_p
    (54) e_p -> . MAYIGUAL f e_p
    (55) e_p -> .

  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
    MENQUE          shift and go to state 97
    MAYQUE          shift and go to state 98
    MENIGUAL        shift and go to state 99
    MAYIGUAL        shift and go to state 100
    IMPRIMIR        reduce using rule 55 (e_p -> .)
    TEMP            reduce using rule 55 (e_p -> .)
    PILA            reduce using rule 55 (e_p -> .)
    PARAM           reduce using rule 55 (e_p -> .)
    VAL             reduce using rule 55 (e_p -> .)
    DIR             reduce using rule 55 (e_p -> .)
    PUNTERO         reduce using rule 55 (e_p -> .)
    UNSET           reduce using rule 55 (e_p -> .)
    IF              reduce using rule 55 (e_p -> .)
    ID              reduce using rule 55 (e_p -> .)
    EXIT            reduce using rule 55 (e_p -> .)
    NOT             reduce using rule 55 (e_p -> .)
    NOTBIT          reduce using rule 55 (e_p -> .)
    PARIZQ          reduce using rule 55 (e_p -> .)
    MENOS           reduce using rule 55 (e_p -> .)
    ABS             reduce using rule 55 (e_p -> .)
    GOTO            reduce using rule 55 (e_p -> .)
    ENTERO          reduce using rule 55 (e_p -> .)
    DECIMAL         reduce using rule 55 (e_p -> .)
    CADENA          reduce using rule 55 (e_p -> .)
    CARACTER        reduce using rule 55 (e_p -> .)
    ARRAY           reduce using rule 55 (e_p -> .)
    $end            reduce using rule 55 (e_p -> .)
    POR             reduce using rule 55 (e_p -> .)
    DIVIDIDO        reduce using rule 55 (e_p -> .)
    RESIDUO         reduce using rule 55 (e_p -> .)
    MAS             reduce using rule 55 (e_p -> .)
    IGUALQUE        reduce using rule 55 (e_p -> .)
    NIGUALQUE       reduce using rule 55 (e_p -> .)
    AND             reduce using rule 55 (e_p -> .)
    OR              reduce using rule 55 (e_p -> .)
    PARDER          reduce using rule 55 (e_p -> .)
    PTCOMA          reduce using rule 55 (e_p -> .)
    CORDER          reduce using rule 55 (e_p -> .)

  ! MENQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MAYQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MENIGUAL        [ reduce using rule 55 (e_p -> .) ]
  ! MAYIGUAL        [ reduce using rule 55 (e_p -> .) ]

    e_p                            shift and go to state 164

state 138

    (54) e_p -> MAYIGUAL f . e_p
    (51) e_p -> . MENQUE f e_p
    (52) e_p -> . MAYQUE f e_p
    (53) e_p -> . MENIGUAL f e_p
    (54) e_p -> . MAYIGUAL f e_p
    (55) e_p -> .

  ! shift/reduce conflict for MENQUE resolved as shift
  ! shift/reduce conflict for MAYQUE resolved as shift
  ! shift/reduce conflict for MENIGUAL resolved as shift
  ! shift/reduce conflict for MAYIGUAL resolved as shift
    MENQUE          shift and go to state 97
    MAYQUE          shift and go to state 98
    MENIGUAL        shift and go to state 99
    MAYIGUAL        shift and go to state 100
    IMPRIMIR        reduce using rule 55 (e_p -> .)
    TEMP            reduce using rule 55 (e_p -> .)
    PILA            reduce using rule 55 (e_p -> .)
    PARAM           reduce using rule 55 (e_p -> .)
    VAL             reduce using rule 55 (e_p -> .)
    DIR             reduce using rule 55 (e_p -> .)
    PUNTERO         reduce using rule 55 (e_p -> .)
    UNSET           reduce using rule 55 (e_p -> .)
    IF              reduce using rule 55 (e_p -> .)
    ID              reduce using rule 55 (e_p -> .)
    EXIT            reduce using rule 55 (e_p -> .)
    NOT             reduce using rule 55 (e_p -> .)
    NOTBIT          reduce using rule 55 (e_p -> .)
    PARIZQ          reduce using rule 55 (e_p -> .)
    MENOS           reduce using rule 55 (e_p -> .)
    ABS             reduce using rule 55 (e_p -> .)
    GOTO            reduce using rule 55 (e_p -> .)
    ENTERO          reduce using rule 55 (e_p -> .)
    DECIMAL         reduce using rule 55 (e_p -> .)
    CADENA          reduce using rule 55 (e_p -> .)
    CARACTER        reduce using rule 55 (e_p -> .)
    ARRAY           reduce using rule 55 (e_p -> .)
    $end            reduce using rule 55 (e_p -> .)
    POR             reduce using rule 55 (e_p -> .)
    DIVIDIDO        reduce using rule 55 (e_p -> .)
    RESIDUO         reduce using rule 55 (e_p -> .)
    MAS             reduce using rule 55 (e_p -> .)
    IGUALQUE        reduce using rule 55 (e_p -> .)
    NIGUALQUE       reduce using rule 55 (e_p -> .)
    AND             reduce using rule 55 (e_p -> .)
    OR              reduce using rule 55 (e_p -> .)
    PARDER          reduce using rule 55 (e_p -> .)
    PTCOMA          reduce using rule 55 (e_p -> .)
    CORDER          reduce using rule 55 (e_p -> .)

  ! MENQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MAYQUE          [ reduce using rule 55 (e_p -> .) ]
  ! MENIGUAL        [ reduce using rule 55 (e_p -> .) ]
  ! MAYIGUAL        [ reduce using rule 55 (e_p -> .) ]

    e_p                            shift and go to state 165

state 139

    (57) f_p -> MAS g . f_p
    (57) f_p -> . MAS g f_p
    (58) f_p -> . MENOS g f_p
    (59) f_p -> .

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    IMPRIMIR        reduce using rule 59 (f_p -> .)
    TEMP            reduce using rule 59 (f_p -> .)
    PILA            reduce using rule 59 (f_p -> .)
    PARAM           reduce using rule 59 (f_p -> .)
    VAL             reduce using rule 59 (f_p -> .)
    DIR             reduce using rule 59 (f_p -> .)
    PUNTERO         reduce using rule 59 (f_p -> .)
    UNSET           reduce using rule 59 (f_p -> .)
    IF              reduce using rule 59 (f_p -> .)
    ID              reduce using rule 59 (f_p -> .)
    EXIT            reduce using rule 59 (f_p -> .)
    NOT             reduce using rule 59 (f_p -> .)
    NOTBIT          reduce using rule 59 (f_p -> .)
    PARIZQ          reduce using rule 59 (f_p -> .)
    ABS             reduce using rule 59 (f_p -> .)
    GOTO            reduce using rule 59 (f_p -> .)
    ENTERO          reduce using rule 59 (f_p -> .)
    DECIMAL         reduce using rule 59 (f_p -> .)
    CADENA          reduce using rule 59 (f_p -> .)
    CARACTER        reduce using rule 59 (f_p -> .)
    ARRAY           reduce using rule 59 (f_p -> .)
    $end            reduce using rule 59 (f_p -> .)
    POR             reduce using rule 59 (f_p -> .)
    DIVIDIDO        reduce using rule 59 (f_p -> .)
    RESIDUO         reduce using rule 59 (f_p -> .)
    MENQUE          reduce using rule 59 (f_p -> .)
    MAYQUE          reduce using rule 59 (f_p -> .)
    MENIGUAL        reduce using rule 59 (f_p -> .)
    MAYIGUAL        reduce using rule 59 (f_p -> .)
    IGUALQUE        reduce using rule 59 (f_p -> .)
    NIGUALQUE       reduce using rule 59 (f_p -> .)
    AND             reduce using rule 59 (f_p -> .)
    OR              reduce using rule 59 (f_p -> .)
    PARDER          reduce using rule 59 (f_p -> .)
    PTCOMA          reduce using rule 59 (f_p -> .)
    CORDER          reduce using rule 59 (f_p -> .)

  ! MENOS           [ reduce using rule 59 (f_p -> .) ]
  ! MAS             [ reduce using rule 59 (f_p -> .) ]

    f_p                            shift and go to state 166

state 140

    (58) f_p -> MENOS g . f_p
    (57) f_p -> . MAS g f_p
    (58) f_p -> . MENOS g f_p
    (59) f_p -> .

  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 102
    MENOS           shift and go to state 103
    IMPRIMIR        reduce using rule 59 (f_p -> .)
    TEMP            reduce using rule 59 (f_p -> .)
    PILA            reduce using rule 59 (f_p -> .)
    PARAM           reduce using rule 59 (f_p -> .)
    VAL             reduce using rule 59 (f_p -> .)
    DIR             reduce using rule 59 (f_p -> .)
    PUNTERO         reduce using rule 59 (f_p -> .)
    UNSET           reduce using rule 59 (f_p -> .)
    IF              reduce using rule 59 (f_p -> .)
    ID              reduce using rule 59 (f_p -> .)
    EXIT            reduce using rule 59 (f_p -> .)
    NOT             reduce using rule 59 (f_p -> .)
    NOTBIT          reduce using rule 59 (f_p -> .)
    PARIZQ          reduce using rule 59 (f_p -> .)
    ABS             reduce using rule 59 (f_p -> .)
    GOTO            reduce using rule 59 (f_p -> .)
    ENTERO          reduce using rule 59 (f_p -> .)
    DECIMAL         reduce using rule 59 (f_p -> .)
    CADENA          reduce using rule 59 (f_p -> .)
    CARACTER        reduce using rule 59 (f_p -> .)
    ARRAY           reduce using rule 59 (f_p -> .)
    $end            reduce using rule 59 (f_p -> .)
    POR             reduce using rule 59 (f_p -> .)
    DIVIDIDO        reduce using rule 59 (f_p -> .)
    RESIDUO         reduce using rule 59 (f_p -> .)
    MENQUE          reduce using rule 59 (f_p -> .)
    MAYQUE          reduce using rule 59 (f_p -> .)
    MENIGUAL        reduce using rule 59 (f_p -> .)
    MAYIGUAL        reduce using rule 59 (f_p -> .)
    IGUALQUE        reduce using rule 59 (f_p -> .)
    NIGUALQUE       reduce using rule 59 (f_p -> .)
    AND             reduce using rule 59 (f_p -> .)
    OR              reduce using rule 59 (f_p -> .)
    PARDER          reduce using rule 59 (f_p -> .)
    PTCOMA          reduce using rule 59 (f_p -> .)
    CORDER          reduce using rule 59 (f_p -> .)

  ! MENOS           [ reduce using rule 59 (f_p -> .) ]
  ! MAS             [ reduce using rule 59 (f_p -> .) ]

    f_p                            shift and go to state 167

state 141

    (61) g_p -> POR h . g_p
    (61) g_p -> . POR h g_p
    (62) g_p -> . DIVIDIDO h g_p
    (63) g_p -> . RESIDUO h g_p
    (64) g_p -> .

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESIDUO resolved as shift
    POR             shift and go to state 105
    DIVIDIDO        shift and go to state 106
    RESIDUO         shift and go to state 107
    IMPRIMIR        reduce using rule 64 (g_p -> .)
    TEMP            reduce using rule 64 (g_p -> .)
    PILA            reduce using rule 64 (g_p -> .)
    PARAM           reduce using rule 64 (g_p -> .)
    VAL             reduce using rule 64 (g_p -> .)
    DIR             reduce using rule 64 (g_p -> .)
    PUNTERO         reduce using rule 64 (g_p -> .)
    UNSET           reduce using rule 64 (g_p -> .)
    IF              reduce using rule 64 (g_p -> .)
    ID              reduce using rule 64 (g_p -> .)
    EXIT            reduce using rule 64 (g_p -> .)
    NOT             reduce using rule 64 (g_p -> .)
    NOTBIT          reduce using rule 64 (g_p -> .)
    PARIZQ          reduce using rule 64 (g_p -> .)
    MENOS           reduce using rule 64 (g_p -> .)
    ABS             reduce using rule 64 (g_p -> .)
    GOTO            reduce using rule 64 (g_p -> .)
    ENTERO          reduce using rule 64 (g_p -> .)
    DECIMAL         reduce using rule 64 (g_p -> .)
    CADENA          reduce using rule 64 (g_p -> .)
    CARACTER        reduce using rule 64 (g_p -> .)
    ARRAY           reduce using rule 64 (g_p -> .)
    $end            reduce using rule 64 (g_p -> .)
    MAS             reduce using rule 64 (g_p -> .)
    MENQUE          reduce using rule 64 (g_p -> .)
    MAYQUE          reduce using rule 64 (g_p -> .)
    MENIGUAL        reduce using rule 64 (g_p -> .)
    MAYIGUAL        reduce using rule 64 (g_p -> .)
    IGUALQUE        reduce using rule 64 (g_p -> .)
    NIGUALQUE       reduce using rule 64 (g_p -> .)
    AND             reduce using rule 64 (g_p -> .)
    OR              reduce using rule 64 (g_p -> .)
    PARDER          reduce using rule 64 (g_p -> .)
    PTCOMA          reduce using rule 64 (g_p -> .)
    CORDER          reduce using rule 64 (g_p -> .)

  ! POR             [ reduce using rule 64 (g_p -> .) ]
  ! DIVIDIDO        [ reduce using rule 64 (g_p -> .) ]
  ! RESIDUO         [ reduce using rule 64 (g_p -> .) ]

    g_p                            shift and go to state 168

state 142

    (62) g_p -> DIVIDIDO h . g_p
    (61) g_p -> . POR h g_p
    (62) g_p -> . DIVIDIDO h g_p
    (63) g_p -> . RESIDUO h g_p
    (64) g_p -> .

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESIDUO resolved as shift
    POR             shift and go to state 105
    DIVIDIDO        shift and go to state 106
    RESIDUO         shift and go to state 107
    IMPRIMIR        reduce using rule 64 (g_p -> .)
    TEMP            reduce using rule 64 (g_p -> .)
    PILA            reduce using rule 64 (g_p -> .)
    PARAM           reduce using rule 64 (g_p -> .)
    VAL             reduce using rule 64 (g_p -> .)
    DIR             reduce using rule 64 (g_p -> .)
    PUNTERO         reduce using rule 64 (g_p -> .)
    UNSET           reduce using rule 64 (g_p -> .)
    IF              reduce using rule 64 (g_p -> .)
    ID              reduce using rule 64 (g_p -> .)
    EXIT            reduce using rule 64 (g_p -> .)
    NOT             reduce using rule 64 (g_p -> .)
    NOTBIT          reduce using rule 64 (g_p -> .)
    PARIZQ          reduce using rule 64 (g_p -> .)
    MENOS           reduce using rule 64 (g_p -> .)
    ABS             reduce using rule 64 (g_p -> .)
    GOTO            reduce using rule 64 (g_p -> .)
    ENTERO          reduce using rule 64 (g_p -> .)
    DECIMAL         reduce using rule 64 (g_p -> .)
    CADENA          reduce using rule 64 (g_p -> .)
    CARACTER        reduce using rule 64 (g_p -> .)
    ARRAY           reduce using rule 64 (g_p -> .)
    $end            reduce using rule 64 (g_p -> .)
    MAS             reduce using rule 64 (g_p -> .)
    MENQUE          reduce using rule 64 (g_p -> .)
    MAYQUE          reduce using rule 64 (g_p -> .)
    MENIGUAL        reduce using rule 64 (g_p -> .)
    MAYIGUAL        reduce using rule 64 (g_p -> .)
    IGUALQUE        reduce using rule 64 (g_p -> .)
    NIGUALQUE       reduce using rule 64 (g_p -> .)
    AND             reduce using rule 64 (g_p -> .)
    OR              reduce using rule 64 (g_p -> .)
    PARDER          reduce using rule 64 (g_p -> .)
    PTCOMA          reduce using rule 64 (g_p -> .)
    CORDER          reduce using rule 64 (g_p -> .)

  ! POR             [ reduce using rule 64 (g_p -> .) ]
  ! DIVIDIDO        [ reduce using rule 64 (g_p -> .) ]
  ! RESIDUO         [ reduce using rule 64 (g_p -> .) ]

    g_p                            shift and go to state 169

state 143

    (63) g_p -> RESIDUO h . g_p
    (61) g_p -> . POR h g_p
    (62) g_p -> . DIVIDIDO h g_p
    (63) g_p -> . RESIDUO h g_p
    (64) g_p -> .

  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for RESIDUO resolved as shift
    POR             shift and go to state 105
    DIVIDIDO        shift and go to state 106
    RESIDUO         shift and go to state 107
    IMPRIMIR        reduce using rule 64 (g_p -> .)
    TEMP            reduce using rule 64 (g_p -> .)
    PILA            reduce using rule 64 (g_p -> .)
    PARAM           reduce using rule 64 (g_p -> .)
    VAL             reduce using rule 64 (g_p -> .)
    DIR             reduce using rule 64 (g_p -> .)
    PUNTERO         reduce using rule 64 (g_p -> .)
    UNSET           reduce using rule 64 (g_p -> .)
    IF              reduce using rule 64 (g_p -> .)
    ID              reduce using rule 64 (g_p -> .)
    EXIT            reduce using rule 64 (g_p -> .)
    NOT             reduce using rule 64 (g_p -> .)
    NOTBIT          reduce using rule 64 (g_p -> .)
    PARIZQ          reduce using rule 64 (g_p -> .)
    MENOS           reduce using rule 64 (g_p -> .)
    ABS             reduce using rule 64 (g_p -> .)
    GOTO            reduce using rule 64 (g_p -> .)
    ENTERO          reduce using rule 64 (g_p -> .)
    DECIMAL         reduce using rule 64 (g_p -> .)
    CADENA          reduce using rule 64 (g_p -> .)
    CARACTER        reduce using rule 64 (g_p -> .)
    ARRAY           reduce using rule 64 (g_p -> .)
    $end            reduce using rule 64 (g_p -> .)
    MAS             reduce using rule 64 (g_p -> .)
    MENQUE          reduce using rule 64 (g_p -> .)
    MAYQUE          reduce using rule 64 (g_p -> .)
    MENIGUAL        reduce using rule 64 (g_p -> .)
    MAYIGUAL        reduce using rule 64 (g_p -> .)
    IGUALQUE        reduce using rule 64 (g_p -> .)
    NIGUALQUE       reduce using rule 64 (g_p -> .)
    AND             reduce using rule 64 (g_p -> .)
    OR              reduce using rule 64 (g_p -> .)
    PARDER          reduce using rule 64 (g_p -> .)
    PTCOMA          reduce using rule 64 (g_p -> .)
    CORDER          reduce using rule 64 (g_p -> .)

  ! POR             [ reduce using rule 64 (g_p -> .) ]
  ! DIVIDIDO        [ reduce using rule 64 (g_p -> .) ]
  ! RESIDUO         [ reduce using rule 64 (g_p -> .) ]

    g_p                            shift and go to state 170

state 144

    (21) asignacion_temp -> TEMP IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    IF              reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    ID              reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)
    $end            reduce using rule 21 (asignacion_temp -> TEMP IGUAL expresiones PTCOMA .)


state 145

    (27) asignacion_temp -> TEMP dimensiones IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 171


state 146

    (32) dimensiones_p -> dimension dimensiones_p .

    IGUAL           reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    IMPRIMIR        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    TEMP            reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PILA            reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PARAM           reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    VAL             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    DIR             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PUNTERO         reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    UNSET           reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    IF              reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    ID              reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    EXIT            reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    NOT             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    NOTBIT          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PARIZQ          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MENOS           reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    ABS             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    GOTO            reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    ENTERO          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    DECIMAL         reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    CADENA          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    CARACTER        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    ARRAY           reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    $end            reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    POR             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    DIVIDIDO        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    RESIDUO         reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MAS             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MENQUE          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MAYQUE          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MENIGUAL        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    MAYIGUAL        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    IGUALQUE        reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    NIGUALQUE       reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    AND             reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    OR              reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PARDER          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    PTCOMA          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)
    CORDER          reduce using rule 32 (dimensiones_p -> dimension dimensiones_p .)


state 147

    (34) dimension -> CORIZQ h CORDER .

    CORIZQ          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    IGUAL           reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    IMPRIMIR        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    TEMP            reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PILA            reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PARAM           reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    VAL             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    DIR             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PUNTERO         reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    UNSET           reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    IF              reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    ID              reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    EXIT            reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    NOT             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    NOTBIT          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PARIZQ          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MENOS           reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    ABS             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    GOTO            reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    ENTERO          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    DECIMAL         reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    CADENA          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    CARACTER        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    ARRAY           reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    $end            reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    POR             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    DIVIDIDO        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    RESIDUO         reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MAS             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MENQUE          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MAYQUE          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MENIGUAL        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    MAYIGUAL        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    IGUALQUE        reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    NIGUALQUE       reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    AND             reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    OR              reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PARDER          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    PTCOMA          reduce using rule 34 (dimension -> CORIZQ h CORDER .)
    CORDER          reduce using rule 34 (dimension -> CORIZQ h CORDER .)


state 148

    (28) asignacion_temp -> PILA dimensiones IGUAL expresiones . PTCOMA

    PTCOMA          shift and go to state 172


state 149

    (25) asignacion_pila -> PILA IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    IF              reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    ID              reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)
    $end            reduce using rule 25 (asignacion_pila -> PILA IGUAL expresiones PTCOMA .)


state 150

    (22) asignacion_param -> PARAM IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    IF              reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    ID              reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)
    $end            reduce using rule 22 (asignacion_param -> PARAM IGUAL expresiones PTCOMA .)


state 151

    (23) asignacion_val -> VAL IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    IF              reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    ID              reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)
    $end            reduce using rule 23 (asignacion_val -> VAL IGUAL expresiones PTCOMA .)


state 152

    (24) asignacion_dir -> DIR IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    IF              reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    ID              reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)
    $end            reduce using rule 24 (asignacion_dir -> DIR IGUAL expresiones PTCOMA .)


state 153

    (26) asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    IF              reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    ID              reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)
    $end            reduce using rule 26 (asignacion_puntero -> PUNTERO IGUAL expresiones PTCOMA .)


state 154

    (20) borrar_temp -> UNSET PARIZQ expresiones PARDER . PTCOMA

    PTCOMA          shift and go to state 173


state 155

    (35) if_instr -> IF PARIZQ expresiones PARDER . h
    (29) h -> . TEMP dimensiones
    (30) h -> . PILA dimensiones
    (65) h -> . NOT expresiones
    (66) h -> . NOTBIT expresiones
    (67) h -> . PARIZQ INT PARDER expresiones
    (68) h -> . PARIZQ FLOAT PARDER expresiones
    (69) h -> . PARIZQ CHAR PARDER expresiones
    (70) h -> . MENOS expresiones
    (71) h -> . ABS PARIZQ expresiones PARDER
    (72) h -> . PARIZQ expresiones PARDER
    (74) h -> . GOTO expresiones PTCOMA
    (75) h -> . ENTERO
    (76) h -> . DECIMAL
    (77) h -> . TEMP
    (78) h -> . ID
    (79) h -> . PARAM
    (80) h -> . VAL
    (81) h -> . DIR
    (82) h -> . PILA
    (83) h -> . PUNTERO
    (84) h -> . CADENA
    (85) h -> . CARACTER
    (86) h -> . ARRAY PARIZQ PARDER

    TEMP            shift and go to state 54
    PILA            shift and go to state 55
    NOT             shift and go to state 29
    NOTBIT          shift and go to state 30
    PARIZQ          shift and go to state 17
    MENOS           shift and go to state 31
    ABS             shift and go to state 32
    GOTO            shift and go to state 33
    ENTERO          shift and go to state 34
    DECIMAL         shift and go to state 35
    ID              shift and go to state 56
    PARAM           shift and go to state 57
    VAL             shift and go to state 58
    DIR             shift and go to state 59
    PUNTERO         shift and go to state 60
    CADENA          shift and go to state 36
    CARACTER        shift and go to state 37
    ARRAY           shift and go to state 38

    h                              shift and go to state 174

state 156

    (71) h -> ABS PARIZQ expresiones PARDER .

    IMPRIMIR        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    TEMP            reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PILA            reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PARAM           reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    VAL             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    DIR             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PUNTERO         reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    UNSET           reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    IF              reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    ID              reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    EXIT            reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    NOT             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    NOTBIT          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PARIZQ          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MENOS           reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    ABS             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    GOTO            reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    ENTERO          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    DECIMAL         reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    CADENA          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    CARACTER        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    ARRAY           reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    $end            reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    POR             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    DIVIDIDO        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    RESIDUO         reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MAS             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MENQUE          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MAYQUE          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MENIGUAL        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    MAYIGUAL        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    IGUALQUE        reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    NIGUALQUE       reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    AND             reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    OR              reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PARDER          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    PTCOMA          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)
    CORDER          reduce using rule 71 (h -> ABS PARIZQ expresiones PARDER .)


state 157

    (19) imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .

    IMPRIMIR        reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    TEMP            reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    PILA            reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    PARAM           reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    VAL             reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    DIR             reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    PUNTERO         reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    UNSET           reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    IF              reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    ID              reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    EXIT            reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    NOT             reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    NOTBIT          reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    PARIZQ          reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    MENOS           reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    ABS             reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    ENTERO          reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    DECIMAL         reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    CADENA          reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    CARACTER        reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    ARRAY           reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)
    $end            reduce using rule 19 (imprimir_instr -> IMPRIMIR PARIZQ expresiones PARDER PTCOMA .)


state 158

    (41) a_p -> OR b a_p .

    IMPRIMIR        reduce using rule 41 (a_p -> OR b a_p .)
    TEMP            reduce using rule 41 (a_p -> OR b a_p .)
    PILA            reduce using rule 41 (a_p -> OR b a_p .)
    PARAM           reduce using rule 41 (a_p -> OR b a_p .)
    VAL             reduce using rule 41 (a_p -> OR b a_p .)
    DIR             reduce using rule 41 (a_p -> OR b a_p .)
    PUNTERO         reduce using rule 41 (a_p -> OR b a_p .)
    UNSET           reduce using rule 41 (a_p -> OR b a_p .)
    IF              reduce using rule 41 (a_p -> OR b a_p .)
    ID              reduce using rule 41 (a_p -> OR b a_p .)
    EXIT            reduce using rule 41 (a_p -> OR b a_p .)
    NOT             reduce using rule 41 (a_p -> OR b a_p .)
    NOTBIT          reduce using rule 41 (a_p -> OR b a_p .)
    PARIZQ          reduce using rule 41 (a_p -> OR b a_p .)
    MENOS           reduce using rule 41 (a_p -> OR b a_p .)
    ABS             reduce using rule 41 (a_p -> OR b a_p .)
    GOTO            reduce using rule 41 (a_p -> OR b a_p .)
    ENTERO          reduce using rule 41 (a_p -> OR b a_p .)
    DECIMAL         reduce using rule 41 (a_p -> OR b a_p .)
    CADENA          reduce using rule 41 (a_p -> OR b a_p .)
    CARACTER        reduce using rule 41 (a_p -> OR b a_p .)
    ARRAY           reduce using rule 41 (a_p -> OR b a_p .)
    $end            reduce using rule 41 (a_p -> OR b a_p .)
    POR             reduce using rule 41 (a_p -> OR b a_p .)
    DIVIDIDO        reduce using rule 41 (a_p -> OR b a_p .)
    RESIDUO         reduce using rule 41 (a_p -> OR b a_p .)
    MAS             reduce using rule 41 (a_p -> OR b a_p .)
    MENQUE          reduce using rule 41 (a_p -> OR b a_p .)
    MAYQUE          reduce using rule 41 (a_p -> OR b a_p .)
    MENIGUAL        reduce using rule 41 (a_p -> OR b a_p .)
    MAYIGUAL        reduce using rule 41 (a_p -> OR b a_p .)
    IGUALQUE        reduce using rule 41 (a_p -> OR b a_p .)
    NIGUALQUE       reduce using rule 41 (a_p -> OR b a_p .)
    AND             reduce using rule 41 (a_p -> OR b a_p .)
    OR              reduce using rule 41 (a_p -> OR b a_p .)
    PARDER          reduce using rule 41 (a_p -> OR b a_p .)
    PTCOMA          reduce using rule 41 (a_p -> OR b a_p .)
    CORDER          reduce using rule 41 (a_p -> OR b a_p .)


state 159

    (44) b_p -> AND c b_p .

    IMPRIMIR        reduce using rule 44 (b_p -> AND c b_p .)
    TEMP            reduce using rule 44 (b_p -> AND c b_p .)
    PILA            reduce using rule 44 (b_p -> AND c b_p .)
    PARAM           reduce using rule 44 (b_p -> AND c b_p .)
    VAL             reduce using rule 44 (b_p -> AND c b_p .)
    DIR             reduce using rule 44 (b_p -> AND c b_p .)
    PUNTERO         reduce using rule 44 (b_p -> AND c b_p .)
    UNSET           reduce using rule 44 (b_p -> AND c b_p .)
    IF              reduce using rule 44 (b_p -> AND c b_p .)
    ID              reduce using rule 44 (b_p -> AND c b_p .)
    EXIT            reduce using rule 44 (b_p -> AND c b_p .)
    NOT             reduce using rule 44 (b_p -> AND c b_p .)
    NOTBIT          reduce using rule 44 (b_p -> AND c b_p .)
    PARIZQ          reduce using rule 44 (b_p -> AND c b_p .)
    MENOS           reduce using rule 44 (b_p -> AND c b_p .)
    ABS             reduce using rule 44 (b_p -> AND c b_p .)
    GOTO            reduce using rule 44 (b_p -> AND c b_p .)
    ENTERO          reduce using rule 44 (b_p -> AND c b_p .)
    DECIMAL         reduce using rule 44 (b_p -> AND c b_p .)
    CADENA          reduce using rule 44 (b_p -> AND c b_p .)
    CARACTER        reduce using rule 44 (b_p -> AND c b_p .)
    ARRAY           reduce using rule 44 (b_p -> AND c b_p .)
    $end            reduce using rule 44 (b_p -> AND c b_p .)
    POR             reduce using rule 44 (b_p -> AND c b_p .)
    DIVIDIDO        reduce using rule 44 (b_p -> AND c b_p .)
    RESIDUO         reduce using rule 44 (b_p -> AND c b_p .)
    MAS             reduce using rule 44 (b_p -> AND c b_p .)
    MENQUE          reduce using rule 44 (b_p -> AND c b_p .)
    MAYQUE          reduce using rule 44 (b_p -> AND c b_p .)
    MENIGUAL        reduce using rule 44 (b_p -> AND c b_p .)
    MAYIGUAL        reduce using rule 44 (b_p -> AND c b_p .)
    IGUALQUE        reduce using rule 44 (b_p -> AND c b_p .)
    NIGUALQUE       reduce using rule 44 (b_p -> AND c b_p .)
    AND             reduce using rule 44 (b_p -> AND c b_p .)
    OR              reduce using rule 44 (b_p -> AND c b_p .)
    PARDER          reduce using rule 44 (b_p -> AND c b_p .)
    PTCOMA          reduce using rule 44 (b_p -> AND c b_p .)
    CORDER          reduce using rule 44 (b_p -> AND c b_p .)


state 160

    (47) c_p -> IGUALQUE e c_p .

    IMPRIMIR        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    TEMP            reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PILA            reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PARAM           reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    VAL             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    DIR             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PUNTERO         reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    UNSET           reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    IF              reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    ID              reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    EXIT            reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    NOT             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    NOTBIT          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PARIZQ          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MENOS           reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    ABS             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    GOTO            reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    ENTERO          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    DECIMAL         reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    CADENA          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    CARACTER        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    ARRAY           reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    $end            reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    POR             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    DIVIDIDO        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    RESIDUO         reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MAS             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MENQUE          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MAYQUE          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MENIGUAL        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    MAYIGUAL        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    IGUALQUE        reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    NIGUALQUE       reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    AND             reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    OR              reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PARDER          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    PTCOMA          reduce using rule 47 (c_p -> IGUALQUE e c_p .)
    CORDER          reduce using rule 47 (c_p -> IGUALQUE e c_p .)


state 161

    (48) c_p -> NIGUALQUE e c_p .

    IMPRIMIR        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    TEMP            reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PILA            reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PARAM           reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    VAL             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    DIR             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PUNTERO         reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    UNSET           reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    IF              reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    ID              reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    EXIT            reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    NOT             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    NOTBIT          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PARIZQ          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MENOS           reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    ABS             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    GOTO            reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    ENTERO          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    DECIMAL         reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    CADENA          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    CARACTER        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    ARRAY           reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    $end            reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    POR             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    DIVIDIDO        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    RESIDUO         reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MAS             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MENQUE          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MAYQUE          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MENIGUAL        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    MAYIGUAL        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    IGUALQUE        reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    NIGUALQUE       reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    AND             reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    OR              reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PARDER          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    PTCOMA          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)
    CORDER          reduce using rule 48 (c_p -> NIGUALQUE e c_p .)


state 162

    (51) e_p -> MENQUE f e_p .

    IMPRIMIR        reduce using rule 51 (e_p -> MENQUE f e_p .)
    TEMP            reduce using rule 51 (e_p -> MENQUE f e_p .)
    PILA            reduce using rule 51 (e_p -> MENQUE f e_p .)
    PARAM           reduce using rule 51 (e_p -> MENQUE f e_p .)
    VAL             reduce using rule 51 (e_p -> MENQUE f e_p .)
    DIR             reduce using rule 51 (e_p -> MENQUE f e_p .)
    PUNTERO         reduce using rule 51 (e_p -> MENQUE f e_p .)
    UNSET           reduce using rule 51 (e_p -> MENQUE f e_p .)
    IF              reduce using rule 51 (e_p -> MENQUE f e_p .)
    ID              reduce using rule 51 (e_p -> MENQUE f e_p .)
    EXIT            reduce using rule 51 (e_p -> MENQUE f e_p .)
    NOT             reduce using rule 51 (e_p -> MENQUE f e_p .)
    NOTBIT          reduce using rule 51 (e_p -> MENQUE f e_p .)
    PARIZQ          reduce using rule 51 (e_p -> MENQUE f e_p .)
    MENOS           reduce using rule 51 (e_p -> MENQUE f e_p .)
    ABS             reduce using rule 51 (e_p -> MENQUE f e_p .)
    GOTO            reduce using rule 51 (e_p -> MENQUE f e_p .)
    ENTERO          reduce using rule 51 (e_p -> MENQUE f e_p .)
    DECIMAL         reduce using rule 51 (e_p -> MENQUE f e_p .)
    CADENA          reduce using rule 51 (e_p -> MENQUE f e_p .)
    CARACTER        reduce using rule 51 (e_p -> MENQUE f e_p .)
    ARRAY           reduce using rule 51 (e_p -> MENQUE f e_p .)
    $end            reduce using rule 51 (e_p -> MENQUE f e_p .)
    POR             reduce using rule 51 (e_p -> MENQUE f e_p .)
    DIVIDIDO        reduce using rule 51 (e_p -> MENQUE f e_p .)
    RESIDUO         reduce using rule 51 (e_p -> MENQUE f e_p .)
    MAS             reduce using rule 51 (e_p -> MENQUE f e_p .)
    MENQUE          reduce using rule 51 (e_p -> MENQUE f e_p .)
    MAYQUE          reduce using rule 51 (e_p -> MENQUE f e_p .)
    MENIGUAL        reduce using rule 51 (e_p -> MENQUE f e_p .)
    MAYIGUAL        reduce using rule 51 (e_p -> MENQUE f e_p .)
    IGUALQUE        reduce using rule 51 (e_p -> MENQUE f e_p .)
    NIGUALQUE       reduce using rule 51 (e_p -> MENQUE f e_p .)
    AND             reduce using rule 51 (e_p -> MENQUE f e_p .)
    OR              reduce using rule 51 (e_p -> MENQUE f e_p .)
    PARDER          reduce using rule 51 (e_p -> MENQUE f e_p .)
    PTCOMA          reduce using rule 51 (e_p -> MENQUE f e_p .)
    CORDER          reduce using rule 51 (e_p -> MENQUE f e_p .)


state 163

    (52) e_p -> MAYQUE f e_p .

    IMPRIMIR        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    TEMP            reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PILA            reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PARAM           reduce using rule 52 (e_p -> MAYQUE f e_p .)
    VAL             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    DIR             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PUNTERO         reduce using rule 52 (e_p -> MAYQUE f e_p .)
    UNSET           reduce using rule 52 (e_p -> MAYQUE f e_p .)
    IF              reduce using rule 52 (e_p -> MAYQUE f e_p .)
    ID              reduce using rule 52 (e_p -> MAYQUE f e_p .)
    EXIT            reduce using rule 52 (e_p -> MAYQUE f e_p .)
    NOT             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    NOTBIT          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PARIZQ          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MENOS           reduce using rule 52 (e_p -> MAYQUE f e_p .)
    ABS             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    GOTO            reduce using rule 52 (e_p -> MAYQUE f e_p .)
    ENTERO          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    DECIMAL         reduce using rule 52 (e_p -> MAYQUE f e_p .)
    CADENA          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    CARACTER        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    ARRAY           reduce using rule 52 (e_p -> MAYQUE f e_p .)
    $end            reduce using rule 52 (e_p -> MAYQUE f e_p .)
    POR             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    DIVIDIDO        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    RESIDUO         reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MAS             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MENQUE          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MAYQUE          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MENIGUAL        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    MAYIGUAL        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    IGUALQUE        reduce using rule 52 (e_p -> MAYQUE f e_p .)
    NIGUALQUE       reduce using rule 52 (e_p -> MAYQUE f e_p .)
    AND             reduce using rule 52 (e_p -> MAYQUE f e_p .)
    OR              reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PARDER          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    PTCOMA          reduce using rule 52 (e_p -> MAYQUE f e_p .)
    CORDER          reduce using rule 52 (e_p -> MAYQUE f e_p .)


state 164

    (53) e_p -> MENIGUAL f e_p .

    IMPRIMIR        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    TEMP            reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PILA            reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PARAM           reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    VAL             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    DIR             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PUNTERO         reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    UNSET           reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    IF              reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    ID              reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    EXIT            reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    NOT             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    NOTBIT          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PARIZQ          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MENOS           reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    ABS             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    GOTO            reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    ENTERO          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    DECIMAL         reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    CADENA          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    CARACTER        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    ARRAY           reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    $end            reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    POR             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    DIVIDIDO        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    RESIDUO         reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MAS             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MENQUE          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MAYQUE          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MENIGUAL        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    MAYIGUAL        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    IGUALQUE        reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    NIGUALQUE       reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    AND             reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    OR              reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PARDER          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    PTCOMA          reduce using rule 53 (e_p -> MENIGUAL f e_p .)
    CORDER          reduce using rule 53 (e_p -> MENIGUAL f e_p .)


state 165

    (54) e_p -> MAYIGUAL f e_p .

    IMPRIMIR        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    TEMP            reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PILA            reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PARAM           reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    VAL             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    DIR             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PUNTERO         reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    UNSET           reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    IF              reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    ID              reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    EXIT            reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    NOT             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    NOTBIT          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PARIZQ          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MENOS           reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    ABS             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    GOTO            reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    ENTERO          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    DECIMAL         reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    CADENA          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    CARACTER        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    ARRAY           reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    $end            reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    POR             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    DIVIDIDO        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    RESIDUO         reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MAS             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MENQUE          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MAYQUE          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MENIGUAL        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    MAYIGUAL        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    IGUALQUE        reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    NIGUALQUE       reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    AND             reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    OR              reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PARDER          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    PTCOMA          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)
    CORDER          reduce using rule 54 (e_p -> MAYIGUAL f e_p .)


state 166

    (57) f_p -> MAS g f_p .

    IMPRIMIR        reduce using rule 57 (f_p -> MAS g f_p .)
    TEMP            reduce using rule 57 (f_p -> MAS g f_p .)
    PILA            reduce using rule 57 (f_p -> MAS g f_p .)
    PARAM           reduce using rule 57 (f_p -> MAS g f_p .)
    VAL             reduce using rule 57 (f_p -> MAS g f_p .)
    DIR             reduce using rule 57 (f_p -> MAS g f_p .)
    PUNTERO         reduce using rule 57 (f_p -> MAS g f_p .)
    UNSET           reduce using rule 57 (f_p -> MAS g f_p .)
    IF              reduce using rule 57 (f_p -> MAS g f_p .)
    ID              reduce using rule 57 (f_p -> MAS g f_p .)
    EXIT            reduce using rule 57 (f_p -> MAS g f_p .)
    NOT             reduce using rule 57 (f_p -> MAS g f_p .)
    NOTBIT          reduce using rule 57 (f_p -> MAS g f_p .)
    PARIZQ          reduce using rule 57 (f_p -> MAS g f_p .)
    MENOS           reduce using rule 57 (f_p -> MAS g f_p .)
    ABS             reduce using rule 57 (f_p -> MAS g f_p .)
    GOTO            reduce using rule 57 (f_p -> MAS g f_p .)
    ENTERO          reduce using rule 57 (f_p -> MAS g f_p .)
    DECIMAL         reduce using rule 57 (f_p -> MAS g f_p .)
    CADENA          reduce using rule 57 (f_p -> MAS g f_p .)
    CARACTER        reduce using rule 57 (f_p -> MAS g f_p .)
    ARRAY           reduce using rule 57 (f_p -> MAS g f_p .)
    $end            reduce using rule 57 (f_p -> MAS g f_p .)
    POR             reduce using rule 57 (f_p -> MAS g f_p .)
    DIVIDIDO        reduce using rule 57 (f_p -> MAS g f_p .)
    RESIDUO         reduce using rule 57 (f_p -> MAS g f_p .)
    MAS             reduce using rule 57 (f_p -> MAS g f_p .)
    MENQUE          reduce using rule 57 (f_p -> MAS g f_p .)
    MAYQUE          reduce using rule 57 (f_p -> MAS g f_p .)
    MENIGUAL        reduce using rule 57 (f_p -> MAS g f_p .)
    MAYIGUAL        reduce using rule 57 (f_p -> MAS g f_p .)
    IGUALQUE        reduce using rule 57 (f_p -> MAS g f_p .)
    NIGUALQUE       reduce using rule 57 (f_p -> MAS g f_p .)
    AND             reduce using rule 57 (f_p -> MAS g f_p .)
    OR              reduce using rule 57 (f_p -> MAS g f_p .)
    PARDER          reduce using rule 57 (f_p -> MAS g f_p .)
    PTCOMA          reduce using rule 57 (f_p -> MAS g f_p .)
    CORDER          reduce using rule 57 (f_p -> MAS g f_p .)


state 167

    (58) f_p -> MENOS g f_p .

    IMPRIMIR        reduce using rule 58 (f_p -> MENOS g f_p .)
    TEMP            reduce using rule 58 (f_p -> MENOS g f_p .)
    PILA            reduce using rule 58 (f_p -> MENOS g f_p .)
    PARAM           reduce using rule 58 (f_p -> MENOS g f_p .)
    VAL             reduce using rule 58 (f_p -> MENOS g f_p .)
    DIR             reduce using rule 58 (f_p -> MENOS g f_p .)
    PUNTERO         reduce using rule 58 (f_p -> MENOS g f_p .)
    UNSET           reduce using rule 58 (f_p -> MENOS g f_p .)
    IF              reduce using rule 58 (f_p -> MENOS g f_p .)
    ID              reduce using rule 58 (f_p -> MENOS g f_p .)
    EXIT            reduce using rule 58 (f_p -> MENOS g f_p .)
    NOT             reduce using rule 58 (f_p -> MENOS g f_p .)
    NOTBIT          reduce using rule 58 (f_p -> MENOS g f_p .)
    PARIZQ          reduce using rule 58 (f_p -> MENOS g f_p .)
    MENOS           reduce using rule 58 (f_p -> MENOS g f_p .)
    ABS             reduce using rule 58 (f_p -> MENOS g f_p .)
    GOTO            reduce using rule 58 (f_p -> MENOS g f_p .)
    ENTERO          reduce using rule 58 (f_p -> MENOS g f_p .)
    DECIMAL         reduce using rule 58 (f_p -> MENOS g f_p .)
    CADENA          reduce using rule 58 (f_p -> MENOS g f_p .)
    CARACTER        reduce using rule 58 (f_p -> MENOS g f_p .)
    ARRAY           reduce using rule 58 (f_p -> MENOS g f_p .)
    $end            reduce using rule 58 (f_p -> MENOS g f_p .)
    POR             reduce using rule 58 (f_p -> MENOS g f_p .)
    DIVIDIDO        reduce using rule 58 (f_p -> MENOS g f_p .)
    RESIDUO         reduce using rule 58 (f_p -> MENOS g f_p .)
    MAS             reduce using rule 58 (f_p -> MENOS g f_p .)
    MENQUE          reduce using rule 58 (f_p -> MENOS g f_p .)
    MAYQUE          reduce using rule 58 (f_p -> MENOS g f_p .)
    MENIGUAL        reduce using rule 58 (f_p -> MENOS g f_p .)
    MAYIGUAL        reduce using rule 58 (f_p -> MENOS g f_p .)
    IGUALQUE        reduce using rule 58 (f_p -> MENOS g f_p .)
    NIGUALQUE       reduce using rule 58 (f_p -> MENOS g f_p .)
    AND             reduce using rule 58 (f_p -> MENOS g f_p .)
    OR              reduce using rule 58 (f_p -> MENOS g f_p .)
    PARDER          reduce using rule 58 (f_p -> MENOS g f_p .)
    PTCOMA          reduce using rule 58 (f_p -> MENOS g f_p .)
    CORDER          reduce using rule 58 (f_p -> MENOS g f_p .)


state 168

    (61) g_p -> POR h g_p .

    IMPRIMIR        reduce using rule 61 (g_p -> POR h g_p .)
    TEMP            reduce using rule 61 (g_p -> POR h g_p .)
    PILA            reduce using rule 61 (g_p -> POR h g_p .)
    PARAM           reduce using rule 61 (g_p -> POR h g_p .)
    VAL             reduce using rule 61 (g_p -> POR h g_p .)
    DIR             reduce using rule 61 (g_p -> POR h g_p .)
    PUNTERO         reduce using rule 61 (g_p -> POR h g_p .)
    UNSET           reduce using rule 61 (g_p -> POR h g_p .)
    IF              reduce using rule 61 (g_p -> POR h g_p .)
    ID              reduce using rule 61 (g_p -> POR h g_p .)
    EXIT            reduce using rule 61 (g_p -> POR h g_p .)
    NOT             reduce using rule 61 (g_p -> POR h g_p .)
    NOTBIT          reduce using rule 61 (g_p -> POR h g_p .)
    PARIZQ          reduce using rule 61 (g_p -> POR h g_p .)
    MENOS           reduce using rule 61 (g_p -> POR h g_p .)
    ABS             reduce using rule 61 (g_p -> POR h g_p .)
    GOTO            reduce using rule 61 (g_p -> POR h g_p .)
    ENTERO          reduce using rule 61 (g_p -> POR h g_p .)
    DECIMAL         reduce using rule 61 (g_p -> POR h g_p .)
    CADENA          reduce using rule 61 (g_p -> POR h g_p .)
    CARACTER        reduce using rule 61 (g_p -> POR h g_p .)
    ARRAY           reduce using rule 61 (g_p -> POR h g_p .)
    $end            reduce using rule 61 (g_p -> POR h g_p .)
    POR             reduce using rule 61 (g_p -> POR h g_p .)
    DIVIDIDO        reduce using rule 61 (g_p -> POR h g_p .)
    RESIDUO         reduce using rule 61 (g_p -> POR h g_p .)
    MAS             reduce using rule 61 (g_p -> POR h g_p .)
    MENQUE          reduce using rule 61 (g_p -> POR h g_p .)
    MAYQUE          reduce using rule 61 (g_p -> POR h g_p .)
    MENIGUAL        reduce using rule 61 (g_p -> POR h g_p .)
    MAYIGUAL        reduce using rule 61 (g_p -> POR h g_p .)
    IGUALQUE        reduce using rule 61 (g_p -> POR h g_p .)
    NIGUALQUE       reduce using rule 61 (g_p -> POR h g_p .)
    AND             reduce using rule 61 (g_p -> POR h g_p .)
    OR              reduce using rule 61 (g_p -> POR h g_p .)
    PARDER          reduce using rule 61 (g_p -> POR h g_p .)
    PTCOMA          reduce using rule 61 (g_p -> POR h g_p .)
    CORDER          reduce using rule 61 (g_p -> POR h g_p .)


state 169

    (62) g_p -> DIVIDIDO h g_p .

    IMPRIMIR        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    TEMP            reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PILA            reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PARAM           reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    VAL             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    DIR             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PUNTERO         reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    UNSET           reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    IF              reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    ID              reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    EXIT            reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    NOT             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    NOTBIT          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PARIZQ          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MENOS           reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    ABS             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    GOTO            reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    ENTERO          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    DECIMAL         reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    CADENA          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    CARACTER        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    ARRAY           reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    $end            reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    POR             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    DIVIDIDO        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    RESIDUO         reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MAS             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MENQUE          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MAYQUE          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MENIGUAL        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    MAYIGUAL        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    IGUALQUE        reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    NIGUALQUE       reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    AND             reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    OR              reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PARDER          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    PTCOMA          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)
    CORDER          reduce using rule 62 (g_p -> DIVIDIDO h g_p .)


state 170

    (63) g_p -> RESIDUO h g_p .

    IMPRIMIR        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    TEMP            reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PILA            reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PARAM           reduce using rule 63 (g_p -> RESIDUO h g_p .)
    VAL             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    DIR             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PUNTERO         reduce using rule 63 (g_p -> RESIDUO h g_p .)
    UNSET           reduce using rule 63 (g_p -> RESIDUO h g_p .)
    IF              reduce using rule 63 (g_p -> RESIDUO h g_p .)
    ID              reduce using rule 63 (g_p -> RESIDUO h g_p .)
    EXIT            reduce using rule 63 (g_p -> RESIDUO h g_p .)
    NOT             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    NOTBIT          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PARIZQ          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MENOS           reduce using rule 63 (g_p -> RESIDUO h g_p .)
    ABS             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    GOTO            reduce using rule 63 (g_p -> RESIDUO h g_p .)
    ENTERO          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    DECIMAL         reduce using rule 63 (g_p -> RESIDUO h g_p .)
    CADENA          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    CARACTER        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    ARRAY           reduce using rule 63 (g_p -> RESIDUO h g_p .)
    $end            reduce using rule 63 (g_p -> RESIDUO h g_p .)
    POR             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    DIVIDIDO        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    RESIDUO         reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MAS             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MENQUE          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MAYQUE          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MENIGUAL        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    MAYIGUAL        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    IGUALQUE        reduce using rule 63 (g_p -> RESIDUO h g_p .)
    NIGUALQUE       reduce using rule 63 (g_p -> RESIDUO h g_p .)
    AND             reduce using rule 63 (g_p -> RESIDUO h g_p .)
    OR              reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PARDER          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    PTCOMA          reduce using rule 63 (g_p -> RESIDUO h g_p .)
    CORDER          reduce using rule 63 (g_p -> RESIDUO h g_p .)


state 171

    (27) asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    IF              reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    ID              reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)
    $end            reduce using rule 27 (asignacion_temp -> TEMP dimensiones IGUAL expresiones PTCOMA .)


state 172

    (28) asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .

    IMPRIMIR        reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    TEMP            reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    PILA            reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    PARAM           reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    VAL             reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    DIR             reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    PUNTERO         reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    UNSET           reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    IF              reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    ID              reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    EXIT            reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    NOT             reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    NOTBIT          reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    PARIZQ          reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    MENOS           reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    ABS             reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    GOTO            reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    ENTERO          reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    DECIMAL         reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    CADENA          reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    CARACTER        reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    ARRAY           reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)
    $end            reduce using rule 28 (asignacion_temp -> PILA dimensiones IGUAL expresiones PTCOMA .)


state 173

    (20) borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .

    IMPRIMIR        reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    TEMP            reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    PILA            reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    PARAM           reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    VAL             reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    DIR             reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    PUNTERO         reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    UNSET           reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    IF              reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    ID              reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    EXIT            reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    NOT             reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    NOTBIT          reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    PARIZQ          reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    MENOS           reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    ABS             reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    GOTO            reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    ENTERO          reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    DECIMAL         reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    CADENA          reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    CARACTER        reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    ARRAY           reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)
    $end            reduce using rule 20 (borrar_temp -> UNSET PARIZQ expresiones PARDER PTCOMA .)


state 174

    (35) if_instr -> IF PARIZQ expresiones PARDER h .

    IMPRIMIR        reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    TEMP            reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    PILA            reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    PARAM           reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    VAL             reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    DIR             reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    PUNTERO         reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    UNSET           reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    IF              reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    ID              reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    EXIT            reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    NOT             reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    NOTBIT          reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    PARIZQ          reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    MENOS           reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    ABS             reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    GOTO            reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    ENTERO          reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    DECIMAL         reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    CADENA          reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    CARACTER        reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    ARRAY           reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)
    $end            reduce using rule 35 (if_instr -> IF PARIZQ expresiones PARDER h .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TEMP in state 46 resolved as shift
WARNING: shift/reduce conflict for PILA in state 46 resolved as shift
WARNING: shift/reduce conflict for NOT in state 46 resolved as shift
WARNING: shift/reduce conflict for NOTBIT in state 46 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 46 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 46 resolved as shift
WARNING: shift/reduce conflict for ABS in state 46 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 46 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 46 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 46 resolved as shift
WARNING: shift/reduce conflict for ID in state 46 resolved as shift
WARNING: shift/reduce conflict for PARAM in state 46 resolved as shift
WARNING: shift/reduce conflict for VAL in state 46 resolved as shift
WARNING: shift/reduce conflict for DIR in state 46 resolved as shift
WARNING: shift/reduce conflict for PUNTERO in state 46 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 46 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 46 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 49 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 50 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 50 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 51 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 51 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 52 resolved as shift
WARNING: shift/reduce conflict for MAS in state 52 resolved as shift
WARNING: shift/reduce conflict for POR in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 53 resolved as shift
WARNING: shift/reduce conflict for RESIDUO in state 53 resolved as shift
WARNING: shift/reduce conflict for TEMP in state 87 resolved as shift
WARNING: shift/reduce conflict for PILA in state 87 resolved as shift
WARNING: shift/reduce conflict for NOT in state 87 resolved as shift
WARNING: shift/reduce conflict for NOTBIT in state 87 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 87 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 87 resolved as shift
WARNING: shift/reduce conflict for ABS in state 87 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 87 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 87 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 87 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
WARNING: shift/reduce conflict for PARAM in state 87 resolved as shift
WARNING: shift/reduce conflict for VAL in state 87 resolved as shift
WARNING: shift/reduce conflict for DIR in state 87 resolved as shift
WARNING: shift/reduce conflict for PUNTERO in state 87 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 87 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 87 resolved as shift
WARNING: shift/reduce conflict for ARRAY in state 87 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 133 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 133 resolved as shift
WARNING: shift/reduce conflict for IGUALQUE in state 134 resolved as shift
WARNING: shift/reduce conflict for NIGUALQUE in state 134 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 135 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 136 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 137 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 137 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MENQUE in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYQUE in state 138 resolved as shift
WARNING: shift/reduce conflict for MENIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYIGUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for MAS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for MAS in state 140 resolved as shift
WARNING: shift/reduce conflict for POR in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 141 resolved as shift
WARNING: shift/reduce conflict for RESIDUO in state 141 resolved as shift
WARNING: shift/reduce conflict for POR in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 142 resolved as shift
WARNING: shift/reduce conflict for RESIDUO in state 142 resolved as shift
WARNING: shift/reduce conflict for POR in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 143 resolved as shift
WARNING: shift/reduce conflict for RESIDUO in state 143 resolved as shift
